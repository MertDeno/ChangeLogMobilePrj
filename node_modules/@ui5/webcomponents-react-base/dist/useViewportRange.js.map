{"version":3,"file":"useViewportRange.js","sources":["../src/hooks/useViewportRange.ts"],"sourcesContent":["import { getCurrentRange, attachMediaHandler, detachMediaHandler } from '@ui5/webcomponents-react-base/dist/Device';\nimport { useEffect, useState } from 'react';\n\nexport const useViewportRange = () => {\n  const [currentRange, setCurrentRange] = useState(getCurrentRange().name);\n\n  useEffect(() => {\n    let isMounted = true;\n    const handler = ({ name: range }) => {\n      if (isMounted === true) {\n        setCurrentRange(range);\n      }\n    };\n    attachMediaHandler(handler);\n    return () => {\n      isMounted = false;\n      detachMediaHandler(handler);\n    };\n  }, [setCurrentRange]);\n\n  return currentRange;\n};\n"],"names":["useViewportRange","useState","getCurrentRange","name","currentRange","setCurrentRange","useEffect","isMounted","handler","range","attachMediaHandler","detachMediaHandler"],"mappings":";;;;IAGaA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,kBAAwCC,QAAQ,CAACC,eAAe,GAAGC,IAAnB,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIC,SAAS,GAAG,IAAhB;;AACA,QAAMC,OAAO,GAAG,SAAVA,OAAU,OAAqB;AAAA,UAAZC,KAAY,QAAlBN,IAAkB;;AACnC,UAAII,SAAS,KAAK,IAAlB,EAAwB;AACtBF,QAAAA,eAAe,CAACI,KAAD,CAAf;AACD;AACF,KAJD;;AAKAC,IAAAA,kBAAkB,CAACF,OAAD,CAAlB;AACA,WAAO,YAAM;AACXD,MAAAA,SAAS,GAAG,KAAZ;AACAI,MAAAA,kBAAkB,CAACH,OAAD,CAAlB;AACD,KAHD;AAID,GAZQ,EAYN,CAACH,eAAD,CAZM,CAAT;AAcA,SAAOD,YAAP;AACD;;;;"}