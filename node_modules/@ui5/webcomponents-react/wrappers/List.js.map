{"version":3,"file":"List.js","sources":["../src/webComponents/List/index.tsx"],"sourcesContent":["import { ListGrowingMode } from '@ui5/webcomponents-react/dist/ListGrowingMode';\nimport { ListMode } from '@ui5/webcomponents-react/dist/ListMode';\nimport { ListSeparators } from '@ui5/webcomponents-react/dist/ListSeparators';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/List.js';\n\ninterface ListAttributes {\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the IDs of the elements that label the input.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the accessible role of the component.\n   */\n  accessibleRole?: string;\n  /**\n   * Defines if the component would display a loading indicator over the list.\n   */\n  busy?: boolean;\n  /**\n   * Defines the delay in milliseconds, after which the busy indicator will show up for this component.\n   */\n  busyDelay?: number;\n  /**\n   * Defines the footer text.\n   */\n  footerText?: string;\n  /**\n   * Defines whether the component will have growing capability either by pressing a `More` button, or via user scroll. In both cases the `onLoadMore` event is fired.\n   *\n   * Available options:\n   *\n   * `Button` - Shows a `More` button at the bottom of the list, pressing of which triggers the `load-more` event.\n   * `Scroll` - The `load-more` event is triggered when the user scrolls to the bottom of the list;\n   * `None` (default) - The growing is off.\n   *\n   * **Restrictions:** `growing=\"Scroll\"` is not supported for Internet Explorer, on IE the component will fallback to `growing=\"Button\"`.\n   */\n  growing?: ListGrowingMode | keyof typeof ListGrowingMode;\n  /**\n   * Defines the component header text.\n   *\n   * **Note:** If `header` is set this property is ignored.\n   */\n  headerText?: string;\n  /**\n   * Determines whether the component is indented.\n   */\n  indent?: boolean;\n  /**\n   * Defines the mode of the component.\n   *\n   * **Note:** Available options are `None`, `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd`, `MultiSelect`, and `Delete`.\n   */\n  mode?: ListMode | keyof typeof ListMode;\n  /**\n   * Defines the text that is displayed when the component contains no items.\n   */\n  noDataText?: string;\n  /**\n   * Defines the item separator style that is used.\n   *\n   * **Notes:**\n   *\n   * *   Avalaible options are `All`, `Inner`, and `None`.\n   * *   When set to `None`, none of the items are separated by horizontal lines.\n   * *   When set to `Inner`, the first item doesn't have a top separator and the last item doesn't have a bottom separator.\n   */\n  separators?: ListSeparators | keyof typeof ListSeparators;\n}\n\nexport interface ListDomRef extends ListAttributes, Ui5DomRef {}\n\nexport interface ListPropTypes extends ListAttributes, CommonProps {\n  /**\n   * Defines the items of the component.\n   *\n   * **Note:** Use `StandardListItem`, `CustomListItem`, and `GroupHeaderListItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the component header.\n   *\n   * **Note:** When `header` is set, the `headerText` property is ignored.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Fired when an item is activated, unless the item's `type` property is set to `Inactive`.\n   */\n  onItemClick?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n  /**\n   * Fired when the `Close` button of any item is clicked\n   *\n   * **Note:** This event is applicable to `NotificationListItem` items only, not to be confused with `item-delete`.\n   */\n  onItemClose?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n  /**\n   * Fired when the Delete button of any item is pressed.\n   *\n   * **Note:** A Delete button is displayed on each item, when the component `mode` property is set to `Delete`.\n   */\n  onItemDelete?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n  /**\n   * Fired when the `Toggle` button of any item is clicked.\n   *\n   * **Note:** This event is applicable to `NotificationListItemBase` items only.\n   */\n  onItemToggle?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n  /**\n   * Fired when the user scrolls to the bottom of the list.\n   *\n   * **Note:** The event is fired when the `growing='Scroll'` property is enabled.\n   */\n  onLoadMore?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (\n    event: Ui5CustomEvent<HTMLElement, { selectedItems: unknown[]; previouslySelectedItems: unknown[] }>\n  ) => void;\n}\n\n/**\n * The `List` component allows displaying a list of items, advanced keyboard handling support for navigating between items, and predefined modes to improve the development efficiency.\n *\n * The `List` is a container for the available list items:\n *\n * *   `StandardListItem`\n * *   `CustomListItem`\n * *   `GroupHeaderListItem`\n *\n *\n *\n * To benefit from the built-in selection mechanism, you can use the available selection modes, such as `SingleSelect`, `MultiSelect` and `Delete`.\n *\n * Additionally, the `List` provides header, footer, and customization for the list item separators.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/List\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst List = withWebComponent<ListPropTypes, ListDomRef>(\n  'ui5-list',\n  [\n    'accessibleName',\n    'accessibleNameRef',\n    'accessibleRole',\n    'busyDelay',\n    'footerText',\n    'growing',\n    'headerText',\n    'mode',\n    'noDataText',\n    'separators'\n  ],\n  ['busy', 'indent'],\n  ['header'],\n  ['item-click', 'item-close', 'item-delete', 'item-toggle', 'load-more', 'selection-change']\n);\n\nList.displayName = 'List';\n\nList.defaultProps = {\n  accessibleRole: 'list',\n  busyDelay: 1000,\n  growing: ListGrowingMode.None,\n  mode: ListMode.None,\n  separators: ListSeparators.All\n};\n\nexport { List };\n"],"names":["List","withWebComponent","displayName","defaultProps","accessibleRole","busyDelay","growing","ListGrowingMode","None","mode","ListMode","separators","ListSeparators","All"],"mappings":";;;;;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,IAAI,GAAGC,gBAAgB,CAC3B,UAD2B,EAE3B,CACE,gBADF,EAEE,mBAFF,EAGE,gBAHF,EAIE,WAJF,EAKE,YALF,EAME,SANF,EAOE,YAPF,EAQE,MARF,EASE,YATF,EAUE,YAVF,CAF2B,EAc3B,CAAC,MAAD,EAAS,QAAT,CAd2B,EAe3B,CAAC,QAAD,CAf2B,EAgB3B,CAAC,YAAD,EAAe,YAAf,EAA6B,aAA7B,EAA4C,aAA5C,EAA2D,WAA3D,EAAwE,kBAAxE,CAhB2B;AAmB7BD,IAAI,CAACE,WAAL,GAAmB,MAAnB;AAEAF,IAAI,CAACG,YAAL,GAAoB;AAClBC,EAAAA,cAAc,EAAE,MADE;AAElBC,EAAAA,SAAS,EAAE,IAFO;AAGlBC,EAAAA,OAAO,EAAEC,eAAe,CAACC,IAHP;AAIlBC,EAAAA,IAAI,EAAEC,QAAQ,CAACF,IAJG;AAKlBG,EAAAA,UAAU,EAAEC,cAAc,CAACC;AALT,CAApB;;;;"}