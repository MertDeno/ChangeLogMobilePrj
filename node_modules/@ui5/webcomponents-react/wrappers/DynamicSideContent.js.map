{"version":3,"file":"DynamicSideContent.js","sources":["../src/webComponents/DynamicSideContent/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { SideContentFallDown } from '@ui5/webcomponents-react/dist/SideContentFallDown';\nimport { SideContentPosition } from '@ui5/webcomponents-react/dist/SideContentPosition';\nimport { SideContentVisibility } from '@ui5/webcomponents-react/dist/SideContentVisibility';\nimport { ReactNode } from 'react';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\n\nimport '@ui5/webcomponents-fiori/dist/DynamicSideContent.js';\n\ninterface DynamicSideContentAttributes {\n  /**\n   * Defines whether the component is in equal split mode. In this mode, the side and the main content take 50:50 percent of the container on all screen sizes except for phone, where the main and side contents are switching visibility using the toggle method.\n   */\n  equalSplit?: boolean;\n  /**\n   * Defines the visibility of the main content.\n   */\n  hideMainContent?: boolean;\n  /**\n   * Defines the visibility of the side content.\n   */\n  hideSideContent?: boolean;\n  /**\n   * Defines on which breakpoints the side content falls down below the main content.\n   *\n   * **The available values are:**\n   *\n   * *   `BelowXL`\n   * *   `BelowL`\n   * *   `BelowM`\n   * *   `OnMinimumWidth`\n   */\n  sideContentFallDown?: SideContentFallDown | keyof typeof SideContentFallDown;\n  /**\n   * Defines whether the side content is positioned before the main content (left side in LTR mode), or after the the main content (right side in LTR mode).\n   *\n   * **The available values are:**\n   *\n   * *   `Start`\n   * *   `End`\n   */\n  sideContentPosition?: SideContentPosition | keyof typeof SideContentPosition;\n  /**\n   * Defines on which breakpoints the side content is visible.\n   *\n   * **The available values are:**\n   *\n   * *   `AlwaysShow`\n   * *   `ShowAboveL`\n   * *   `ShowAboveM`\n   * *   `ShowAboveS`\n   * *   `NeverShow`\n   */\n  sideContentVisibility?: SideContentVisibility | keyof typeof SideContentVisibility;\n}\n\nexport interface DynamicSideContentDomRef extends DynamicSideContentAttributes, Ui5DomRef {\n  /**\n   * Toggles visibility of main and side contents on S screen size (mobile device).\n   *\n   */\n  toggleContents: () => void;\n}\n\nexport interface DynamicSideContentPropTypes extends DynamicSideContentAttributes, CommonProps {\n  /**\n   * Defines the main content.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the side content.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  sideContent?: ReactNode | ReactNode[];\n  /**\n   * Fires when the current breakpoint has been changed.\n   */\n  onLayoutChange?: (\n    event: Ui5CustomEvent<\n      HTMLElement,\n      {\n        currentBreakpoint: string;\n        previousBreakpoint: string;\n        mainContentVisible: boolean;\n        sideContentVisible: boolean;\n      }\n    >\n  ) => void;\n}\n\n/**\n * The DynamicSideContent (`DynamicSideContent`) is a layout component that allows additional content to be displayed in a way that flexibly adapts to different screen sizes. The side content appears in a container next to or directly below the main content (it doesn't overlay). When the side content is triggered, the main content becomes narrower (if appearing side-by-side). The side content contains a separate scrollbar when appearing next to the main content.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/DynamicSideContent\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst DynamicSideContent = withWebComponent<DynamicSideContentPropTypes, DynamicSideContentDomRef>(\n  'ui5-dynamic-side-content',\n  ['sideContentFallDown', 'sideContentPosition', 'sideContentVisibility'],\n  ['equalSplit', 'hideMainContent', 'hideSideContent'],\n  ['sideContent'],\n  ['layout-change']\n);\n\nDynamicSideContent.displayName = 'DynamicSideContent';\n\nDynamicSideContent.defaultProps = {\n  sideContentFallDown: SideContentFallDown.OnMinimumWidth,\n  sideContentPosition: SideContentPosition.End,\n  sideContentVisibility: SideContentVisibility.ShowAboveS\n};\n\nexport { DynamicSideContent };\n"],"names":["DynamicSideContent","withWebComponent","displayName","defaultProps","sideContentFallDown","SideContentFallDown","OnMinimumWidth","sideContentPosition","SideContentPosition","End","sideContentVisibility","SideContentVisibility","ShowAboveS"],"mappings":";;;;;AA8FA;AACA;AACA;AACA;AACA;IACMA,kBAAkB,GAAGC,gBAAgB,CACzC,0BADyC,EAEzC,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,uBAA/C,CAFyC,EAGzC,CAAC,YAAD,EAAe,iBAAf,EAAkC,iBAAlC,CAHyC,EAIzC,CAAC,aAAD,CAJyC,EAKzC,CAAC,eAAD,CALyC;AAQ3CD,kBAAkB,CAACE,WAAnB,GAAiC,oBAAjC;AAEAF,kBAAkB,CAACG,YAAnB,GAAkC;AAChCC,EAAAA,mBAAmB,EAAEC,mBAAmB,CAACC,cADT;AAEhCC,EAAAA,mBAAmB,EAAEC,mBAAmB,CAACC,GAFT;AAGhCC,EAAAA,qBAAqB,EAAEC,qBAAqB,CAACC;AAHb,CAAlC;;;;"}