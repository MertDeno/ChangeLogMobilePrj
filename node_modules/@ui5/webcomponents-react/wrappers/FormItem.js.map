{"version":3,"file":"FormItem.js","sources":["../src/components/FormItem/index.tsx"],"sourcesContent":["import { FlexBox } from '@ui5/webcomponents-react/dist/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/dist/FlexBoxAlignItems';\nimport { FlexBoxDirection } from '@ui5/webcomponents-react/dist/FlexBoxDirection';\nimport { Label, LabelPropTypes } from '@ui5/webcomponents-react/dist/Label';\nimport { WrappingType } from '@ui5/webcomponents-react/dist/WrappingType';\nimport React, { cloneElement, CSSProperties, FC, isValidElement, ReactElement, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { addCustomCSS } from '@ui5/webcomponents-base/dist/Theming.js';\n\nexport interface FormItemPropTypes {\n  /**\n   * Label of the FormItem. Can be either a string or a `Label` component.\n   */\n  label?: string | ReactElement;\n  /**\n   * Content of the FormItem. Can be an arbitrary React Node.\n   */\n  children: ReactNode | ReactNode[];\n}\n\n//TODO: remove this when ui5-webcomponents adjusted this in their repo\naddCustomCSS(\n  'ui5-checkbox',\n  `\n:host .ui5-checkbox-icon {\n position:absolute;\n}\n `\n);\n\ninterface InternalProps extends FormItemPropTypes {\n  columnIndex?: number;\n  labelSpan?: number;\n  rowIndex?: number;\n  lastGroupItem?: boolean;\n}\n\nconst CENTER_ALIGNED_CHILDREN = new Set(['CheckBox', 'RadioButton', 'Switch', 'RangeSlider', 'Slider']);\n\nconst useStyles = createUseStyles(\n  {\n    label: {\n      gridColumnEnd: 'span var(--ui5wcr_form_label_span)',\n      justifySelf: 'var(--ui5wcr_form_label_text_align)',\n      textAlign: 'var(--ui5wcr_form_label_text_align)'\n    },\n    content: {\n      display: 'flex',\n      gridColumnEnd: 'span var(--ui5wcr_form_content_span)'\n    }\n  },\n  { name: 'FormItem' }\n);\n\nconst renderLabel = (label: ReactNode, classes: Record<'label' | 'content', string>, styles: CSSProperties) => {\n  if (typeof label === 'string') {\n    return (\n      <Label className={classes.label} style={styles} wrappingType={WrappingType.Normal}>\n        {label ? `${label}:` : ''}\n      </Label>\n    );\n  }\n\n  if (isValidElement(label)) {\n    const { showColon, wrappingType, className, style, children } = label.props;\n    return cloneElement<LabelPropTypes>(\n      label,\n      {\n        showColon: showColon ?? true,\n        wrappingType: wrappingType ?? WrappingType.Normal,\n        className: `${classes.label} ${className ?? ''}`,\n        style: {\n          gridColumnStart: styles.gridColumnStart,\n          gridRowStart: styles.gridRowStart,\n          ...(style || {})\n        }\n      },\n      children ?? ''\n    );\n  }\n\n  return null;\n};\n/**\n * The `FormItem` is only used for calculating the final layout of the `Form`, thus it doesn't accept any other props than `label` and `children`, especially no `className`, `style` or `ref`.\n */\nconst FormItem: FC<FormItemPropTypes> = (props: FormItemPropTypes) => {\n  const { label, children, columnIndex, rowIndex, labelSpan, lastGroupItem } = props as InternalProps;\n\n  const classes = useStyles();\n\n  const gridColumnStart = (columnIndex ?? 0) * 12 + 1;\n  const gridRowStart = rowIndex ?? 0;\n\n  const contentGridColumnStart =\n    columnIndex != null ? (labelSpan === 12 ? gridColumnStart : gridColumnStart + (labelSpan ?? 0)) : undefined;\n\n  if (labelSpan === 12) {\n    return (\n      <FlexBox\n        direction={FlexBoxDirection.Column}\n        alignItems={FlexBoxAlignItems.Start}\n        style={{ gridColumnStart, gridRowStart, gridColumnEnd: 'span 12', placeItems: 'flex-start' }}\n      >\n        {renderLabel(label, classes, {})}\n        {children}\n      </FlexBox>\n    );\n  }\n\n  const inlineLabelStyles = () => {\n    const styles = { gridColumnStart, gridRowStart };\n    if (CENTER_ALIGNED_CHILDREN.has((children as any)?.type?.displayName)) {\n      return {\n        ...styles,\n        alignSelf: 'center',\n        paddingBottom: lastGroupItem ? '1rem' : 0\n      };\n    }\n    return styles;\n  };\n\n  return (\n    <>\n      {renderLabel(label, classes, inlineLabelStyles())}\n      <div\n        className={classes.content}\n        style={{\n          gridColumnStart: contentGridColumnStart,\n          gridRowStart: labelSpan === 12 ? gridRowStart + 1 : gridRowStart,\n          paddingBottom: lastGroupItem ? '1rem' : 0\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nFormItem.displayName = 'FormItem';\n\nexport { FormItem };\n"],"names":["addCustomCSS","CENTER_ALIGNED_CHILDREN","Set","useStyles","createUseStyles","label","gridColumnEnd","justifySelf","textAlign","content","display","name","renderLabel","classes","styles","WrappingType","Normal","isValidElement","props","showColon","wrappingType","className","style","children","cloneElement","gridColumnStart","gridRowStart","FormItem","columnIndex","rowIndex","labelSpan","lastGroupItem","contentGridColumnStart","undefined","FlexBoxDirection","Column","FlexBoxAlignItems","Start","placeItems","inlineLabelStyles","has","type","displayName","alignSelf","paddingBottom"],"mappings":";;;;;;;;;;AAoBA;AACAA,YAAY,CACV,cADU,4DAAZ;AAgBA,IAAMC,uBAAuB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,UAAD,EAAa,aAAb,EAA4B,QAA5B,EAAsC,aAAtC,EAAqD,QAArD,CAAR,CAAhC;AAEA,IAAMC,SAAS,GAAGC,eAAe,CAC/B;AACEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,oCADV;AAELC,IAAAA,WAAW,EAAE,qCAFR;AAGLC,IAAAA,SAAS,EAAE;AAHN,GADT;AAMEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPJ,IAAAA,aAAa,EAAE;AAFR;AANX,CAD+B,EAY/B;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAZ+B,CAAjC;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACP,KAAD,EAAmBQ,OAAnB,EAAiEC,MAAjE,EAA2F;AAC7G,MAAI,OAAOT,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEQ,OAAO,CAACR,KAA1B;AAAiC,MAAA,KAAK,EAAES,MAAxC;AAAgD,MAAA,YAAY,EAAEC,YAAY,CAACC;AAA3E,OACGX,KAAK,aAAMA,KAAN,SAAiB,EADzB,CADF;AAKD;;AAED,oBAAIY,cAAc,CAACZ,KAAD,CAAlB,EAA2B;AACzB,uBAAgEA,KAAK,CAACa,KAAtE;AAAA,QAAQC,SAAR,gBAAQA,SAAR;AAAA,QAAmBC,YAAnB,gBAAmBA,YAAnB;AAAA,QAAiCC,SAAjC,gBAAiCA,SAAjC;AAAA,QAA4CC,KAA5C,gBAA4CA,KAA5C;AAAA,QAAmDC,QAAnD,gBAAmDA,QAAnD;AACA,wBAAOC,YAAY,CACjBnB,KADiB,EAEjB;AACEc,MAAAA,SAAS,EAAEA,SAAF,aAAEA,SAAF,cAAEA,SAAF,GAAe,IAD1B;AAEEC,MAAAA,YAAY,EAAEA,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkBL,YAAY,CAACC,MAF7C;AAGEK,MAAAA,SAAS,YAAKR,OAAO,CAACR,KAAb,cAAsBgB,SAAtB,aAAsBA,SAAtB,cAAsBA,SAAtB,GAAmC,EAAnC,CAHX;AAIEC,MAAAA,KAAK;AACHG,QAAAA,eAAe,EAAEX,MAAM,CAACW,eADrB;AAEHC,QAAAA,YAAY,EAAEZ,MAAM,CAACY;AAFlB,SAGCJ,KAAK,IAAI,EAHV;AAJP,KAFiB,EAYjBC,QAZiB,aAYjBA,QAZiB,cAYjBA,QAZiB,GAYL,EAZK,CAAnB;AAcD;;AAED,SAAO,IAAP;AACD,CA5BD;AA6BA;AACA;AACA;;;IACMI,QAA+B,GAAG,SAAlCA,QAAkC,CAACT,KAAD,EAA8B;AACpE,aAA6EA,KAA7E;AAAA,MAAQb,KAAR,QAAQA,KAAR;AAAA,MAAekB,QAAf,QAAeA,QAAf;AAAA,MAAyBK,WAAzB,QAAyBA,WAAzB;AAAA,MAAsCC,QAAtC,QAAsCA,QAAtC;AAAA,MAAgDC,SAAhD,QAAgDA,SAAhD;AAAA,MAA2DC,aAA3D,QAA2DA,aAA3D;AAEA,MAAMlB,OAAO,GAAGV,SAAS,EAAzB;AAEA,MAAMsB,eAAe,GAAG,CAACG,WAAD,aAACA,WAAD,cAACA,WAAD,GAAgB,CAAhB,IAAqB,EAArB,GAA0B,CAAlD;AACA,MAAMF,YAAY,GAAGG,QAAH,aAAGA,QAAH,cAAGA,QAAH,GAAe,CAAjC;AAEA,MAAMG,sBAAsB,GAC1BJ,WAAW,IAAI,IAAf,GAAuBE,SAAS,KAAK,EAAd,GAAmBL,eAAnB,GAAqCA,eAAe,IAAIK,SAAJ,aAAIA,SAAJ,cAAIA,SAAJ,GAAiB,CAAjB,CAA3E,GAAkGG,SADpG;;AAGA,MAAIH,SAAS,KAAK,EAAlB,EAAsB;AACpB,wBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAEI,gBAAgB,CAACC,MAD9B;AAEE,MAAA,UAAU,EAAEC,iBAAiB,CAACC,KAFhC;AAGE,MAAA,KAAK,EAAE;AAAEZ,QAAAA,eAAe,EAAfA,eAAF;AAAmBC,QAAAA,YAAY,EAAZA,YAAnB;AAAiCpB,QAAAA,aAAa,EAAE,SAAhD;AAA2DgC,QAAAA,UAAU,EAAE;AAAvE;AAHT,OAKG1B,WAAW,CAACP,KAAD,EAAQQ,OAAR,EAAiB,EAAjB,CALd,EAMGU,QANH,CADF;AAUD;;AAED,MAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC9B,QAAMzB,MAAM,GAAG;AAAEW,MAAAA,eAAe,EAAfA,eAAF;AAAmBC,MAAAA,YAAY,EAAZA;AAAnB,KAAf;;AACA,QAAIzB,uBAAuB,CAACuC,GAAxB,CAA6BjB,QAA7B,aAA6BA,QAA7B,gCAA6BA,QAAD,CAAmBkB,IAA/C,0CAA4B,MAAyBC,WAArD,CAAJ,EAAuE;AACrE,6CACK5B,MADL;AAEE6B,QAAAA,SAAS,EAAE,QAFb;AAGEC,QAAAA,aAAa,EAAEb,aAAa,GAAG,MAAH,GAAY;AAH1C;AAKD;;AACD,WAAOjB,MAAP;AACD,GAVD;;AAYA,sBACE,0CACGF,WAAW,CAACP,KAAD,EAAQQ,OAAR,EAAiB0B,iBAAiB,EAAlC,CADd,eAEE;AACE,IAAA,SAAS,EAAE1B,OAAO,CAACJ,OADrB;AAEE,IAAA,KAAK,EAAE;AACLgB,MAAAA,eAAe,EAAEO,sBADZ;AAELN,MAAAA,YAAY,EAAEI,SAAS,KAAK,EAAd,GAAmBJ,YAAY,GAAG,CAAlC,GAAsCA,YAF/C;AAGLkB,MAAAA,aAAa,EAAEb,aAAa,GAAG,MAAH,GAAY;AAHnC;AAFT,KAQGR,QARH,CAFF,CADF;AAeD;;AAEDI,QAAQ,CAACe,WAAT,GAAuB,UAAvB;;;;"}