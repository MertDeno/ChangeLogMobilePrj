{"version":3,"file":"Label.js","sources":["../src/webComponents/Label/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { WrappingType } from '@ui5/webcomponents-react/dist/WrappingType';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Label.js';\n\ninterface LabelAttributes {\n  /**\n   * Defines the labeled input by providing its ID.\n   *\n   * **Note:** Can be used with both `Input` and native input.\n   */\n  for?: string;\n  /**\n   * Defines whether an asterisk character is added to the component text.\n   *\n   * **Note:** Usually indicates that user input is required.\n   */\n  required?: boolean;\n  /**\n   * Defines whether colon is added to the component text.\n   *\n   * **Note:** Usually used in forms.\n   */\n  showColon?: boolean;\n  /**\n   * Defines how the text of a component will be displayed when there is not enough space. Available options are:\n   *\n   * *   `None` - The text will be truncated with an ellipsis.\n   * *   `Normal` - The text will wrap. The words will not be broken based on hyphenation.\n   */\n  wrappingType?: WrappingType | keyof typeof WrappingType;\n}\n\nexport interface LabelDomRef extends LabelAttributes, Ui5DomRef {}\n\nexport interface LabelPropTypes extends LabelAttributes, CommonProps {\n  /**\n   * Defines the text of the component.\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n}\n\n/**\n * The `Label` is a component used to represent a label, providing valuable information to the user. Usually it is placed next to a value holder, such as a text field. It informs the user about what data is displayed or expected in the value holder.\n *\n * The `Label` appearance can be influenced by properties, such as `required` and `wrappingType`. The appearance of the Label can be configured in a limited way by using the design property. For a broader choice of designs, you can use custom styles.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Label\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Label = withWebComponent<LabelPropTypes, LabelDomRef>(\n  'ui5-label',\n  ['for', 'wrappingType'],\n  ['required', 'showColon'],\n  [],\n  []\n);\n\nLabel.displayName = 'Label';\n\nexport { Label };\n"],"names":["Label","withWebComponent","displayName"],"mappings":";;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,KAAK,GAAGC,gBAAgB,CAC5B,WAD4B,EAE5B,CAAC,KAAD,EAAQ,cAAR,CAF4B,EAG5B,CAAC,UAAD,EAAa,WAAb,CAH4B,EAI5B,EAJ4B,EAK5B,EAL4B;AAQ9BD,KAAK,CAACE,WAAN,GAAoB,OAApB;;;;"}