import _extends from '@babel/runtime/helpers/extends';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import React, { useEffect, forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import clsx from 'clsx';

var useDeprecationNoticeForTooltip = function useDeprecationNoticeForTooltip(component, tooltip) {
  useEffect(function () {
    if (tooltip) {
      deprecationNotice(component, '`tooltip` has been deprecated, please use the native `title` attribute instead.');
    }
  }, [tooltip]);
};

var _ResponsiveGridLayout;

var ResponsiveGridLayoutStyles = (_ResponsiveGridLayout = {
  container: {
    display: 'grid'
  }
}, _defineProperty(_ResponsiveGridLayout, "@media (max-width: 599px)", {
  container: {
    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-s), minmax(0, 1fr))',
    '& > *': {
      gridColumn: 'span var(--_ui5wcr-rgl-column-span-s)'
    }
  }
}), _defineProperty(_ResponsiveGridLayout, "@media (min-width: 600px) and (max-width: 1023px)", {
  container: {
    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-m), minmax(0, 1fr))',
    '& > *': {
      gridColumn: 'span var(--_ui5wcr-rgl-column-span-m)'
    }
  }
}), _defineProperty(_ResponsiveGridLayout, "@media (min-width: 1024px) and (max-width: 1439px)", {
  container: {
    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-l), minmax(0, 1fr))',
    '& > *': {
      gridColumn: 'span var(--_ui5wcr-rgl-column-span-l)'
    }
  }
}), _defineProperty(_ResponsiveGridLayout, "@media (min-width: 1440px)", {
  container: {
    gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-xl), minmax(0, 1fr))',
    '& > *': {
      gridColumn: 'span var(--_ui5wcr-rgl-column-span-xl)'
    }
  }
}), _ResponsiveGridLayout);

var _excluded = ["children", "columnGap", "rowGap", "columnsS", "columnsM", "columnsL", "columnsXL", "columnSpanS", "columnSpanM", "columnSpanL", "columnSpanXL", "style", "className", "tooltip", "title"];
var useStyles = createUseStyles(ResponsiveGridLayoutStyles, {
  name: 'ResponsiveGridLayout'
});
/**
 * The Responsive Grid Layout positions UI elements in a multi column flow layout.
 * They can be configured to display a variable number of columns depending on available screen size.
 * With these controls, it is possible to achieve flexible layouts and line breaks for large, medium,
 * and small-sized screens, such as desktop, tablet, and mobile.
 *
 * @since 0.16.4
 */

var ResponsiveGridLayout = /*#__PURE__*/forwardRef(function (props, ref) {
  var children = props.children,
      columnGap = props.columnGap,
      rowGap = props.rowGap,
      columnsS = props.columnsS,
      columnsM = props.columnsM,
      columnsL = props.columnsL,
      columnsXL = props.columnsXL,
      columnSpanS = props.columnSpanS,
      columnSpanM = props.columnSpanM,
      columnSpanL = props.columnSpanL,
      columnSpanXL = props.columnSpanXL,
      style = props.style,
      className = props.className,
      tooltip = props.tooltip,
      title = props.title,
      rest = _objectWithoutProperties(props, _excluded);

  var classes = useStyles();
  var finalClassNames = clsx(classes.container, className);
  useDeprecationNoticeForTooltip('ResponsiveGridLayout', props.tooltip);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: finalClassNames,
    title: tooltip !== null && tooltip !== void 0 ? tooltip : title,
    style: _objectSpread({
      gridRowGap: rowGap,
      gridColumnGap: columnGap,
      '--_ui5wcr-rgl-columns-s': columnsS,
      '--_ui5wcr-rgl-columns-m': columnsM,
      '--_ui5wcr-rgl-columns-l': columnsL,
      '--_ui5wcr-rgl-columns-xl': columnsXL,
      '--_ui5wcr-rgl-column-span-s': columnSpanS,
      '--_ui5wcr-rgl-column-span-m': columnSpanM,
      '--_ui5wcr-rgl-column-span-l': columnSpanL,
      '--_ui5wcr-rgl-column-span-xl': columnSpanXL
    }, style)
  }, rest), children);
});
ResponsiveGridLayout.displayName = 'ResponsiveGridLayout';
ResponsiveGridLayout.defaultProps = {
  columnGap: '0.5rem',
  rowGap: '0.5rem',
  columnsS: 4,
  columnsM: 8,
  columnsL: 12,
  columnsXL: 16,
  columnSpanS: 1,
  columnSpanM: 1,
  columnSpanL: 1,
  columnSpanXL: 1
};

export { ResponsiveGridLayout };
//# sourceMappingURL=ResponsiveGridLayout.js.map
