{"version":3,"file":"Popover.js","sources":["../src/webComponents/Popover/index.tsx"],"sourcesContent":["import { PopoverHorizontalAlign } from '@ui5/webcomponents-react/dist/PopoverHorizontalAlign';\nimport { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';\nimport { PopoverVerticalAlign } from '@ui5/webcomponents-react/dist/PopoverVerticalAlign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Popover.js';\n\ninterface PopoverAttributes {\n  /**\n   * Determines if there is no enough space, the component can be placed over the target.\n   */\n  allowTargetOverlap?: boolean;\n  /**\n   * Defines the header text.\n   *\n   * **Note:** If `header` slot is provided, the `headerText` is ignored.\n   */\n  headerText?: string;\n  /**\n   * Determines whether the component arrow is hidden.\n   */\n  hideArrow?: boolean;\n  /**\n   * Defines whether the block layer will be shown if modal property is set to true.\n   */\n  hideBackdrop?: boolean;\n  /**\n   * Determines the horizontal alignment of the component.\n   *\n   * Available options are:\n   *\n   * *   `Center`\n   * *   `Left`\n   * *   `Right`\n   * *   `Stretch`\n   */\n  horizontalAlign?: PopoverHorizontalAlign | keyof typeof PopoverHorizontalAlign;\n  /**\n   * Defines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n   */\n  modal?: boolean;\n  /**\n   * Determines on which side the component is placed at.\n   *\n   * Available options are:\n   *\n   * *   `Left`\n   * *   `Right`\n   * *   `Top`\n   * *   `Bottom`\n   */\n  placementType?: PopoverPlacementType | keyof typeof PopoverPlacementType;\n  /**\n   * Determines the vertical alignment of the component.\n   *\n   * Available options are:\n   *\n   * *   `Center`\n   * *   `Top`\n   * *   `Bottom`\n   * *   `Stretch`\n   */\n  verticalAlign?: PopoverVerticalAlign | keyof typeof PopoverVerticalAlign;\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the IDs of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the ID of the HTML Element, which will get the initial focus.\n   */\n  initialFocus?: string;\n  /**\n   * Defines if the focus should be returned to the previously focused element, when the popup closes.\n   */\n  preventFocusRestore?: boolean;\n}\n\nexport interface PopoverDomRef extends PopoverAttributes, Ui5DomRef {\n  /**\n   * Shows the popover.\n   * @param {HTMLElement | EventTarget} opener - the element that the popover is shown at\n   * @param {boolean} [preventInitialFocus] - prevents applying the focus inside the popover\n   */\n  showAt: (opener: HTMLElement | EventTarget, preventInitialFocus?: boolean) => void;\n  /**\n   * Focuses the element denoted by <code>initialFocus</code>, if provided, or the first focusable element otherwise.\n   *\n   */\n  applyFocus: () => void;\n  /**\n   * Hides the block layer (for modal popups only)\n   *\n   */\n  close: () => void;\n  /**\n   * Tells if the component is opened\n   *\n   */\n  isOpen: () => void;\n}\n\nexport interface PopoverPropTypes extends PopoverAttributes, CommonProps {\n  /**\n   * Defines the footer HTML Element.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  footer?: ReactNode | ReactNode[];\n  /**\n   * Defines the header HTML Element.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Defines the content of the Popup.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired after the component is closed. **This event does not bubble.**\n   */\n  onAfterClose?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired after the component is opened. **This event does not bubble.**\n   */\n  onAfterOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. **This event does not bubble.**\n   */\n  onBeforeClose?: (event: Ui5CustomEvent<HTMLElement, { escPressed: boolean }>) => void;\n  /**\n   * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. **This event does not bubble.**\n   */\n  onBeforeOpen?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * The `Popover` component displays additional information for an object in a compact way and without leaving the page. The Popover can contain various UI elements, such as fields, tables, images, and charts. It can also include actions in the footer.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Popover\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Popover = withWebComponent<PopoverPropTypes, PopoverDomRef>(\n  'ui5-popover',\n  [\n    'headerText',\n    'horizontalAlign',\n    'placementType',\n    'verticalAlign',\n    'accessibleName',\n    'accessibleNameRef',\n    'initialFocus'\n  ],\n  ['allowTargetOverlap', 'hideArrow', 'hideBackdrop', 'modal', 'preventFocusRestore'],\n  ['footer', 'header'],\n  ['after-close', 'after-open', 'before-close', 'before-open']\n);\n\nPopover.displayName = 'Popover';\n\nPopover.defaultProps = {\n  horizontalAlign: PopoverHorizontalAlign.Center,\n  placementType: PopoverPlacementType.Right,\n  verticalAlign: PopoverVerticalAlign.Center\n};\n\nexport { Popover };\n"],"names":["Popover","withWebComponent","displayName","defaultProps","horizontalAlign","PopoverHorizontalAlign","Center","placementType","PopoverPlacementType","Right","verticalAlign","PopoverVerticalAlign"],"mappings":";;;;;AAkJA;AACA;AACA;AACA;AACA;IACMA,OAAO,GAAGC,gBAAgB,CAC9B,aAD8B,EAE9B,CACE,YADF,EAEE,iBAFF,EAGE,eAHF,EAIE,eAJF,EAKE,gBALF,EAME,mBANF,EAOE,cAPF,CAF8B,EAW9B,CAAC,oBAAD,EAAuB,WAAvB,EAAoC,cAApC,EAAoD,OAApD,EAA6D,qBAA7D,CAX8B,EAY9B,CAAC,QAAD,EAAW,QAAX,CAZ8B,EAa9B,CAAC,aAAD,EAAgB,YAAhB,EAA8B,cAA9B,EAA8C,aAA9C,CAb8B;AAgBhCD,OAAO,CAACE,WAAR,GAAsB,SAAtB;AAEAF,OAAO,CAACG,YAAR,GAAuB;AACrBC,EAAAA,eAAe,EAAEC,sBAAsB,CAACC,MADnB;AAErBC,EAAAA,aAAa,EAAEC,oBAAoB,CAACC,KAFf;AAGrBC,EAAAA,aAAa,EAAEC,oBAAoB,CAACL;AAHf,CAAvB;;;;"}