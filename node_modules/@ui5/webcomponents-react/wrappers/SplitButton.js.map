{"version":3,"file":"SplitButton.js","sources":["../src/webComponents/SplitButton/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { ReactNode } from 'react';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\n\nimport '@ui5/webcomponents/dist/SplitButton.js';\n\ninterface SplitButtonAttributes {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the icon to be displayed in active state as graphical element within the component.\n   */\n  activeIcon?: string;\n  /**\n   * Defines the component design.\n   *\n   * **The available values are:**\n   *\n   * *   `Default`\n   * *   `Emphasized`\n   * *   `Positive`\n   * *   `Negative`\n   * *   `Transparent`\n   * *   `Attention`\n   */\n  design?: ButtonDesign | keyof typeof ButtonDesign;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n}\n\nexport interface SplitButtonDomRef extends SplitButtonAttributes, Ui5DomRef {}\n\nexport interface SplitButtonPropTypes extends SplitButtonAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the user clicks on the arrow action.\n   */\n  onArrowClick?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  /**\n   * Fired when the user clicks on the default action.\n   */\n  onClick?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * `SplitButton` enables users to trigger actions. It is constructed of two separate actions - default action and arrow action that can be activated by clicking or tapping, or by pressing certain keyboard keys - `Space` or `Enter` for default action, and `Arrow Down` or `Arrow Up` for arrow action.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/SplitButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst SplitButton = withWebComponent<SplitButtonPropTypes, SplitButtonDomRef>(\n  'ui5-split-button',\n  ['accessibleName', 'activeIcon', 'design', 'icon'],\n  ['disabled'],\n  [],\n  ['arrow-click', 'click']\n);\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.defaultProps = {\n  design: ButtonDesign.Default\n};\n\nexport { SplitButton };\n"],"names":["SplitButton","withWebComponent","displayName","defaultProps","design","ButtonDesign","Default"],"mappings":";;;AA8DA;AACA;AACA;AACA;AACA;IACMA,WAAW,GAAGC,gBAAgB,CAClC,kBADkC,EAElC,CAAC,gBAAD,EAAmB,YAAnB,EAAiC,QAAjC,EAA2C,MAA3C,CAFkC,EAGlC,CAAC,UAAD,CAHkC,EAIlC,EAJkC,EAKlC,CAAC,aAAD,EAAgB,OAAhB,CALkC;AAQpCD,WAAW,CAACE,WAAZ,GAA0B,aAA1B;AAEAF,WAAW,CAACG,YAAZ,GAA2B;AACzBC,EAAAA,MAAM,EAAEC,YAAY,CAACC;AADI,CAA3B;;;;"}