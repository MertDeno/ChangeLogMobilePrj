import _extends from '@babel/runtime/helpers/extends';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import { useSyncRef } from '@ui5/webcomponents-react-base/dist/hooks';
import { StandardListItem } from '@ui5/webcomponents-react/dist/StandardListItem';
import { VariantManagementContext } from '@ui5/webcomponents-react/dist/VariantManagementContext';
import React, { forwardRef, useContext, useEffect } from 'react';

/**
 * The `VariantItem` describes a variant/view of the `VariantManagement` component.
 */
var VariantItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var isDefault = props.isDefault,
      author = props.author,
      favorite = props.favorite,
      global = props.global,
      labelReadOnly = props.labelReadOnly,
      applyAutomatically = props.applyAutomatically,
      readOnly = props.readOnly,
      selected = props.selected,
      children = props.children,
      hideDelete = props.hideDelete;

  var _useContext = useContext(VariantManagementContext),
      selectVariantItem = _useContext.selectVariantItem;

  var _useSyncRef = useSyncRef(ref),
      _useSyncRef2 = _slicedToArray(_useSyncRef, 2),
      componentRef = _useSyncRef2[0],
      consolidatedRef = _useSyncRef2[1];

  useEffect(function () {
    if (selected) {
      selectVariantItem(_objectSpread(_objectSpread({}, props), {}, {
        variantItem: consolidatedRef.current
      }));
    }
  }, [selected]);
  return /*#__PURE__*/React.createElement(StandardListItem, _extends({}, props, {
    ref: componentRef,
    "data-is-default": isDefault,
    "data-author": author,
    "data-favorite": favorite,
    "data-global": global,
    "data-label-read-only": labelReadOnly,
    "data-apply-automatically": applyAutomatically,
    "data-read-only": readOnly,
    "data-children": children,
    "data-hide-delete": hideDelete
  }));
});
VariantItem.displayName = 'VariantItem';

export { VariantItem };
//# sourceMappingURL=VariantItem.js.map
