{"version":3,"file":"Grid.js","sources":["../src/internal/useDeprecationNotiveForTooltip.ts","../src/components/Grid/Grid.jss.ts","../src/components/Grid/index.tsx"],"sourcesContent":["import { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useEffect } from 'react';\n\nexport const useDeprecationNoticeForTooltip = (component, tooltip) => {\n  useEffect(() => {\n    if (tooltip) {\n      deprecationNotice(component, '`tooltip` has been deprecated, please use the native `title` attribute instead.');\n    }\n  }, [tooltip]);\n};\n","const generateGridSpans = () => {\n  let gridSpan = {};\n  for (let i = 1; i <= 12; i++) {\n    gridSpan[`gridSpan${i}`] = { gridColumn: `span ${i}`, ['-ms-grid-column-span']: i };\n  }\n  return gridSpan;\n};\n\nexport const styles = {\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: `repeat(12, 1fr)`,\n    '-ms-grid-columns': '(1fr)[12]'\n  },\n  ...generateGridSpans(),\n  positionCenter: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  positionRight: {\n    marginLeft: 'auto',\n    marginRight: 0\n  }\n};\n","import { isIE } from '@ui5/webcomponents-react-base/dist/Device';\nimport { useViewportRange } from '@ui5/webcomponents-react-base/dist/useViewportRange';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { GridPosition } from '@ui5/webcomponents-react/dist/GridPosition';\nimport React, {\n  Children,\n  cloneElement,\n  CSSProperties,\n  forwardRef,\n  ReactElement,\n  ReactNode,\n  Ref,\n  useCallback\n} from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useDeprecationNoticeForTooltip } from '../../internal/useDeprecationNotiveForTooltip';\nimport { styles } from './Grid.jss';\nimport clsx from 'clsx';\n\nexport interface GridPropTypes extends CommonProps {\n  /**\n   * Vertical spacing between the rows in the Grid. If not specified, then 1rem.\n   */\n  vSpacing?: CSSProperties['height'];\n  /**\n   * Horizontal spacing between the content in the Grid. If not specified, then 1rem.\n   */\n  hSpacing?: CSSProperties['width'];\n  /**\n   * Position of the Grid in the window or surrounding container. Possible values are \"Center\", \"Left\" and \"Right\".\n   */\n  position?: GridPosition | keyof typeof GridPosition;\n  /**\n   * A string type that represents Grid's default span values for very large, large, medium and small screens for the whole Grid.\n   * Allowed values are separated by space Letters XL, L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\".\n   * Note that the parameters has to be provided in the order very large, large, medium, small.\n   * <br />\n   * You can override this default span on each child element by setting the prop `data-layout-span`.\n   */\n  defaultSpan?: string;\n  /**\n   * Defines default for the whole Grid numbers of empty columns before the current span begins. It can be defined for very large, large, medium and small screens.\n   * Allowed values are separated by space Letters XL, L, M or S followed by number of columns from 0 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M11\", \"s10\" or \"l4 m4\".\n   * Note that the parameters has to be provided in the order very-large, large, medium, small.\n   * <br />\n   * You can override this default indent on each child element by setting the prop `data-layout-indent`.\n   */\n  defaultIndent?: string;\n  /**\n   * Components that are placed into Grid layout.\n   */\n  children: ReactNode | ReactNode[];\n}\n\nconst INDENT_PATTERN =\n  /^([X][L](?<LargeDesktop>[0-9]|1[0-2]))? ?([L](?<Desktop>[0-9]|1[0-2]))? ?([M](?<Tablet>[0-9]|1[0-2]))? ?([S](?<Phone>[0-9]|1[0-2]))?$/i;\nconst SPAN_PATTERN =\n  /^([X][L](?<LargeDesktop>[1-9]|1[0-2]))? ?([L](?<Desktop>[1-9]|1[0-2]))? ?([M](?<Tablet>[1-9]|1[0-2]))? ?([S](?<Phone>[1-9]|1[0-2]))?$/i;\n\nconst DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 1);\nDefaultSpanMap.set('Tablet', 2);\nDefaultSpanMap.set('Desktop', 4);\nDefaultSpanMap.set('LargeDesktop', 4);\n\nconst DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\n\nconst getSpanFromString = (span, currentRange) => {\n  const spanConfig = SPAN_PATTERN.exec(span);\n  return spanConfig?.groups[currentRange] ?? DefaultSpanMap.get(currentRange);\n};\n\nconst getIndentFromString = (indent, currentRange) => {\n  const indentConfig = INDENT_PATTERN.exec(indent);\n  return indentConfig?.groups[currentRange] ?? DefaultIndentMap.get(currentRange);\n};\n\nconst getIECellPlacement = (col, row, span) => {\n  let colStart;\n  let safeSpan = parseInt(span);\n  const added = col + safeSpan;\n  if (added <= 12) {\n    colStart = col + 1;\n    col = added;\n  } else {\n    colStart = 1;\n    col = safeSpan;\n    row++;\n  }\n  return [col, row, colStart];\n};\n\nconst useStyles = createUseStyles(styles, { name: 'Grid' });\n/**\n * A layout container component used for aligning items with various sizes in a simple grid.\n */\nconst Grid = forwardRef((props: GridPropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    position,\n    children,\n    hSpacing,\n    vSpacing,\n    style,\n    className,\n    tooltip,\n    slot,\n    defaultIndent,\n    defaultSpan,\n    ...rest\n  } = props;\n\n  useDeprecationNoticeForTooltip('Grid', props.tooltip);\n\n  const classes = useStyles();\n  const currentRange = useViewportRange();\n  const gridClasses = clsx(\n    classes.grid,\n    GridPosition.Center === position && classes.positionCenter,\n    GridPosition.Right === position && classes.positionRight,\n    className\n  );\n\n  let column = 0;\n  let row = 1;\n  const renderGridElements = useCallback(\n    (child: ReactElement<any>) => {\n      if (!child) return null;\n\n      const childSpan = getSpanFromString(child.props['data-layout-span'] ?? defaultSpan, currentRange);\n      let childClass = classes[`gridSpan${childSpan}`];\n\n      const childrenWithGridLayout = [<div className={childClass}>{child}</div>];\n\n      const indentSpan = getIndentFromString(child.props['data-layout-indent'] ?? defaultIndent, currentRange);\n      if (indentSpan && indentSpan > 0) {\n        childrenWithGridLayout.unshift(<span className={classes[`gridSpan${indentSpan}`]} />);\n      }\n      if (isIE()) {\n        return childrenWithGridLayout.map((item, index) => {\n          let colStart;\n          if (childrenWithGridLayout.length === 2 && index === 0) {\n            [column, row, colStart] = getIECellPlacement(column, row, indentSpan);\n            return cloneElement(item, {\n              style: { marginRight: vSpacing, marginBottom: hSpacing, msGridRow: row, msGridColumn: colStart }\n            });\n          }\n          [column, row, colStart] = getIECellPlacement(column, row, childSpan);\n          return cloneElement(item, {\n            style: { marginRight: vSpacing, marginBottom: hSpacing, msGridRow: row, msGridColumn: colStart }\n          });\n        });\n      }\n      return childrenWithGridLayout;\n    },\n    [currentRange, defaultSpan, defaultIndent, classes, vSpacing, hSpacing]\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={gridClasses}\n      style={{ gridRowGap: vSpacing, gridColumnGap: hSpacing, ...style }}\n      title={tooltip}\n      slot={slot}\n      {...rest}\n    >\n      {Children.map(children, renderGridElements)}\n    </div>\n  );\n});\n\nGrid.displayName = 'Grid';\n\nGrid.defaultProps = {\n  hSpacing: '1rem',\n  vSpacing: '1rem',\n  defaultIndent: 'XL0 L0 M0 S0',\n  defaultSpan: 'XL3 L3 M6 S12'\n};\n\nexport { Grid };\n"],"names":["useDeprecationNoticeForTooltip","component","tooltip","useEffect","deprecationNotice","generateGridSpans","gridSpan","i","gridColumn","styles","grid","display","gridTemplateColumns","positionCenter","marginLeft","marginRight","positionRight","INDENT_PATTERN","SPAN_PATTERN","DefaultSpanMap","Map","set","DefaultIndentMap","getSpanFromString","span","currentRange","spanConfig","exec","groups","get","getIndentFromString","indent","indentConfig","getIECellPlacement","col","row","colStart","safeSpan","parseInt","added","useStyles","createUseStyles","name","Grid","forwardRef","props","ref","position","children","hSpacing","vSpacing","style","className","slot","defaultIndent","defaultSpan","rest","classes","useViewportRange","gridClasses","clsx","GridPosition","Center","Right","column","renderGridElements","useCallback","child","childSpan","childClass","childrenWithGridLayout","indentSpan","unshift","isIE","map","item","index","length","cloneElement","marginBottom","msGridRow","msGridColumn","gridRowGap","gridColumnGap","Children","displayName","defaultProps"],"mappings":"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"}