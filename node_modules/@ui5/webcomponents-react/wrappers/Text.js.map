{"version":3,"file":"Text.js","sources":["../src/internal/useDeprecationNotiveForTooltip.ts","../src/components/Text/Text.jss.ts","../src/components/Text/index.tsx"],"sourcesContent":["import { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useEffect } from 'react';\n\nexport const useDeprecationNoticeForTooltip = (component, tooltip) => {\n  useEffect(() => {\n    if (tooltip) {\n      deprecationNotice(component, '`tooltip` has been deprecated, please use the native `title` attribute instead.');\n    }\n  }, [tooltip]);\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nexport const TextStyles = {\n  // Text Style\n  text: {\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    color: ThemingParameters.sapTextColor,\n    display: 'inline-block',\n    boxSizing: 'border-box',\n    whiteSpace: 'pre-line',\n    wordWrap: 'break-word',\n    maxWidth: '100%'\n  },\n  renderWhitespace: {\n    whiteSpace: 'pre-wrap'\n  },\n  noWrap: {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal',\n    overflow: 'hidden',\n    '&$renderWhitespace': {\n      whiteSpace: 'pre'\n    }\n  }\n};\n","import { createUseStyles } from 'react-jss';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { useDeprecationNoticeForTooltip } from '../../internal/useDeprecationNotiveForTooltip';\nimport { TextStyles } from './Text.jss';\nimport clsx from 'clsx';\n\nexport interface TextPropTypes extends CommonProps {\n  /**\n   * Pass the text as direct child of Text\n   */\n  children: string | JSX.Element | ReactNode;\n  /**\n   * Defines how white-space inside <code>Text</code> is handled. If set to true, sequences of white space are preserved.\n   */\n  renderWhitespace?: boolean;\n  /**\n   * Defines whether the text wraps when there is not enough space.\n   */\n  wrapping?: boolean;\n}\n\nconst useStyles = createUseStyles(TextStyles, { name: 'Text' });\n/**\n * The `Text` component can be used for embedding text into your app. You can hyphenate the text with the use of the `wrapping` prop.\n * <br />__Note:__ Line breaks will always be visualized except when the wrapping property is set to false. In addition, tabs and whitespace can be preserved by setting the renderWhitespace property to true.\n */\nconst Text = forwardRef((props: TextPropTypes, ref: Ref<HTMLSpanElement>) => {\n  const { children, renderWhitespace, wrapping, className, style, tooltip, slot, ...rest } = props;\n\n  useDeprecationNoticeForTooltip('Text', props.tooltip);\n\n  const classes = useStyles();\n  const classNameString = clsx(\n    classes.text,\n    wrapping === false && classes.noWrap,\n    renderWhitespace && classes.renderWhitespace,\n    className\n  );\n\n  return (\n    <span ref={ref} style={style} className={classNameString} title={tooltip} slot={slot} {...rest}>\n      {children}\n    </span>\n  );\n});\n\nText.defaultProps = {\n  renderWhitespace: false,\n  wrapping: true\n};\n\nText.displayName = 'Text';\n\nexport { Text };\n"],"names":["useDeprecationNoticeForTooltip","component","tooltip","useEffect","deprecationNotice","TextStyles","text","fontFamily","ThemingParameters","sapFontFamily","fontSize","sapFontSize","fontWeight","color","sapTextColor","display","boxSizing","whiteSpace","wordWrap","maxWidth","renderWhitespace","noWrap","textOverflow","overflow","useStyles","createUseStyles","name","Text","forwardRef","props","ref","children","wrapping","className","style","slot","rest","classes","classNameString","clsx","defaultProps","displayName"],"mappings":";;;;;;;;AAGO,IAAMA,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,SAAD,EAAYC,OAAZ,EAAwB;AACpEC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAID,OAAJ,EAAa;AACXE,MAAAA,iBAAiB,CAACH,SAAD,EAAY,iFAAZ,CAAjB;AACD;AACF,GAJQ,EAIN,CAACC,OAAD,CAJM,CAAT;AAKD,CANM;;ACDA,IAAMG,UAAU,GAAG;AACxB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEC,iBAAiB,CAACC,aAD1B;AAEJC,IAAAA,QAAQ,EAAEF,iBAAiB,CAACG,WAFxB;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,KAAK,EAAEL,iBAAiB,CAACM,YAJrB;AAKJC,IAAAA,OAAO,EAAE,cALL;AAMJC,IAAAA,SAAS,EAAE,YANP;AAOJC,IAAAA,UAAU,EAAE,UAPR;AAQJC,IAAAA,QAAQ,EAAE,YARN;AASJC,IAAAA,QAAQ,EAAE;AATN,GAFkB;AAaxBC,EAAAA,gBAAgB,EAAE;AAChBH,IAAAA,UAAU,EAAE;AADI,GAbM;AAgBxBI,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE,UADR;AAENL,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,QAAQ,EAAE,QAHJ;AAINK,IAAAA,QAAQ,EAAE,QAJJ;AAKN,0BAAsB;AACpBN,MAAAA,UAAU,EAAE;AADQ;AALhB;AAhBgB,CAAnB;;;ACoBP,IAAMO,SAAS,GAAGC,eAAe,CAACpB,UAAD,EAAa;AAAEqB,EAAAA,IAAI,EAAE;AAAR,CAAb,CAAjC;AACA;AACA;AACA;AACA;;IACMC,IAAI,gBAAGC,UAAU,CAAC,UAACC,KAAD,EAAuBC,GAAvB,EAAqD;AAC3E,MAAQC,QAAR,GAA2FF,KAA3F,CAAQE,QAAR;AAAA,MAAkBX,gBAAlB,GAA2FS,KAA3F,CAAkBT,gBAAlB;AAAA,MAAoCY,QAApC,GAA2FH,KAA3F,CAAoCG,QAApC;AAAA,MAA8CC,SAA9C,GAA2FJ,KAA3F,CAA8CI,SAA9C;AAAA,MAAyDC,KAAzD,GAA2FL,KAA3F,CAAyDK,KAAzD;AAAA,MAAgEhC,OAAhE,GAA2F2B,KAA3F,CAAgE3B,OAAhE;AAAA,MAAyEiC,IAAzE,GAA2FN,KAA3F,CAAyEM,IAAzE;AAAA,MAAkFC,IAAlF,4BAA2FP,KAA3F;;AAEA7B,EAAAA,8BAA8B,CAAC,MAAD,EAAS6B,KAAK,CAAC3B,OAAf,CAA9B;AAEA,MAAMmC,OAAO,GAAGb,SAAS,EAAzB;AACA,MAAMc,eAAe,GAAGC,IAAI,CAC1BF,OAAO,CAAC/B,IADkB,EAE1B0B,QAAQ,KAAK,KAAb,IAAsBK,OAAO,CAAChB,MAFJ,EAG1BD,gBAAgB,IAAIiB,OAAO,CAACjB,gBAHF,EAI1Ba,SAJ0B,CAA5B;AAOA,sBACE;AAAM,IAAA,GAAG,EAAEH,GAAX;AAAgB,IAAA,KAAK,EAAEI,KAAvB;AAA8B,IAAA,SAAS,EAAEI,eAAzC;AAA0D,IAAA,KAAK,EAAEpC,OAAjE;AAA0E,IAAA,IAAI,EAAEiC;AAAhF,KAA0FC,IAA1F,GACGL,QADH,CADF;AAKD,CAlBsB;AAoBvBJ,IAAI,CAACa,YAAL,GAAoB;AAClBpB,EAAAA,gBAAgB,EAAE,KADA;AAElBY,EAAAA,QAAQ,EAAE;AAFQ,CAApB;AAKAL,IAAI,CAACc,WAAL,GAAmB,MAAnB;;;;"}