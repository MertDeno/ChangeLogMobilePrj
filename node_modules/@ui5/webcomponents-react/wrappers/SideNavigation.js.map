{"version":3,"file":"SideNavigation.js","sources":["../src/webComponents/SideNavigation/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/SideNavigation.js';\n\ninterface SideNavigationAttributes {\n  /**\n   * Defines whether the `SideNavigation` is expanded or collapsed.\n   */\n  collapsed?: boolean;\n}\n\nexport interface SideNavigationDomRef extends SideNavigationAttributes, Ui5DomRef {}\n\nexport interface SideNavigationPropTypes extends SideNavigationAttributes, CommonProps {\n  /**\n   * Defines the main items of the `SideNavigation`. Use the `SideNavigationItem` component for the top-level items, and the `SideNavigationSubItem` component for second-level items, nested inside the items.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the fixed items at the bottom of the `SideNavigation`. Use the `SideNavigationItem` component for the fixed items, and optionally the `SideNavigationSubItem` component to provide second-level items inside them. **Note:** In order to achieve the best user experience, it is recommended that you keep the fixed items \"flat\" (do not pass sub-items)\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  fixedItems?: ReactNode | ReactNode[];\n  /**\n   * Defines the header of the `SideNavigation`.\n   *\n   * **Note:** The header is displayed when the component is expanded - the property `collapsed` is false;\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Fired when the selection has changed via user interaction\n   */\n  onSelectionChange?: (event: Ui5CustomEvent<HTMLElement, { item: ReactNode }>) => void;\n}\n\n/**\n * The `SideNavigation` is used as a standard menu in applications. It consists of three containers: header (top-aligned), main navigation section (top-aligned) and the secondary section (bottom-aligned).\n *\n * *   The header is meant for displaying user related information - profile data, avatar, etc.\n * *   The main navigation section is related to the userâ€™s current work context\n * *   The secondary section is mostly used to link additional information that may be of interest (legal information, developer communities, external help, contact information and so on).\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/SideNavigation\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst SideNavigation = withWebComponent<SideNavigationPropTypes, SideNavigationDomRef>(\n  'ui5-side-navigation',\n  [],\n  ['collapsed'],\n  ['fixedItems', 'header'],\n  ['selection-change']\n);\n\nSideNavigation.displayName = 'SideNavigation';\n\nexport { SideNavigation };\n"],"names":["SideNavigation","withWebComponent","displayName"],"mappings":";;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,cAAc,GAAGC,gBAAgB,CACrC,qBADqC,EAErC,EAFqC,EAGrC,CAAC,WAAD,CAHqC,EAIrC,CAAC,YAAD,EAAe,QAAf,CAJqC,EAKrC,CAAC,kBAAD,CALqC;AAQvCD,cAAc,CAACE,WAAf,GAA6B,gBAA7B;;;;"}