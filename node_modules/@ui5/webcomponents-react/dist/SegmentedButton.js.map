{"version":3,"file":"SegmentedButton.js","sources":["../src/webComponents/SegmentedButton/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/SegmentedButton.js';\n\ninterface SegmentedButtonAttributes {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n}\n\nexport interface SegmentedButtonDomRef extends SegmentedButtonAttributes, Ui5DomRef {\n  /**\n   * Currently selected item.\n   */\n  readonly selectedItem: ReactNode;\n}\n\nexport interface SegmentedButtonPropTypes extends SegmentedButtonAttributes, CommonProps {\n  /**\n   * Defines the items of `SegmentedButton`.\n   *\n   * **Note:** Multiple items are allowed.\n   *\n   * **Note:** Use the `SegmentedButtonItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the selected item changes.\n   */\n  onSelectionChange?: (event: Ui5CustomEvent<HTMLButtonElement, { selectedItem: ReactNode }>) => void;\n}\n\n/**\n * The `SegmentedButton` shows a group of items. When the user clicks or taps one of the items, it stays in a pressed state. It automatically resizes the items to fit proportionally within the component. When no width is set, the component uses the available width.\n *\n * **Note:** There can be just one selected `item` at a time.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/SegmentedButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst SegmentedButton = withWebComponent<SegmentedButtonPropTypes, SegmentedButtonDomRef>(\n  'ui5-segmented-button',\n  ['accessibleName'],\n  [],\n  [],\n  ['selection-change']\n);\n\nSegmentedButton.displayName = 'SegmentedButton';\n\nexport { SegmentedButton };\n"],"names":["SegmentedButton","withWebComponent","displayName"],"mappings":";;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,eAAe,GAAGC,gBAAgB,CACtC,sBADsC,EAEtC,CAAC,gBAAD,CAFsC,EAGtC,EAHsC,EAItC,EAJsC,EAKtC,CAAC,kBAAD,CALsC;AAQxCD,eAAe,CAACE,WAAhB,GAA8B,iBAA9B;;;;"}