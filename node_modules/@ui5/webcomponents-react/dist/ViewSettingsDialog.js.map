{"version":3,"file":"ViewSettingsDialog.js","sources":["../src/webComponents/ViewSettingsDialog/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/ViewSettingsDialog.js';\n\ninterface ViewSettingsDialogAttributes {\n  /**\n   * Defines the initial sort order.\n   */\n  sortDescending?: boolean;\n}\n\nexport interface ViewSettingsDialogDomRef extends ViewSettingsDialogAttributes, Ui5DomRef {\n  /**\n   * Shows the dialog.\n   *\n   */\n  show: () => void;\n}\n\nexport interface ViewSettingsDialogPropTypes extends ViewSettingsDialogAttributes, CommonProps {\n  /**\n   * Defines the `filterItems` list. **Note:** If you want to use this slot, you need to import used item: `import \"@ui5/webcomponents-fiori/dist/FilterItem\";`\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  filterItems?: ReactNode | ReactNode[];\n  /**\n   * Defines the list of items against which the user could sort data. **Note:** If you want to use this slot, you need to import used item: `import \"@ui5/webcomponents-fiori/dist/SortItem\";`\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  sortItems?: ReactNode | ReactNode[];\n  /**\n   * Fired when cancel button is activated.\n   */\n  onCancel?: (event: Ui5CustomEvent<HTMLElement, { sortOrder: string; sortBy: string }>) => void;\n  /**\n   * Fired when confirmation button is activated.\n   */\n  onConfirm?: (event: Ui5CustomEvent<HTMLElement, { sortOrder: string; sortBy: string }>) => void;\n}\n\n/**\n * The `ViewSettingsDialog` component helps the user to sort data within a list or a table. It consists of several lists like `Sort order` which is built-in and `Sort By` and `Filter By` lists, for which you must be provide items(`SortItem` & `FilterItem` respectively) These options can be used to create sorters for a table. The `ViewSettingsDialog` interrupts the current application processing as it is the only focused UI element and the main screen is dimmed/blocked. The `ViewSettingsDialog` is modal, which means that user action is required before returning to the parent window is possible.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/ViewSettingsDialog\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst ViewSettingsDialog = withWebComponent<ViewSettingsDialogPropTypes, ViewSettingsDialogDomRef>(\n  'ui5-view-settings-dialog',\n  [],\n  ['sortDescending'],\n  ['filterItems', 'sortItems'],\n  ['cancel', 'confirm']\n);\n\nViewSettingsDialog.displayName = 'ViewSettingsDialog';\n\nexport { ViewSettingsDialog };\n"],"names":["ViewSettingsDialog","withWebComponent","displayName"],"mappings":";;;AAgDA;AACA;AACA;AACA;AACA;IACMA,kBAAkB,GAAGC,gBAAgB,CACzC,0BADyC,EAEzC,EAFyC,EAGzC,CAAC,gBAAD,CAHyC,EAIzC,CAAC,aAAD,EAAgB,WAAhB,CAJyC,EAKzC,CAAC,QAAD,EAAW,SAAX,CALyC;AAQ3CD,kBAAkB,CAACE,WAAnB,GAAiC,oBAAjC;;;;"}