{"version":3,"file":"IllustratedMessage.js","sources":["../src/webComponents/IllustratedMessage/index.tsx"],"sourcesContent":["import { IllustrationMessageType } from '@ui5/webcomponents-react/dist/IllustrationMessageType';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents-fiori/dist/IllustratedMessage.js';\n\ninterface IllustratedMessageAttributes {\n  /**\n   * Defines the illustration name that will be displayed in the component.\n   *\n   * Available illustrations are:\n   *\n   * *   `BeforeSearch`\n   * *   `NoActivities`\n   * *   `NoData`\n   * *   `NoMail`\n   * *   `NoMail_v1`\n   * *   `NoEntries`\n   * *   `NoNotifications`\n   * *   `NoSavedItems`\n   * *   `NoSavedItems_v1`\n   * *   `NoSearchResults`\n   * *   `NoTasks`\n   * *   `NoTasks_v1`\n   * *   `UnableToLoad`\n   * *   `UnableToLoadImage`\n   * *   `UnableToUpload`\n   * *   `AddColumn`\n   * *   `AddPeople`\n   * *   `BalloonSky`\n   * *   `Connection`\n   * *   `EmptyCalendar`\n   * *   `EmptyList`\n   * *   `EmptyPlanningCalendar`\n   * *   `ErrorScreen`\n   * *   `FilterTable`\n   * *   `GroupTable`\n   * *   `NoFilterResults`\n   * *   `PageNotFound`\n   * *   `ReloadScreen`\n   * *   `ResizeColumn`\n   * *   `SearchEarth`\n   * *   `SearchFolder`\n   * *   `SimpleBalloon`\n   * *   `SimpleBell`\n   * *   `SimpleCalendar`\n   * *   `SimpleCheckMark`\n   * *   `SimpleConnection`\n   * *   `SimpleEmptyDoc`\n   * *   `SimpleEmptyList`\n   * *   `SimpleError`\n   * *   `SimpleMagnifier`\n   * *   `SimpleMail`\n   * *   `SimpleNoSavedItems`\n   * *   `SimpleNotFoundMagnifier`\n   * *   `SimpleReload`\n   * *   `SimpleTask`\n   * *   `SleepingBell`\n   * *   `SortColumn`\n   * *   `SuccessBalloon`\n   * *   `SuccessCheckMark`\n   * *   `SuccessHighFive`\n   * *   `SuccessScreen`\n   * *   `Tent`\n   * *   `UploadCollection`\n   * *   `TntCompany`\n   * *   `TntExternalLink`\n   * *   `TntFaceID`\n   * *   `TntFingerprint`\n   * *   `TntLock`\n   * *   `TntMission`\n   * *   `TntNoApplications`\n   * *   `TntNoFlows`\n   * *   `TntNoUsers`\n   * *   `TntRadar`\n   * *   `TntServices`\n   * *   `TntSessionExpired`\n   * *   `TntSessionExpiring`\n   * *   `TntSuccess`\n   * *   `TntSuccessfulAuth`\n   * *   `TntUnlock`\n   * *   `TntUnsuccessfulAuth`\n   *\n   *\n   *\n   * **Note:** By default the `BeforeSearch` illustration is loaded.\n   * When using an illustration type, other than the default, it should be loaded in addition:\n   * `import \"@ui5/webcomponents-fiori/dist/illustrations/NoData.js\";`\n   *\n   * **Note:** TNT illustrations cointain `Tnt` prefix in their name. You can import them removing the `Tnt` prefix like this:\n   * `import \"@ui5/webcomponents-fiori/dist/illustrations/tnt/SessionExpired.js\";`\n   */\n  name?: IllustrationMessageType | keyof typeof IllustrationMessageType;\n  /**\n   * Defines the subtitle of the component.\n   *\n   * **Note:** Using this property, the default subtitle text of illustration will be overwritten.\n   *\n   * **Note:** Using `subtitle` slot, the default of this property will be overwritten.\n   */\n  subtitleText?: string;\n  /**\n   * Defines the title of the component.\n   *\n   * **Note:** Using this property, the default title text of illustration will be overwritten.\n   */\n  titleText?: string;\n}\n\nexport interface IllustratedMessageDomRef extends IllustratedMessageAttributes, Ui5DomRef {}\n\nexport interface IllustratedMessagePropTypes extends IllustratedMessageAttributes, CommonProps {\n  /**\n   * Defines the component actions.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the subtitle of the component.\n   *\n   * **Note:** Using this slot, the default subtitle text of illustration and the value of `subtitleText` property will be overwritten.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  subtitle?: ReactNode;\n}\n\n/**\n * An IllustratedMessage is a recommended combination of a solution-oriented message, an engaging illustration, and conversational tone to better communicate an empty or a success state than just show a message alone. Each illustration has default internationalised title and subtitle texts. Also they can be managed with `titleText` and `subtitleText` properties. To display the desired illustration, use the `name` property, where you can find the list of all available illustrations.\n *\n * **Note:** By default the “BeforeSearch” illustration is loaded. To use other illustrations, make sure you import them in addition, for example:\n * `import \"@ui5/webcomponents-fiori/dist/illustrations/NoData.js\"`\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/IllustratedMessage\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst IllustratedMessage = withWebComponent<IllustratedMessagePropTypes, IllustratedMessageDomRef>(\n  'ui5-illustrated-message',\n  ['name', 'subtitleText', 'titleText'],\n  [],\n  ['subtitle'],\n  []\n);\n\nIllustratedMessage.displayName = 'IllustratedMessage';\n\nIllustratedMessage.defaultProps = {\n  name: IllustrationMessageType.BeforeSearch\n};\n\nexport { IllustratedMessage };\n"],"names":["IllustratedMessage","withWebComponent","displayName","defaultProps","name","IllustrationMessageType","BeforeSearch"],"mappings":";;;;AAiIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,kBAAkB,GAAGC,gBAAgB,CACzC,yBADyC,EAEzC,CAAC,MAAD,EAAS,cAAT,EAAyB,WAAzB,CAFyC,EAGzC,EAHyC,EAIzC,CAAC,UAAD,CAJyC,EAKzC,EALyC;AAQ3CD,kBAAkB,CAACE,WAAnB,GAAiC,oBAAjC;AAEAF,kBAAkB,CAACG,YAAnB,GAAkC;AAChCC,EAAAA,IAAI,EAAEC,uBAAuB,CAACC;AADE,CAAlC;;;;"}