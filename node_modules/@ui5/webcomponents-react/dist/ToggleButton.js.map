{"version":3,"file":"ToggleButton.js","sources":["../src/webComponents/ToggleButton/index.tsx"],"sourcesContent":["import { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode, MouseEventHandler } from 'react';\n\nimport '@ui5/webcomponents/dist/ToggleButton.js';\n\ninterface ToggleButtonAttributes {\n  /**\n   * Determines whether the component is displayed as pressed.\n   */\n  pressed?: boolean;\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component design.\n   *\n   * **The available values are:**\n   *\n   * *   `Default`\n   * *   `Emphasized`\n   * *   `Positive`\n   * *   `Negative`\n   * *   `Transparent`\n   * *   `Attention`\n   */\n  design?: ButtonDesign | keyof typeof ButtonDesign;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the component text.\n   */\n  iconEnd?: boolean;\n  /**\n   * When set to `true`, the component will automatically submit the nearest form element upon `press`.\n   *\n   * **Note:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  submits?: boolean;\n}\n\nexport interface ToggleButtonDomRef extends ToggleButtonAttributes, Ui5DomRef {}\n\nexport interface ToggleButtonPropTypes extends ToggleButtonAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: MouseEventHandler<HTMLElement>;\n}\n\n/**\n * The `ToggleButton` component is an enhanced `Button` that can be toggled between pressed and normal states. Users can use the `ToggleButton` as a switch to turn a setting on or off. It can also be used to represent an independent choice similar to a check box.\n *\n * Clicking or tapping on a `ToggleButton` changes its state to `pressed`. The button returns to its initial state when the user clicks or taps on it again. By applying additional custom CSS-styling classes, apps can give a different style to any `ToggleButton`.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/ToggleButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst ToggleButton = withWebComponent<ToggleButtonPropTypes, ToggleButtonDomRef>(\n  'ui5-toggle-button',\n  ['accessibleName', 'accessibleNameRef', 'design', 'icon'],\n  ['pressed', 'disabled', 'iconEnd', 'submits'],\n  [],\n  ['click']\n);\n\nToggleButton.displayName = 'ToggleButton';\n\nToggleButton.defaultProps = {\n  design: ButtonDesign.Default\n};\n\nexport { ToggleButton };\n"],"names":["ToggleButton","withWebComponent","displayName","defaultProps","design","ButtonDesign","Default"],"mappings":";;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,YAAY,GAAGC,gBAAgB,CACnC,mBADmC,EAEnC,CAAC,gBAAD,EAAmB,mBAAnB,EAAwC,QAAxC,EAAkD,MAAlD,CAFmC,EAGnC,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,EAAmC,SAAnC,CAHmC,EAInC,EAJmC,EAKnC,CAAC,OAAD,CALmC;AAQrCD,YAAY,CAACE,WAAb,GAA2B,cAA3B;AAEAF,YAAY,CAACG,YAAb,GAA4B;AAC1BC,EAAAA,MAAM,EAAEC,YAAY,CAACC;AADK,CAA5B;;;;"}