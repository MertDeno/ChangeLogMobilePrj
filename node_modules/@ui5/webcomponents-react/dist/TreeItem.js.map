{"version":3,"file":"TreeItem.js","sources":["../src/webComponents/TreeItem/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/dist/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/TreeItem.js';\n\ninterface TreeItemAttributes {\n  /**\n   * Defines the `additionalText`, displayed in the end of the tree item.\n   */\n  additionalText?: string;\n  /**\n   * Defines the state of the `additionalText`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Erorr\"`.\n   */\n  additionalTextState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n   */\n  expanded?: boolean;\n  /**\n   * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n   * _Note:_ This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to `true` for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n   */\n  hasChildren?: boolean;\n  /**\n   * If set, an icon will be displayed before the text, representing the tree item.\n   */\n  icon?: string;\n  /**\n   * Defines whether the selection of a tree node is displayed as partially selected.\n   *\n   * **Note:** The indeterminate state can be set only programatically and canâ€™t be achieved by user interaction, meaning that the resulting visual state depends on the values of the `indeterminate` and `selected` properties:\n   *\n   * *   If a tree node has both `selected` and `indeterminate` set to `true`, it is displayed as partially selected.\n   * *   If a tree node has `selected` set to `true` and `indeterminate` set to `false`, it is displayed as selected.\n   * *   If a tree node has `selected` set to `false`, it is displayed as not selected regardless of the value of the `indeterminate` property.\n   *\n   *\n   * **Note:** This property takes effect only when the `Tree` is in `MultiSelect` mode.\n   */\n  indeterminate?: boolean;\n  /**\n   * Defines whether the tree node is selected by the user. Only has effect if the `Tree` is in one of the following modes: in `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd` and `MultiSelect`.\n   */\n  selected?: boolean;\n  /**\n   * Defines the text of the tree item.\n   */\n  text?: string;\n}\n\nexport interface TreeItemDomRef extends TreeItemAttributes, Ui5DomRef {\n  /**\n   * Call this method to manually switch the <code>expanded</code> state of a tree item.\n   *\n   */\n  toggle: () => void;\n}\n\nexport interface TreeItemPropTypes extends TreeItemAttributes, CommonProps {\n  /**\n   * Defines the items of this component.\n   */\n  children?: ReactNode | ReactNode[];\n}\n\n/**\n * This is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/TreeItem\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst TreeItem = withWebComponent<TreeItemPropTypes, TreeItemDomRef>(\n  'ui5-tree-item',\n  ['additionalText', 'additionalTextState', 'icon', 'text'],\n  ['expanded', 'hasChildren', 'indeterminate', 'selected'],\n  [],\n  []\n);\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.defaultProps = {\n  additionalTextState: ValueState.None\n};\n\nexport { TreeItem };\n"],"names":["TreeItem","withWebComponent","displayName","defaultProps","additionalTextState","ValueState","None"],"mappings":";;;;AAqEA;AACA;AACA;AACA;AACA;IACMA,QAAQ,GAAGC,gBAAgB,CAC/B,eAD+B,EAE/B,CAAC,gBAAD,EAAmB,qBAAnB,EAA0C,MAA1C,EAAkD,MAAlD,CAF+B,EAG/B,CAAC,UAAD,EAAa,aAAb,EAA4B,eAA5B,EAA6C,UAA7C,CAH+B,EAI/B,EAJ+B,EAK/B,EAL+B;AAQjCD,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AAEAF,QAAQ,CAACG,YAAT,GAAwB;AACtBC,EAAAA,mBAAmB,EAAEC,UAAU,CAACC;AADV,CAAxB;;;;"}