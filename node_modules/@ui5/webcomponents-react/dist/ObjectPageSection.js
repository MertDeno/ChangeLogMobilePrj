import _extends from '@babel/runtime/helpers/extends';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import React, { useEffect, forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';
import _createClass from '@babel/runtime/helpers/createClass';
import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _inherits from '@babel/runtime/helpers/inherits';
import _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';
import _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';
import _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';
import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';
import clsx from 'clsx';

var useDeprecationNoticeForTooltip = function useDeprecationNoticeForTooltip(component, tooltip) {
  useEffect(function () {
    if (tooltip) {
      deprecationNotice(component, '`tooltip` has been deprecated, please use the native `title` attribute instead.');
    }
  }, [tooltip]);
};

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var EmptyIdPropException = /*#__PURE__*/function (_Error) {
  _inherits(EmptyIdPropException, _Error);

  var _super = _createSuper(EmptyIdPropException);

  function EmptyIdPropException(message) {
    var _this;

    _classCallCheck(this, EmptyIdPropException);

    _this = _super.call(this, message);
    _this.name = _this.constructor.name;
    return _this;
  }

  return _createClass(EmptyIdPropException);
}( /*#__PURE__*/_wrapNativeSuper(Error));

var styles = {
  header: {
    borderBottom: "1px solid ".concat(ThemingParameters.sapGroup_TitleBorderColor),
    boxSizing: 'border-box',
    height: '2.75rem'
  },
  title: {
    height: '2.75rem',
    color: ThemingParameters.sapTextColor,
    fontSize: ThemingParameters.sapFontHeader4Size,
    borderBottom: "1px solid ".concat(ThemingParameters.sapActiveColor),
    display: 'inline-block',
    maxWidth: '100%',
    overflow: 'hidden',
    whiteSpace: 'nowrap',
    textOverflow: 'ellipsis',
    fontFamily: ThemingParameters.sapFontFamily
  },
  uppercase: {
    textTransform: 'uppercase'
  },
  sectionContent: {
    whiteSpace: 'normal'
  },
  sectionContentInner: {
    paddingTop: '1rem',
    paddingBottom: '2rem',
    fontFamily: ThemingParameters.sapFontFamily
  }
};
var styles$1 = styles;

var _excluded = ["titleText", "id", "children", "titleTextUppercase", "className", "style", "tooltip"];
var useStyles = createUseStyles(styles$1, {
  name: 'ObjectPageSection'
});
/**
 * Top-level information container of an `ObjectPage`.
 */

var ObjectPageSection = /*#__PURE__*/forwardRef(function (props, ref) {
  var titleText = props.titleText,
      id = props.id,
      children = props.children,
      titleTextUppercase = props.titleTextUppercase,
      className = props.className,
      style = props.style,
      tooltip = props.tooltip,
      rest = _objectWithoutProperties(props, _excluded);

  useDeprecationNoticeForTooltip('ObjectPageSection', props.tooltip);
  var classes = useStyles();

  if (!id) {
    throw new EmptyIdPropException('ObjectPageSection requires a unique ID property!');
  }

  var htmlId = "ObjectPageSection-".concat(id);
  var titleClasses = clsx(classes.title, titleTextUppercase && classes.uppercase);
  return /*#__PURE__*/React.createElement("section", _extends({
    ref: ref,
    role: "region",
    className: className,
    style: style,
    title: tooltip
  }, rest, {
    id: htmlId,
    "data-component-name": "ObjectPageSection"
  }), /*#__PURE__*/React.createElement("div", {
    role: "heading",
    "aria-level": 3,
    className: classes.header,
    "data-component-name": "ObjectPageSectionTitleText"
  }, /*#__PURE__*/React.createElement("div", {
    className: titleClasses
  }, titleText)), /*#__PURE__*/React.createElement("div", {
    className: classes.sectionContent
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.sectionContentInner,
    "data-component-name": "ObjectPageSectionContent"
  }, children)));
});
ObjectPageSection.defaultProps = {
  titleText: '',
  titleTextUppercase: true
};
ObjectPageSection.displayName = 'ObjectPageSection';

export { ObjectPageSection };
//# sourceMappingURL=ObjectPageSection.js.map
