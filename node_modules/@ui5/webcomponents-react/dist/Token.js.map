{"version":3,"file":"Token.js","sources":["../src/webComponents/Token/index.tsx"],"sourcesContent":["import { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Token.js';\n\ninterface TokenAttributes {\n  /**\n   * Defines whether the component is read-only.\n   *\n   * **Note:** A read-only component can not be deleted or selected, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the component is selected or not.\n   */\n  selected?: boolean;\n  /**\n   * Defines the text of the token.\n   */\n  text?: string;\n}\n\nexport interface TokenDomRef extends TokenAttributes, Ui5DomRef {}\n\nexport interface TokenPropTypes extends TokenAttributes, Omit<CommonProps, 'onSelect'> {\n  /**\n   * Defines the close icon for the token. If nothing is provided to this slot, the default close icon will be used. Accepts `Icon`.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  closeIcon?: ReactNode;\n  /**\n   * Fired when the the component is selected by user interaction with mouse or by clicking space.\n   */\n  onSelect?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * Tokens are small items of information (similar to tags) that mainly serve to visualize previously selected items.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Token\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Token = withWebComponent<TokenPropTypes, TokenDomRef>(\n  'ui5-token',\n  ['text'],\n  ['readonly', 'selected'],\n  ['closeIcon'],\n  ['select']\n);\n\nToken.displayName = 'Token';\n\nexport { Token };\n"],"names":["Token","withWebComponent","displayName"],"mappings":";;;AAyCA;AACA;AACA;AACA;AACA;IACMA,KAAK,GAAGC,gBAAgB,CAC5B,WAD4B,EAE5B,CAAC,MAAD,CAF4B,EAG5B,CAAC,UAAD,EAAa,UAAb,CAH4B,EAI5B,CAAC,WAAD,CAJ4B,EAK5B,CAAC,QAAD,CAL4B;AAQ9BD,KAAK,CAACE,WAAN,GAAoB,OAApB;;;;"}