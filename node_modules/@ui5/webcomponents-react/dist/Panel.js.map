{"version":3,"file":"Panel.js","sources":["../src/webComponents/Panel/index.tsx"],"sourcesContent":["import { PanelAccessibleRole } from '@ui5/webcomponents-react/dist/PanelAccessibleRole';\nimport { TitleLevel } from '@ui5/webcomponents-react/dist/TitleLevel';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5CustomEvent } from '@ui5/webcomponents-react/interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode } from 'react';\n\nimport '@ui5/webcomponents/dist/Panel.js';\n\ninterface PanelAttributes {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Sets the accessible aria role of the component. Depending on the usage, you can change the role from the default `Form` to `Region` or `Complementary`.\n   */\n  accessibleRole?: PanelAccessibleRole | keyof typeof PanelAccessibleRole;\n  /**\n   * Indicates whether the component is collapsed and only the header is displayed.\n   */\n  collapsed?: boolean;\n  /**\n   * Determines whether the component is in a fixed state that is not expandable/collapsible by user interaction.\n   */\n  fixed?: boolean;\n  /**\n   * Defines the \"aria-level\" of component heading, set by the `headerText`.\n   *\n   * Available options are: `\"H6\"` to `\"H1\"`.\n   */\n  headerLevel?: TitleLevel | keyof typeof TitleLevel;\n  /**\n   * This property is used to set the header text of the component. The text is visible in both expanded and collapsed states.\n   *\n   * **Note:** This property is overridden by the `header` slot.\n   */\n  headerText?: string;\n  /**\n   * Indicates whether the transition between the expanded and the collapsed state of the component is animated. By default the animation is enabled.\n   */\n  noAnimation?: boolean;\n}\n\nexport interface PanelDomRef extends PanelAttributes, Ui5DomRef {}\n\nexport interface PanelPropTypes extends PanelAttributes, CommonProps {\n  /**\n   * Determines the content of the component. The content is visible only when the component is expanded.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the component header area.\n   *\n   * **Note:** When a header is provided, the `headerText` property is ignored.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base--page#adding-custom-components-to-slots).\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is expanded/collapsed by user interaction.\n   */\n  onToggle?: (event: Ui5CustomEvent<HTMLElement>) => void;\n}\n\n/**\n * The `Panel` component is a container which has a header and a content area and is used for grouping and displaying information. It can be collapsed to save space on the screen.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Panel\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Panel = withWebComponent<PanelPropTypes, PanelDomRef>(\n  'ui5-panel',\n  ['accessibleName', 'accessibleRole', 'headerLevel', 'headerText'],\n  ['collapsed', 'fixed', 'noAnimation'],\n  ['header'],\n  ['toggle']\n);\n\nPanel.displayName = 'Panel';\n\nPanel.defaultProps = {\n  accessibleRole: PanelAccessibleRole.Form,\n  headerLevel: TitleLevel.H2\n};\n\nexport { Panel };\n"],"names":["Panel","withWebComponent","displayName","defaultProps","accessibleRole","PanelAccessibleRole","Form","headerLevel","TitleLevel","H2"],"mappings":";;;;;AAmEA;AACA;AACA;AACA;AACA;IACMA,KAAK,GAAGC,gBAAgB,CAC5B,WAD4B,EAE5B,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,aAArC,EAAoD,YAApD,CAF4B,EAG5B,CAAC,WAAD,EAAc,OAAd,EAAuB,aAAvB,CAH4B,EAI5B,CAAC,QAAD,CAJ4B,EAK5B,CAAC,QAAD,CAL4B;AAQ9BD,KAAK,CAACE,WAAN,GAAoB,OAApB;AAEAF,KAAK,CAACG,YAAN,GAAqB;AACnBC,EAAAA,cAAc,EAAEC,mBAAmB,CAACC,IADjB;AAEnBC,EAAAA,WAAW,EAAEC,UAAU,CAACC;AAFL,CAArB;;;;"}