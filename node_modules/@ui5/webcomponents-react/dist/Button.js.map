{"version":3,"file":"Button.js","sources":["../src/webComponents/Button/index.tsx"],"sourcesContent":["import { ButtonDesign } from '@ui5/webcomponents-react/dist/ButtonDesign';\nimport { withWebComponent } from '@ui5/webcomponents-react/dist/withWebComponent';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { Ui5DomRef } from '@ui5/webcomponents-react/interfaces/Ui5DomRef';\nimport { ReactNode, MouseEventHandler } from 'react';\n\nimport '@ui5/webcomponents/dist/Button.js';\n\ninterface ButtonAttributes {\n  /**\n   * Sets the accessible aria name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component design.\n   *\n   * **The available values are:**\n   *\n   * *   `Default`\n   * *   `Emphasized`\n   * *   `Positive`\n   * *   `Negative`\n   * *   `Transparent`\n   * *   `Attention`\n   */\n  design?: ButtonDesign | keyof typeof ButtonDesign;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the component text.\n   */\n  iconEnd?: boolean;\n  /**\n   * When set to `true`, the component will automatically submit the nearest form element upon `press`.\n   *\n   * **Note:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  submits?: boolean;\n}\n\nexport interface ButtonDomRef extends ButtonAttributes, Ui5DomRef {}\n\nexport interface ButtonPropTypes extends ButtonAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: MouseEventHandler<HTMLElement>;\n}\n\n/**\n * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Button\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Button = withWebComponent<ButtonPropTypes, ButtonDomRef>(\n  'ui5-button',\n  ['accessibleName', 'accessibleNameRef', 'design', 'icon'],\n  ['disabled', 'iconEnd', 'submits'],\n  [],\n  ['click']\n);\n\nButton.displayName = 'Button';\n\nButton.defaultProps = {\n  design: ButtonDesign.Default\n};\n\nexport { Button };\n"],"names":["Button","withWebComponent","displayName","defaultProps","design","ButtonDesign","Default"],"mappings":";;;;AAqEA;AACA;AACA;AACA;AACA;IACMA,MAAM,GAAGC,gBAAgB,CAC7B,YAD6B,EAE7B,CAAC,gBAAD,EAAmB,mBAAnB,EAAwC,QAAxC,EAAkD,MAAlD,CAF6B,EAG7B,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,CAH6B,EAI7B,EAJ6B,EAK7B,CAAC,OAAD,CAL6B;AAQ/BD,MAAM,CAACE,WAAP,GAAqB,QAArB;AAEAF,MAAM,CAACG,YAAP,GAAsB;AACpBC,EAAAA,MAAM,EAAEC,YAAY,CAACC;AADD,CAAtB;;;;"}