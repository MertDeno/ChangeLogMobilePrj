import _extends from '@babel/runtime/helpers/extends';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import { isIE } from '@ui5/webcomponents-react-base/dist/Device';
import React, { useEffect, forwardRef, useMemo } from 'react';
import { createUseStyles } from 'react-jss';
import { deprecationNotice } from '@ui5/webcomponents-react-base/dist/Utils';
import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import clsx from 'clsx';

var useDeprecationNoticeForTooltip = function useDeprecationNoticeForTooltip(component, tooltip) {
  useEffect(function () {
    if (tooltip) {
      deprecationNotice(component, '`tooltip` has been deprecated, please use the native `title` attribute instead.');
    }
  }, [tooltip]);
};

var _headerCollapsed;
var DynamicPageCssVariables = {
  headerDisplay: '--ui5wcr_DynamicPage_header_display'
};
({
  dynamicPage: _defineProperty({
    width: '100%',
    height: '100%',
    maxHeight: '100%',
    position: 'relative',
    whiteSpace: 'normal',
    fontFamily: ThemingParameters.sapFontFamily,
    backgroundColor: ThemingParameters.sapBackgroundColor,
    overflowX: 'hidden',
    overflowY: 'auto'
  }, DynamicPageCssVariables.headerDisplay, 'block'),
  headerCollapsed: (_headerCollapsed = {}, _defineProperty(_headerCollapsed, DynamicPageCssVariables.headerDisplay, 'none'), _defineProperty(_headerCollapsed, '& $anchorBar > section[role="navigation"]', {
    top: '-0.025rem'
  }), _headerCollapsed),
  anchorBar: {
    position: 'sticky',
    boxShadow: ThemingParameters.sapContent_HeaderShadow,
    height: '1px',
    zIndex: 2,
    '& > section[role="navigation"]': {
      top: 0
    }
  },
  iEClass: {
    position: 'fixed',
    //page width - scrollbar
    width: 'calc(100% - 18px)'
  },
  iEBackgroundElement: {
    position: 'fixed',
    backgroundColor: ThemingParameters.sapObjectHeader_Background
  },
  contentContainer: {
    paddingTop: '1rem',
    boxSizing: 'border-box',
    width: '100%',
    height: 'auto',
    fontFamily: ThemingParameters.sapFontFamily,
    zIndex: 0
  },
  backgroundStandard: {
    background: ThemingParameters.sapBackgroundColor
  },
  backgroundSolid: {
    background: ThemingParameters.sapBackgroundColor
  },
  backgroundList: {
    background: ThemingParameters.sapGroup_ContentBackground
  },
  backgroundTransparent: {
    background: 'transparent'
  },
  footer: {
    bottom: '0.5rem',
    margin: '0 0.5rem',
    left: 0,
    right: 0
  }
});

var DynamicPageHeaderStyles = {
  header: {
    backgroundColor: ThemingParameters.sapObjectHeader_Background,
    position: 'sticky',
    zIndex: 1,
    paddingTop: '1rem',
    paddingBottom: '1rem',
    display: "var(".concat(DynamicPageCssVariables.headerDisplay, ")"),
    overflow: isIE() ? 'visible' : 'hidden'
  },
  iEClass: {
    position: 'fixed',
    // page width - padding - scrollbar
    width: 'calc(100% - 18px - 4rem)'
  }
};

var _excluded = ["children", "headerPinned", "topHeaderHeight", "tooltip", "className", "style"];
var useStyles = createUseStyles(DynamicPageHeaderStyles, {
  name: 'DynamicPageHeader'
});
/**
 * The dynamic page header contains the header content of the dynamic page.
 * This component can be collapsed and pinned by the anchorbar.
 */

var DynamicPageHeader = /*#__PURE__*/forwardRef(function (props, ref) {
  var children = props.children,
      headerPinned = props.headerPinned,
      topHeaderHeight = props.topHeaderHeight,
      tooltip = props.tooltip,
      className = props.className,
      style = props.style,
      rest = _objectWithoutProperties(props, _excluded);

  useDeprecationNoticeForTooltip('DynamicPageHeader', props.tooltip);
  var headerStyles = useMemo(function () {
    if (headerPinned) {
      return _objectSpread(_objectSpread({}, style), {}, {
        top: "".concat(topHeaderHeight, "px"),
        zIndex: 1
      });
    }

    return style;
  }, [headerPinned, topHeaderHeight, style]);
  var classes = useStyles();
  var classNames = clsx(classes.header, className, isIE() && classes.iEClass);
  return /*#__PURE__*/React.createElement("div", _extends({
    title: tooltip,
    ref: ref
  }, rest, {
    className: classNames,
    "data-component-name": "DynamicPageHeader",
    style: headerStyles
  }), children);
});
DynamicPageHeader.displayName = 'DynamicPageHeader';

export { DynamicPageHeader };
//# sourceMappingURL=DynamicPageHeader.js.map
