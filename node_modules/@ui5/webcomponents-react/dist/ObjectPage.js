import _extends from '@babel/runtime/helpers/extends';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import { addCustomCSS } from '@ui5/webcomponents-base/dist/Theming.js';
import { useSyncRef, useIsRTL, useI18nBundle, useResponsiveContentPadding } from '@ui5/webcomponents-react-base/dist/hooks';
import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';
import { deprecationNotice, enrichEventWithDetails, debounce } from '@ui5/webcomponents-react-base/dist/Utils';
import { AvatarSize } from '@ui5/webcomponents-react/dist/AvatarSize';
import { GlobalStyleClasses } from '@ui5/webcomponents-react/dist/GlobalStyleClasses';
import { List } from '@ui5/webcomponents-react/dist/List';
import { ObjectPageMode } from '@ui5/webcomponents-react/dist/ObjectPageMode';
import { Popover } from '@ui5/webcomponents-react/dist/Popover';
import { PopoverPlacementType } from '@ui5/webcomponents-react/dist/PopoverPlacementType';
import { StandardListItem } from '@ui5/webcomponents-react/dist/StandardListItem';
import { TabContainer as TabContainer$1 } from '@ui5/webcomponents-react/dist/TabContainer';
import React, { useEffect, useState, forwardRef, useCallback, useRef, useMemo, Children } from 'react';
import { createPortal } from 'react-dom';
import { createUseStyles } from 'react-jss';
import '@ui5/webcomponents-icons/dist/pushpin-off.js';
import '@ui5/webcomponents-icons/dist/slim-arrow-down.js';
import '@ui5/webcomponents-icons/dist/slim-arrow-up.js';
import { EXPAND_HEADER, COLLAPSE_HEADER, UNPIN_HEADER, PIN_HEADER } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';
import { Button } from '@ui5/webcomponents-react/dist/Button';
import { ToggleButton } from '@ui5/webcomponents-react/dist/ToggleButton';
import clsx from 'clsx';
import { getEffectiveScopingSuffixForTag } from '@ui5/webcomponents-base/dist/CustomElementsScope.js';
import _taggedTemplateLiteral from '@babel/runtime/helpers/taggedTemplateLiteral';
import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _createClass from '@babel/runtime/helpers/createClass';
import _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';
import _inherits from '@babel/runtime/helpers/inherits';
import _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';
import _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';
import { html, scopeTag } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
import Icon from '@ui5/webcomponents/dist/Icon.js';
import Tab from '@ui5/webcomponents/dist/Tab.js';
import TabContainer from '@ui5/webcomponents/dist/TabContainer.js';
import { ifDefined } from 'lit-html/directives/if-defined.js';

// Generated file - do not change manually!

/**
 * Defines the horizontal alignment of <code>ui5-popover</code>
 */
var PopoverHorizontalAlign;

(function (PopoverHorizontalAlign) {
  PopoverHorizontalAlign["Center"] = "Center";
  PopoverHorizontalAlign["Left"] = "Left";
  PopoverHorizontalAlign["Right"] = "Right";
  PopoverHorizontalAlign["Stretch"] = "Stretch";
})(PopoverHorizontalAlign || (PopoverHorizontalAlign = {}));

var useDeprecationNoticeForTooltip = function useDeprecationNoticeForTooltip(component, tooltip) {
  useEffect(function () {
    if (tooltip) {
      deprecationNotice(component, '`tooltip` has been deprecated, please use the native `title` attribute instead.');
    }
  }, [tooltip]);
};

var stopPropagation = function stopPropagation(e) {
  var _e$stopImmediatePropa;

  e.stopPropagation();
  (_e$stopImmediatePropa = e.stopImmediatePropagation) === null || _e$stopImmediatePropa === void 0 ? void 0 : _e$stopImmediatePropa.call(e);
};

var useObserveHeights = function useObserveHeights(objectPage, topHeader, headerContentRef, anchorBarRef, _ref) {
  var _anchorBarRef$current, _anchorBarRef$current2;

  var noHeader = _ref.noHeader;

  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      topHeaderHeight = _useState2[0],
      setTopHeaderHeight = _useState2[1];

  var _useState3 = useState(0),
      _useState4 = _slicedToArray(_useState3, 2),
      headerContentHeight = _useState4[0],
      setHeaderContentHeight = _useState4[1];

  var _useState5 = useState(true),
      _useState6 = _slicedToArray(_useState5, 2),
      isIntersecting = _useState6[0],
      setIsIntersecting = _useState6[1];

  useEffect(function () {
    var headerIntersectionObserver = new IntersectionObserver(function (_ref2) {
      var _ref3 = _slicedToArray(_ref2, 1),
          header = _ref3[0];

      if (header.isIntersecting) {
        setIsIntersecting(true);
      } else {
        setIsIntersecting(false);
        setHeaderContentHeight(0);
      }
    }, {
      rootMargin: "-".concat(topHeaderHeight, "px 0px 0px 0px"),
      root: objectPage === null || objectPage === void 0 ? void 0 : objectPage.current,
      threshold: 0.3
    });

    if (headerContentRef !== null && headerContentRef !== void 0 && headerContentRef.current) {
      headerIntersectionObserver.observe(headerContentRef.current);
    }

    return function () {
      headerIntersectionObserver.disconnect();
    };
  }, [topHeaderHeight, setHeaderContentHeight, headerContentRef.current, setIsIntersecting]); // top header

  useEffect(function () {
    var headerContentResizeObserver = new ResizeObserver(function (_ref4) {
      var _borderBoxSize$blockS;

      var _ref5 = _slicedToArray(_ref4, 1),
          header = _ref5[0];

      // Firefox implements `borderBoxSize` as a single content rect, rather than an array
      var borderBoxSize = Array.isArray(header.borderBoxSize) ? header.borderBoxSize[0] : header.borderBoxSize; // Safari doesn't implement `borderBoxSize`

      setTopHeaderHeight((_borderBoxSize$blockS = borderBoxSize === null || borderBoxSize === void 0 ? void 0 : borderBoxSize.blockSize) !== null && _borderBoxSize$blockS !== void 0 ? _borderBoxSize$blockS : header.target.getBoundingClientRect().height);
    });

    if (topHeader !== null && topHeader !== void 0 && topHeader.current) {
      headerContentResizeObserver.observe(topHeader.current);
    }

    return function () {
      headerContentResizeObserver.disconnect();
    };
  }, [topHeader === null || topHeader === void 0 ? void 0 : topHeader.current, setTopHeaderHeight]); // header content

  useEffect(function () {
    var headerContentResizeObserver = new ResizeObserver(function (_ref6) {
      var _ref7 = _slicedToArray(_ref6, 1),
          headerContent = _ref7[0];

      if (isIntersecting) {
        var _borderBoxSize$blockS2;

        // Firefox implements `borderBoxSize` as a single content rect, rather than an array
        var borderBoxSize = Array.isArray(headerContent.borderBoxSize) ? headerContent.borderBoxSize[0] : headerContent.borderBoxSize; // Safari doesn't implement `borderBoxSize`

        setHeaderContentHeight((_borderBoxSize$blockS2 = borderBoxSize === null || borderBoxSize === void 0 ? void 0 : borderBoxSize.blockSize) !== null && _borderBoxSize$blockS2 !== void 0 ? _borderBoxSize$blockS2 : headerContent.target.getBoundingClientRect().height);
      }
    });

    if (headerContentRef !== null && headerContentRef !== void 0 && headerContentRef.current) {
      headerContentResizeObserver.observe(headerContentRef.current);
    }

    return function () {
      headerContentResizeObserver.disconnect();
    };
  }, [headerContentRef === null || headerContentRef === void 0 ? void 0 : headerContentRef.current, setHeaderContentHeight, isIntersecting]);
  var anchorBarHeight = (_anchorBarRef$current = anchorBarRef === null || anchorBarRef === void 0 ? void 0 : (_anchorBarRef$current2 = anchorBarRef.current) === null || _anchorBarRef$current2 === void 0 ? void 0 : _anchorBarRef$current2.offsetHeight) !== null && _anchorBarRef$current !== void 0 ? _anchorBarRef$current : 33;
  var totalHeaderHeight = (noHeader ? 0 : topHeaderHeight + headerContentHeight) + anchorBarHeight;
  return {
    topHeaderHeight: topHeaderHeight,
    headerContentHeight: headerContentHeight,
    anchorBarHeight: anchorBarHeight,
    totalHeaderHeight: totalHeaderHeight
  };
};

addCustomCSS('ui5-button', "\n  :host([data-ui5wcr-dynamic-page-header-action]){\n    width: 1.375rem;\n    height: 1.375rem;\n    min-width: 1.375rem;\n  }\n  :host([data-ui5wcr-dynamic-page-header-action]) .ui5-button-root {\n    padding: 0;\n  }");
addCustomCSS('ui5-toggle-button', "\n    :host([data-ui5wcr-dynamic-page-header-action]){\n    width: 1.375rem;\n    height: 1.375rem;\n    min-width: 1.375rem;\n  }\n  :host([data-ui5wcr-dynamic-page-header-action]) .ui5-button-root {\n    padding: 0;\n  }");
var anchorBarStyles = {
  anchorBarActionButton: {
    position: 'absolute',
    top: "-0.6875rem",
    marginLeft: "-0.6875rem",
    left: '50%',
    zIndex: 3,
    '&:before, &:after': {
      content: '""',
      position: 'absolute',
      width: '4rem',
      top: '50%',
      height: '0.0625rem'
    },
    '&:before': {
      right: '100%',
      backgroundImage: "linear-gradient(to left, ".concat(ThemingParameters.sapHighlightColor, ", rgba(8,84,160,0))")
    },
    '&:after': {
      backgroundImage: "linear-gradient(to right, ".concat(ThemingParameters.sapHighlightColor, ", rgba(8,84,160,0))"),
      left: '100%'
    }
  },
  anchorBarActionButtonRtl: {
    marginRight: "-0.6875rem",
    marginLeft: 0
  },
  anchorBarActionButtonExpandable: {},
  anchorBarActionButtonPinnable: {},
  anchorBarActionPinnableAndExpandable: {
    '&$anchorBarActionButtonPinnable': {
      marginLeft: '0.25rem',
      '&:before': {
        backgroundColor: 'white'
      }
    },
    '&$anchorBarActionButtonExpandable': {
      marginLeft: '-1.75rem'
    }
  },
  anchorBarActionPinnableAndExpandableRtl: {
    '&$anchorBarActionButtonPinnable': {
      marginRight: '0.25rem',
      '&:before': {
        backgroundColor: 'white'
      }
    },
    '&$anchorBarActionButtonExpandable': {
      marginRight: '-1.75rem'
    }
  }
};
var useStyles$2 = createUseStyles(anchorBarStyles, {
  name: 'DynamicPageAnchorBar'
});

/**
 * The dynamic page anchor bar contains the expand/collapse (expands or collapses the header content)
 * and pin button (pins the content header).
 */
var DynamicPageAnchorBar = /*#__PURE__*/forwardRef(function (props, ref) {
  var _a11yConfig$dynamicPa, _a11yConfig$dynamicPa2;

  var showHideHeaderButton = props.showHideHeaderButton,
      headerContentVisible = props.headerContentVisible,
      headerContentPinnable = props.headerContentPinnable,
      headerPinned = props.headerPinned,
      setHeaderPinned = props.setHeaderPinned,
      onToggleHeaderContentVisibility = props.onToggleHeaderContentVisibility,
      onHoverToggleButton = props.onHoverToggleButton,
      style = props.style,
      a11yConfig = props.a11yConfig;
  useDeprecationNoticeForTooltip('DynamicPageAnchorBar', props.tooltip);
  var classes = useStyles$2();

  var _useSyncRef = useSyncRef(ref),
      _useSyncRef2 = _slicedToArray(_useSyncRef, 2),
      componentRef = _useSyncRef2[0],
      anchorBarRef = _useSyncRef2[1];

  var isRTL = useIsRTL(anchorBarRef);
  var shouldRenderHeaderPinnableButton = headerContentPinnable && headerContentVisible;
  var showBothActions = shouldRenderHeaderPinnableButton && showHideHeaderButton;
  var onPinHeader = useCallback(function (e) {
    setHeaderPinned(e.target.pressed);
  }, [setHeaderPinned]);
  var anchorBarActionButtonClasses = clsx(classes.anchorBarActionButton, isRTL && classes.anchorBarActionButtonRtl);
  var bothActionClasses = clsx(classes.anchorBarActionPinnableAndExpandable, isRTL && classes.anchorBarActionPinnableAndExpandableRtl);

  var onToggleHeaderButtonClick = function onToggleHeaderButtonClick(e) {
    onToggleHeaderContentVisibility(enrichEventWithDetails(e, {
      visible: !headerContentVisible
    }));
  };

  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');
  return /*#__PURE__*/React.createElement("section", {
    "data-component-name": "DynamicPageAnchorBar",
    style: style,
    role: (_a11yConfig$dynamicPa = a11yConfig === null || a11yConfig === void 0 ? void 0 : (_a11yConfig$dynamicPa2 = a11yConfig.dynamicPageAnchorBar) === null || _a11yConfig$dynamicPa2 === void 0 ? void 0 : _a11yConfig$dynamicPa2.role) !== null && _a11yConfig$dynamicPa !== void 0 ? _a11yConfig$dynamicPa : 'navigation',
    className: showHideHeaderButton || headerContentPinnable ? classes.anchorBarActionButton : null,
    ref: componentRef
  }, showHideHeaderButton && /*#__PURE__*/React.createElement(Button, {
    icon: !headerContentVisible ? 'slim-arrow-down' : 'slim-arrow-up',
    "data-ui5wcr-dynamic-page-header-action": "",
    className: clsx(anchorBarActionButtonClasses, classes.anchorBarActionButtonExpandable, showBothActions && bothActionClasses),
    onClick: onToggleHeaderButtonClick,
    onMouseOver: onHoverToggleButton,
    onMouseLeave: onHoverToggleButton,
    title: i18nBundle.getText(!headerContentVisible ? EXPAND_HEADER : COLLAPSE_HEADER),
    "aria-label": i18nBundle.getText(!headerContentVisible ? EXPAND_HEADER : COLLAPSE_HEADER)
  }), shouldRenderHeaderPinnableButton && /*#__PURE__*/React.createElement(ToggleButton, {
    icon: "pushpin-off",
    "data-ui5wcr-dynamic-page-header-action": "",
    className: clsx(anchorBarActionButtonClasses, classes.anchorBarActionButtonPinnable, showBothActions && bothActionClasses),
    pressed: headerPinned,
    onClick: onPinHeader,
    title: i18nBundle.getText(headerPinned ? UNPIN_HEADER : PIN_HEADER),
    "aria-label": i18nBundle.getText(headerPinned ? UNPIN_HEADER : PIN_HEADER)
  }));
});
DynamicPageAnchorBar.displayName = 'DynamicPageAnchorBar';

var styles$1 = {
  base: {
    alignSelf: 'center',
    opacity: 0
  },
  hidden: {
    opacity: 0
  },
  visible: {
    transition: 'opacity 0.5s',
    opacity: 1
  },
  imageContainer: {
    display: 'inline-block',
    verticalAlign: 'middle',
    maxHeight: '3rem',
    width: '3rem',
    maxWidth: '3rem'
  },
  image: {
    width: '100%',
    height: '100%'
  }
};
var useStyles$1 = createUseStyles(styles$1, {
  name: 'CollapsedAvatar'
});
var CollapsedAvatar = function CollapsedAvatar(props) {
  var image = props.image,
      imageShapeCircle = props.imageShapeCircle,
      style = props.style;
  var classes = useStyles$1();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isMounted = _useState2[0],
      setIsMounted = _useState2[1];

  var domRef = useRef();
  var avatarContent = useMemo(function () {
    if (!image) return null;

    if (typeof image === 'string') {
      return /*#__PURE__*/React.createElement("span", {
        className: classes.imageContainer,
        style: {
          borderRadius: imageShapeCircle ? '50%' : 0,
          overflow: 'hidden'
        }
      }, /*#__PURE__*/React.createElement("img", {
        className: classes.image,
        src: image,
        alt: "Object Page Image"
      }));
    } else {
      var _image$props, _image$props2;

      return /*#__PURE__*/React.cloneElement(image, {
        size: AvatarSize.S,
        // @ts-ignore
        className: (_image$props = image.props) !== null && _image$props !== void 0 && _image$props.className ? "".concat(classes.imageContainer, " ").concat((_image$props2 = image.props) === null || _image$props2 === void 0 ? void 0 : _image$props2.className) : classes.imageContainer
      });
    }
  }, [image, imageShapeCircle]);
  useEffect(function () {
    setIsMounted(true);
  }, []);
  var containerClasses = clsx(classes.base, isMounted ? classes.visible : classes.hidden);
  return /*#__PURE__*/React.createElement("div", {
    ref: domRef,
    className: containerClasses,
    style: style,
    "data-component-name": "ObjectPageCollapsedAvatar"
  }, avatarContent);
};

var _headerCollapsed;
var DynamicPageCssVariables = {
  headerDisplay: '--ui5wcr_DynamicPage_header_display'
};
({
  dynamicPage: _defineProperty({
    width: '100%',
    height: '100%',
    maxHeight: '100%',
    position: 'relative',
    whiteSpace: 'normal',
    fontFamily: ThemingParameters.sapFontFamily,
    backgroundColor: ThemingParameters.sapBackgroundColor,
    overflowX: 'hidden',
    overflowY: 'auto'
  }, DynamicPageCssVariables.headerDisplay, 'block'),
  headerCollapsed: (_headerCollapsed = {}, _defineProperty(_headerCollapsed, DynamicPageCssVariables.headerDisplay, 'none'), _defineProperty(_headerCollapsed, '& $anchorBar > section[role="navigation"]', {
    top: '-0.025rem'
  }), _headerCollapsed),
  anchorBar: {
    position: 'sticky',
    boxShadow: ThemingParameters.sapContent_HeaderShadow,
    height: '1px',
    zIndex: 2,
    '& > section[role="navigation"]': {
      top: 0
    }
  },
  iEClass: {
    position: 'fixed',
    //page width - scrollbar
    width: 'calc(100% - 18px)'
  },
  iEBackgroundElement: {
    position: 'fixed',
    backgroundColor: ThemingParameters.sapObjectHeader_Background
  },
  contentContainer: {
    paddingTop: '1rem',
    boxSizing: 'border-box',
    width: '100%',
    height: 'auto',
    fontFamily: ThemingParameters.sapFontFamily,
    zIndex: 0
  },
  backgroundStandard: {
    background: ThemingParameters.sapBackgroundColor
  },
  backgroundSolid: {
    background: ThemingParameters.sapBackgroundColor
  },
  backgroundList: {
    background: ThemingParameters.sapGroup_ContentBackground
  },
  backgroundTransparent: {
    background: 'transparent'
  },
  footer: {
    bottom: '0.5rem',
    margin: '0 0.5rem',
    left: 0,
    right: 0
  }
});

var _objectPage, _globalHtml, _globalDirRtl, _header;
var ObjectPageCssVariables = {
  anchorFloat: '--_ui5wcr_ObjectPage_actions_float',
  anchorLeft: '--_ui5wcr_ObjectPage_actions_left',
  anchorRight: '--_ui5wcr_ObjectPage_actions_right',
  lastSectionMargin: '--_ui5wcr_ObjectPage_last_section_margin_bottom'
};
var styles = {
  objectPage: (_objectPage = {}, _defineProperty(_objectPage, DynamicPageCssVariables.headerDisplay, 'block'), _defineProperty(_objectPage, "boxSizing", 'border-box'), _defineProperty(_objectPage, "width", '100%'), _defineProperty(_objectPage, "height", '100%'), _defineProperty(_objectPage, "maxHeight", '100vh'), _defineProperty(_objectPage, "position", 'relative'), _defineProperty(_objectPage, "whiteSpace", 'normal'), _defineProperty(_objectPage, "fontFamily", ThemingParameters.sapFontFamily), _defineProperty(_objectPage, "backgroundColor", ThemingParameters.sapBackgroundColor), _defineProperty(_objectPage, "overflowX", 'hidden'), _defineProperty(_objectPage, "overflowY", 'auto'), _defineProperty(_objectPage, ObjectPageCssVariables.lastSectionMargin, 0), _defineProperty(_objectPage, '& section[id*="ObjectPageSection-"] > div[role="heading"]', {
    display: 'none'
  }), _defineProperty(_objectPage, '& section[id*="ObjectPageSection-"] ~ section[id*="ObjectPageSection-"] > div[role="heading"]', {
    display: 'block'
  }), _defineProperty(_objectPage, '& section[data-component-name="ObjectPageSection"]:last-of-type', {
    marginBottom: "var(".concat(ObjectPageCssVariables.lastSectionMargin, ")")
  }), _objectPage),
  '@global html': (_globalHtml = {}, _defineProperty(_globalHtml, ObjectPageCssVariables.anchorFloat, 'right'), _defineProperty(_globalHtml, ObjectPageCssVariables.anchorRight, '1.25rem'), _defineProperty(_globalHtml, ObjectPageCssVariables.anchorLeft, 'unset'), _globalHtml),
  '@global [dir="rtl"]': (_globalDirRtl = {}, _defineProperty(_globalDirRtl, ObjectPageCssVariables.anchorFloat, 'left'), _defineProperty(_globalDirRtl, ObjectPageCssVariables.anchorRight, 'unset'), _defineProperty(_globalDirRtl, ObjectPageCssVariables.anchorLeft, '1.25rem'), _globalDirRtl),
  iconTabBarMode: {
    '& section[data-component-name="ObjectPageSection"] > div[role="heading"]': {
      display: 'none'
    }
  },
  headerCollapsed: _defineProperty({}, DynamicPageCssVariables.headerDisplay, 'none'),
  headerContainer: {
    marginBottom: '0.25rem',
    backgroundColor: ThemingParameters.sapObjectHeader_Background,
    display: 'grid',
    gridAutoColumns: 'min-content calc(100% - 5rem - 2rem)'
    /*avatar size - padding */
    ,
    '& [data-component-name="ObjectPageHeaderContent"]': {
      gridColumn: 2
    }
  },
  headerHoverStyles: {
    '&[data-not-clickable="true"]': {
      cursor: 'unset'
    },
    '&[data-not-clickable="false"]': {
      // TODO background color should be sapObjectHeader_Hover_Background (same color as sapTile_Active_Background)
      backgroundColor: "".concat(ThemingParameters.sapTile_Active_Background),
      '& [data-component-name="DynamicPageTitle"]': {
        backgroundColor: ThemingParameters.sapTile_Active_Background
      }
    }
  },
  header: (_header = {}, _defineProperty(_header, DynamicPageCssVariables.headerDisplay, 'block'), _defineProperty(_header, "boxSizing", 'border-box'), _defineProperty(_header, "backgroundColor", ThemingParameters.sapObjectHeader_Background), _defineProperty(_header, "position", 'sticky'), _defineProperty(_header, "top", 0), _defineProperty(_header, "zIndex", 2), _defineProperty(_header, '& [data-component-name="DynamicPageTitle"]', {
    gridColumn: 2,
    paddingLeft: 0,
    paddingRight: 0
  }), _defineProperty(_header, "cursor", 'pointer'), _header),
  iEClass: {
    position: 'fixed',
    width: 'calc(100% - 18px)'
  },
  headerImage: {
    minWidth: '5rem',
    maxWidth: '5rem',
    maxHeight: '5rem',
    display: 'inline-block',
    marginRight: '2rem'
  },
  headerImageRtl: {
    marginRight: 0,
    marginLeft: '2rem'
  },
  image: {
    width: '100%',
    height: '100%'
  },
  anchorBar: {
    position: 'sticky',
    zIndex: 2
  },
  tabContainer: {
    position: 'sticky',
    zIndex: 1
  },
  footer: {
    position: 'sticky',
    bottom: '0.5rem',
    margin: '0 0.5rem'
  }
};

var _templateObject, _templateObject2, _templateObject3;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var metadata = {
  tag: 'ui5-object-page-anchor-tab',
  properties: {
    withSubSections: {
      type: Boolean
    }
  },
  events: {
    'show-sub-sections': {}
  }
};

var ObjectPageAnchorTab = /*#__PURE__*/function (_Tab) {
  _inherits(ObjectPageAnchorTab, _Tab);

  var _super = _createSuper(ObjectPageAnchorTab);

  function ObjectPageAnchorTab() {
    var _this;

    _classCallCheck(this, ObjectPageAnchorTab);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "_handleOnSubSectionsClick", function (e) {
      e.stopPropagation();
      e.preventDefault(); // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore

      _this.fireEvent('show-sub-sections', {
        targetRef: e.target.parentElement.parentElement
      });
    });

    return _this;
  }

  _createClass(ObjectPageAnchorTab, null, [{
    key: "metadata",
    get: function get() {
      return metadata;
    }
  }, {
    key: "dependencies",
    get: function get() {
      return [Icon];
    }
  }, {
    key: "stripTemplate",
    get: function get() {
      return function (context, tags, suffix) {
        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([" <div\n        id=\"", "\"\n        class=\"", "\"\n        tabindex=\"", "\"\n        role=\"tab\"\n        aria-posinset=\"", "\"\n        aria-setsize=\"", "\"\n        aria-controls=\"ui5-tc-contentItem-", "\"\n        aria-selected=\"", "\"\n        aria-disabled=\"", "\"\n        ?disabled=\"", "\"\n        aria-labelledby=\"", "\"\n        data-ui5-stable=\"", "\"\n        style=\"list-style-type: none;\"\n      >\n        <div class=\"ui5-tab-strip-itemContent\">\n          ", "\n          ", "\n        </div>\n      </div>"])), ifDefined(context._id), ifDefined(context.stripClasses), ifDefined(context._tabIndex), ifDefined(context._posinset), ifDefined(context._setsize), ifDefined(context._posinset), ifDefined(context.effectiveSelected), ifDefined(context.effectiveDisabled), context.effectiveDisabled, ifDefined(context.ariaLabelledBy), ifDefined(context.stableDomRef), context.text ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["<span\n                class=\"ui5-tab-strip-itemText\"\n                id=\"", "-text\"\n                ?data-active=\"", "\"\n              >\n                ", "\n              </span>"])), ifDefined(context._id), ifDefined(context.withSubSections), ifDefined(context.text)) : undefined, context.withSubSections ? html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["<", "\n                name=\"slim-arrow-down\"\n                class=\"objectPageSubSectionsIcon\"\n                interactive\n                @click=\"", "\"\n              />"])), scopeTag('ui5-icon', tags, suffix), context._handleOnSubSectionsClick) : undefined);
      };
    } // maybe we can look into a custom overflow template as well
    // static get overflowTemplate() {
    //   return (context, tags, suffix) => {
    //     setTags(tags);
    //     setSuffix(suffix);
    //     return html`<ui5-li-custom
    //       id="${ifDefined(context._id)}"
    //       class="${ifDefined(context.overflowClasses)}"
    //       type="${ifDefined(context.overflowState)}"
    //       ?selected="${context.effectiveSelected}"
    //       ?disabled="${context.effectiveDisabled}"
    //       aria-disabled="${ifDefined(context.effectiveDisabled)}"
    //       aria-selected="${ifDefined(context.effectiveSelected)}"
    //       aria-labelledby="${ifDefined(context.ariaLabelledBy)}"
    //     >
    //       <div class="ui5-tab-overflow-itemContent">${ifDefined(context.text)}</div>
    //     </ui5-li-custom>`;
    //   };
    // }

  }]);

  return ObjectPageAnchorTab;
}(Tab);

TabContainer.registerTabStyles("\n\n:host([data-component-name=\"ObjectPageTabContainer\"]) .ui5-tab-strip-itemContent {\n  display: flex;\n  align-items: center;\n  pointer-events: all;\n  flex-direction: row;\n}\n\n.objectPageSubSectionsIcon {\n  padding-left: 0.625rem;\n}\n\n.objectPageSubSectionsIcon[interactive]:hover {\n  color: ".concat(ThemingParameters.sapContent_IconColor, ";\n}\n\n:host([data-component-name=\"ObjectPageTabContainer\"]) .ui5-tab-strip-itemText[data-active]:hover {\n  color: ").concat(ThemingParameters.sapButton_Lite_Hover_TextColor, ";\n}\n")); // TabContainer.registerStaticAreaTabStyles(overflowCss);

var safeGetChildrenArray = function safeGetChildrenArray(children) {
  return Children.toArray(children).filter(Boolean);
};
var getSectionById = function getSectionById(sections, id) {
  return safeGetChildrenArray(sections).find(function (objectPageSection) {
    var _objectPageSection$pr;

    return ((_objectPageSection$pr = objectPageSection.props) === null || _objectPageSection$pr === void 0 ? void 0 : _objectPageSection$pr.id) === id;
  });
};
var extractSectionIdFromHtmlId = function extractSectionIdFromHtmlId(id) {
  if (!id) return null;
  return id.replace(/^ObjectPageSection-/, '');
};
var getLastObjectPageSection = function getLastObjectPageSection(ref, alwaysSetMargin) {
  var _ref$current;

  var sections = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelectorAll('[id^="ObjectPageSection"]');

  if (!sections || sections.length < 1) {
    return null;
  }

  if (!alwaysSetMargin && sections.length === 1) {
    if (sections[0].querySelectorAll('[id^="ObjectPageSubSection"]').length === 0) {
      return null;
    }
  }

  return sections[sections.length - 1];
};

// @ts-ignore

ObjectPageAnchorTab.define();
var tagName = 'ui5-object-page-anchor-tab';
var ObjectPageAnchorButton = function ObjectPageAnchorButton(props) {
  var ref = useRef();
  var section = props.section,
      index = props.index,
      selected = props.selected,
      onShowSubSectionPopover = props.onShowSubSectionPopover;
  var hasSubSections = safeGetChildrenArray(section.props.children).some(function (subSection) {
    var _subSection$type;

    return (subSection === null || subSection === void 0 ? void 0 : (_subSection$type = subSection.type) === null || _subSection$type === void 0 ? void 0 : _subSection$type.displayName) === 'ObjectPageSubSection';
  });
  useEffect(function () {
    var listener = function listener(e) {
      onShowSubSectionPopover(e, section);
    };

    var el = ref.current;
    el.addEventListener('show-sub-sections', listener);
    return function () {
      el === null || el === void 0 ? void 0 : el.removeEventListener('show-sub-sections', listener);
    };
  }, [onShowSubSectionPopover]);
  var tagNameSuffix = getEffectiveScopingSuffixForTag(tagName);
  var Component = tagNameSuffix ? "".concat(tagName, "-").concat(tagNameSuffix) : tagName;
  return /*#__PURE__*/React.createElement(Component, {
    ref: ref,
    "data-index": index,
    "data-section-id": section.props.id,
    text: section.props.titleText,
    selected: selected || undefined,
    "with-sub-sections": hasSubSections || undefined
  });
};

var _excluded = ["headerTitle", "image", "footer", "mode", "imageShapeCircle", "className", "style", "tooltip", "slot", "showHideHeaderButton", "children", "onSelectedSectionChange", "selectedSectionId", "alwaysShowContentHeader", "showTitleInHeaderContent", "headerContent", "headerContentPinnable", "a11yConfig", "placeholder", "portalContainer"],
    _excluded2 = ["onScroll", "selectedSubSectionId"];
addCustomCSS('ui5-tabcontainer', "\n  :host([data-component-name=\"ObjectPageTabContainer\"]) .ui5-tc__header {\n    box-shadow: inset 0 -0.0625rem ".concat(ThemingParameters.sapPageHeader_BorderColor, ", 0 0.125rem 0.25rem 0 rgb(0 0 0 / 8%);\n  }\n  "));
var useStyles = createUseStyles(styles, {
  name: 'ObjectPage'
});
/**
 * A component that allows apps to easily display information related to a business object.<br />
 * The `ObjectPage` is composed of a header (title and content) and block content wrapped in sections and subsections that structure the information.
 */

var ObjectPage = /*#__PURE__*/forwardRef(function (props, ref) {
  var _safeGetChildrenArray, _safeGetChildrenArray2, _a11yConfig$objectPag, _a11yConfig$objectPag2, _a11yConfig$objectPag3, _a11yConfig$objectPag4, _popoverContent$props;

  var headerTitle = props.headerTitle,
      image = props.image,
      footer = props.footer,
      mode = props.mode,
      imageShapeCircle = props.imageShapeCircle,
      className = props.className,
      style = props.style,
      tooltip = props.tooltip,
      slot = props.slot,
      showHideHeaderButton = props.showHideHeaderButton,
      children = props.children,
      onSelectedSectionChange = props.onSelectedSectionChange,
      selectedSectionId = props.selectedSectionId,
      alwaysShowContentHeader = props.alwaysShowContentHeader,
      showTitleInHeaderContent = props.showTitleInHeaderContent,
      headerContent = props.headerContent,
      headerContentPinnable = props.headerContentPinnable,
      a11yConfig = props.a11yConfig,
      placeholder = props.placeholder,
      portalContainer = props.portalContainer,
      rest = _objectWithoutProperties(props, _excluded);

  useDeprecationNoticeForTooltip('ObjectPage', props.tooltip);
  var classes = useStyles();
  var firstSectionId = (_safeGetChildrenArray = safeGetChildrenArray(children)[0]) === null || _safeGetChildrenArray === void 0 ? void 0 : (_safeGetChildrenArray2 = _safeGetChildrenArray.props) === null || _safeGetChildrenArray2 === void 0 ? void 0 : _safeGetChildrenArray2.id;

  var _useState = useState(selectedSectionId !== null && selectedSectionId !== void 0 ? selectedSectionId : firstSectionId),
      _useState2 = _slicedToArray(_useState, 2),
      internalSelectedSectionId = _useState2[0],
      setInternalSelectedSectionId = _useState2[1];

  var _useState3 = useState(props.selectedSubSectionId),
      _useState4 = _slicedToArray(_useState3, 2),
      selectedSubSectionId = _useState4[0],
      setSelectedSubSectionId = _useState4[1];

  var _useState5 = useState(alwaysShowContentHeader),
      _useState6 = _slicedToArray(_useState5, 2),
      headerPinned = _useState6[0],
      setHeaderPinned = _useState6[1];

  var isProgrammaticallyScrolled = useRef(false);

  var _useSyncRef = useSyncRef(ref),
      _useSyncRef2 = _slicedToArray(_useSyncRef, 2),
      componentRef = _useSyncRef2[0],
      objectPageRef = _useSyncRef2[1];

  var topHeaderRef = useRef();
  var scrollEvent = useRef(); //@ts-ignore

  var _useSyncRef3 = useSyncRef(headerContent === null || headerContent === void 0 ? void 0 : headerContent.ref),
      _useSyncRef4 = _slicedToArray(_useSyncRef3, 2),
      componentRefHeaderContent = _useSyncRef4[0],
      headerContentRef = _useSyncRef4[1];

  var anchorBarRef = useRef();
  var scrollTimeout = useRef(null);

  var _useState7 = useState(false),
      _useState8 = _slicedToArray(_useState7, 2),
      isAfterScroll = _useState8[0],
      setIsAfterScroll = _useState8[1];

  var prevInternalSelectedSectionId = useRef(internalSelectedSectionId);

  var fireOnSelectedChangedEvent = function fireOnSelectedChangedEvent(targetEvent, index, id, section) {
    if (typeof onSelectedSectionChange === 'function' && prevInternalSelectedSectionId.current !== id) {
      onSelectedSectionChange(enrichEventWithDetails(targetEvent, {
        selectedSectionIndex: parseInt(index, 10),
        selectedSectionId: id,
        section: section
      }));
      prevInternalSelectedSectionId.current = id;
    }
  };

  var debouncedOnSectionChange = useRef(debounce(fireOnSelectedChangedEvent, 500)).current;
  useEffect(function () {
    return function () {
      debouncedOnSectionChange.cancel();
      clearTimeout(scrollTimeout.current);
    };
  }, []);
  var isRTL = useIsRTL(objectPageRef);
  var responsivePaddingClass = useResponsiveContentPadding(objectPageRef.current); // observe heights of header parts

  var _useObserveHeights = useObserveHeights(objectPageRef, topHeaderRef, headerContentRef, anchorBarRef, {
    noHeader: !headerTitle && !headerContent
  }),
      topHeaderHeight = _useObserveHeights.topHeaderHeight,
      headerContentHeight = _useObserveHeights.headerContentHeight,
      anchorBarHeight = _useObserveHeights.anchorBarHeight,
      totalHeaderHeight = _useObserveHeights.totalHeaderHeight;

  var avatar = useMemo(function () {
    if (!image) {
      return null;
    }

    var headerImageClasses = clsx(classes.headerImage, isRTL && classes.headerImageRtl);

    if (typeof image === 'string') {
      return /*#__PURE__*/React.createElement("span", {
        className: headerImageClasses,
        style: {
          borderRadius: imageShapeCircle ? '50%' : 0,
          overflow: 'hidden'
        }
      }, /*#__PURE__*/React.createElement("img", {
        src: image,
        className: classes.image,
        alt: "Company Logo"
      }));
    } else {
      var _image$props;

      return /*#__PURE__*/React.cloneElement(image, {
        size: AvatarSize.L,
        className: clsx(headerImageClasses, (_image$props = image.props) === null || _image$props === void 0 ? void 0 : _image$props.className)
      });
    }
  }, [image, classes.headerImage, classes.headerImageRtl, classes.image, imageShapeCircle, isRTL]);
  var prevTopHeaderHeight = useRef(0);
  var scrollToSection = useCallback(function (sectionId) {
    if (!sectionId) {
      return;
    }

    if (firstSectionId === sectionId) {
      var _objectPageRef$curren;

      (_objectPageRef$curren = objectPageRef.current) === null || _objectPageRef$curren === void 0 ? void 0 : _objectPageRef$curren.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    } else {
      var _objectPageRef$curren2, _objectPageRef$curren3;

      var childOffset = (_objectPageRef$curren2 = objectPageRef.current) === null || _objectPageRef$curren2 === void 0 ? void 0 : (_objectPageRef$curren3 = _objectPageRef$curren2.querySelector("#ObjectPageSection-".concat(sectionId))) === null || _objectPageRef$curren3 === void 0 ? void 0 : _objectPageRef$curren3.offsetTop;

      if (!isNaN(childOffset)) {
        var _objectPageRef$curren4;

        var safeTopHeaderHeight = topHeaderHeight || prevTopHeaderHeight.current;

        if (topHeaderHeight) {
          prevTopHeaderHeight.current = topHeaderHeight;
        }

        (_objectPageRef$curren4 = objectPageRef.current) === null || _objectPageRef$curren4 === void 0 ? void 0 : _objectPageRef$curren4.scrollTo({
          top: childOffset - safeTopHeaderHeight - anchorBarHeight - (headerPinned ? headerContentHeight : 0),
          behavior: 'smooth'
        });
      }
    }

    isProgrammaticallyScrolled.current = false;
  }, [firstSectionId, objectPageRef, topHeaderHeight, anchorBarHeight, headerPinned, headerContentHeight, prevTopHeaderHeight.current]);

  var programmaticallySetSection = function programmaticallySetSection() {
    var currentId = selectedSectionId !== null && selectedSectionId !== void 0 ? selectedSectionId : firstSectionId;

    if (currentId !== prevSelectedSectionId.current) {
      var _objectPageRef$curren5;

      debouncedOnSectionChange.cancel();
      isProgrammaticallyScrolled.current = true;
      setInternalSelectedSectionId(currentId);
      prevSelectedSectionId.current = currentId;
      var sections = (_objectPageRef$curren5 = objectPageRef.current) === null || _objectPageRef$curren5 === void 0 ? void 0 : _objectPageRef$curren5.querySelectorAll('section[data-component-name="ObjectPageSection"]');
      var currentIndex = safeGetChildrenArray(children).findIndex(function (objectPageSection, index) {
        var _objectPageSection$pr;

        return ((_objectPageSection$pr = objectPageSection.props) === null || _objectPageSection$pr === void 0 ? void 0 : _objectPageSection$pr.id) === currentId;
      });
      fireOnSelectedChangedEvent({}, currentIndex, currentId, sections[0]);
    }
  }; // change selected section when prop is changed (external change)


  var prevSelectedSectionId = useRef();

  var _useState9 = useState(0),
      _useState10 = _slicedToArray(_useState9, 2),
      timeStamp = _useState10[0],
      setTimeStamp = _useState10[1];

  var requestAnimationFrameRef = useRef();
  useEffect(function () {
    if (selectedSectionId) {
      if (mode === ObjectPageMode.Default) {
        // wait for DOM draw, otherwise initial scroll won't work as intended
        if (timeStamp < 750 && timeStamp !== undefined) {
          requestAnimationFrameRef.current = requestAnimationFrame(function (internalTimestamp) {
            setTimeStamp(internalTimestamp);
          });
        } else {
          setTimeStamp(undefined);
          programmaticallySetSection();
        }
      } else {
        programmaticallySetSection();
      }
    }

    return function () {
      cancelAnimationFrame(requestAnimationFrameRef.current);
    };
  }, [timeStamp, selectedSectionId, firstSectionId, debouncedOnSectionChange]); // section was selected by clicking on the anchor bar buttons

  var handleOnSectionSelected = useCallback(function (targetEvent, newSelectionSectionId, index, section) {
    isProgrammaticallyScrolled.current = true;
    debouncedOnSectionChange.cancel();
    setInternalSelectedSectionId(function (oldSelectedSection) {
      if (oldSelectedSection === newSelectionSectionId) {
        scrollToSection(newSelectionSectionId);
      }

      return newSelectionSectionId;
    });
    scrollEvent.current = targetEvent;
    fireOnSelectedChangedEvent(targetEvent, index, newSelectionSectionId, section);
  }, [onSelectedSectionChange, setInternalSelectedSectionId, isProgrammaticallyScrolled, scrollToSection]); // do internal scrolling

  useEffect(function () {
    if (mode === ObjectPageMode.Default && isProgrammaticallyScrolled.current === true && !selectedSubSectionId) {
      scrollToSection(internalSelectedSectionId);
    }
  }, [internalSelectedSectionId, mode, isProgrammaticallyScrolled, scrollToSection, selectedSubSectionId]); // Scrolling for Sub Section Selection

  useEffect(function () {
    if (selectedSubSectionId && isProgrammaticallyScrolled.current === true) {
      var _objectPageRef$curren6;

      var currentSubSection = (_objectPageRef$curren6 = objectPageRef.current) === null || _objectPageRef$curren6 === void 0 ? void 0 : _objectPageRef$curren6.querySelector("div[id=\"ObjectPageSubSection-".concat(selectedSubSectionId, "\"]"));
      var childOffset = currentSubSection === null || currentSubSection === void 0 ? void 0 : currentSubSection.offsetTop;

      if (!isNaN(childOffset)) {
        var _objectPageRef$curren7;

        currentSubSection.focus();
        (_objectPageRef$curren7 = objectPageRef.current) === null || _objectPageRef$curren7 === void 0 ? void 0 : _objectPageRef$curren7.scrollTo({
          top: childOffset - topHeaderHeight - anchorBarHeight - 48
          /*tabBar*/
          - (headerPinned ? headerContentHeight : 0) - 16,
          behavior: 'smooth'
        });
      }

      isProgrammaticallyScrolled.current = false;
    }
  }, [selectedSubSectionId, isProgrammaticallyScrolled.current, topHeaderHeight, anchorBarHeight, headerPinned, headerContentHeight]);
  useEffect(function () {
    setHeaderPinned(alwaysShowContentHeader);
  }, [setHeaderPinned, alwaysShowContentHeader]);
  useEffect(function () {
    setSelectedSubSectionId(props.selectedSubSectionId);

    if (props.selectedSubSectionId) {
      isProgrammaticallyScrolled.current = true;

      if (mode === ObjectPageMode.IconTabBar) {
        var sectionId;
        safeGetChildrenArray(children).forEach(function (section) {
          if ( /*#__PURE__*/React.isValidElement(section) && section.props && section.props.children) {
            safeGetChildrenArray(section.props.children).forEach(function (subSection) {
              if ( /*#__PURE__*/React.isValidElement(subSection) && subSection.props && subSection.props.id === props.selectedSubSectionId) {
                var _section$props;

                sectionId = (_section$props = section.props) === null || _section$props === void 0 ? void 0 : _section$props.id;
              }
            });
          }
        });

        if (sectionId) {
          setInternalSelectedSectionId(sectionId);
        }
      }
    }
  }, [props.selectedSubSectionId, setInternalSelectedSectionId, setSelectedSubSectionId, children, mode]);
  useEffect(function () {
    var fillerDivObserver = new ResizeObserver(function () {
      var _objectPageRef$curren8, _objectPageRef$curren9;

      var heightDiff = 0;
      var maxHeight = Math.min((_objectPageRef$curren8 = objectPageRef.current) === null || _objectPageRef$curren8 === void 0 ? void 0 : _objectPageRef$curren8.clientHeight, window.innerHeight);
      var availableScrollHeight = maxHeight - totalHeaderHeight;
      var lastSectionDomRef = getLastObjectPageSection(objectPageRef, !!footer && mode === ObjectPageMode.IconTabBar);

      if (lastSectionDomRef) {
        var subSections = lastSectionDomRef.querySelectorAll('[id^="ObjectPageSubSection"]');
        var lastSubSectionHeight;

        if (subSections.length > 0) {
          lastSubSectionHeight = subSections[subSections.length - 1].offsetHeight;
        } else {
          lastSubSectionHeight = lastSectionDomRef.offsetHeight - lastSectionDomRef.querySelector("[role='heading']").offsetHeight;
        }

        heightDiff = Math.max(0, availableScrollHeight - lastSubSectionHeight);

        if (isNaN(heightDiff)) {
          heightDiff = 0;
        }
      }

      var lastSectionMargin = footer ? "calc(".concat(heightDiff, "px + 1rem)") : "".concat(heightDiff, "px");
      (_objectPageRef$curren9 = objectPageRef.current) === null || _objectPageRef$curren9 === void 0 ? void 0 : _objectPageRef$curren9.style.setProperty(ObjectPageCssVariables.lastSectionMargin, lastSectionMargin);
    });
    fillerDivObserver.observe(objectPageRef.current);
    return function () {
      fillerDivObserver.disconnect();
    };
  }, [totalHeaderHeight, objectPageRef, children, mode, footer]);
  var handleOnSubSectionSelected = useCallback(function (e) {
    isProgrammaticallyScrolled.current = true;

    if (mode === ObjectPageMode.IconTabBar) {
      var _e$detail$section$pro, _objectPageRef$curren10;

      var sectionId = (_e$detail$section$pro = e.detail.section.props) === null || _e$detail$section$pro === void 0 ? void 0 : _e$detail$section$pro.id;
      setInternalSelectedSectionId(sectionId);
      var sections = (_objectPageRef$curren10 = objectPageRef.current) === null || _objectPageRef$curren10 === void 0 ? void 0 : _objectPageRef$curren10.querySelectorAll('section[data-component-name="ObjectPageSection"]');
      var currentIndex = safeGetChildrenArray(children).findIndex(function (objectPageSection) {
        var _objectPageSection$pr2;

        return ((_objectPageSection$pr2 = objectPageSection.props) === null || _objectPageSection$pr2 === void 0 ? void 0 : _objectPageSection$pr2.id) === sectionId;
      });
      debouncedOnSectionChange(e, currentIndex, sectionId, sections[currentIndex]);
    }

    var subSection = e.detail.subSection;
    setSelectedSubSectionId(subSection.props.id);
  }, [mode, setInternalSelectedSectionId, setSelectedSubSectionId, isProgrammaticallyScrolled, children]);

  var _useState11 = useState(false),
      _useState12 = _slicedToArray(_useState11, 2),
      scrolledHeaderExpanded = _useState12[0],
      setScrolledHeaderExpanded = _useState12[1];

  var scrollTimout = useRef(0);

  var onToggleHeaderContentVisibility = function onToggleHeaderContentVisibility(e) {
    scrollTimout.current = performance.now() + 500;

    if (!e.detail.visible) {
      var _objectPageRef$curren11;

      (_objectPageRef$curren11 = objectPageRef.current) === null || _objectPageRef$curren11 === void 0 ? void 0 : _objectPageRef$curren11.classList.add(classes.headerCollapsed);
    } else {
      var _objectPageRef$curren12;

      setScrolledHeaderExpanded(true);
      (_objectPageRef$curren12 = objectPageRef.current) === null || _objectPageRef$curren12 === void 0 ? void 0 : _objectPageRef$curren12.classList.remove(classes.headerCollapsed);
    }
  };

  var objectPageClasses = clsx(classes.objectPage, GlobalStyleClasses.sapScrollBar, className, mode === ObjectPageMode.IconTabBar && classes.iconTabBarMode);

  rest.onScroll;
      rest.selectedSubSectionId;
      var propsWithoutOmitted = _objectWithoutProperties(rest, _excluded2);

  useEffect(function () {
    var _objectPageRef$curren13, _objectPageRef$curren14, _objectPageRef$curren15;

    var sections = (_objectPageRef$curren13 = objectPageRef.current) === null || _objectPageRef$curren13 === void 0 ? void 0 : _objectPageRef$curren13.querySelectorAll('section[data-component-name="ObjectPageSection"]');
    var objectPageHeight = (_objectPageRef$curren14 = (_objectPageRef$curren15 = objectPageRef.current) === null || _objectPageRef$curren15 === void 0 ? void 0 : _objectPageRef$curren15.clientHeight) !== null && _objectPageRef$curren14 !== void 0 ? _objectPageRef$curren14 : 1000;
    var marginBottom = objectPageHeight - totalHeaderHeight -
    /*TabContainer*/
    48;
    var rootMargin = "-".concat(totalHeaderHeight, "px 0px -").concat(marginBottom < 0 ? 0 : marginBottom, "px 0px");
    var observer = new IntersectionObserver(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          section = _ref2[0];

      if (section.isIntersecting && isProgrammaticallyScrolled.current === false) {
        if (objectPageRef.current.getBoundingClientRect().top + totalHeaderHeight + 48 <= section.target.getBoundingClientRect().bottom) {
          var currentId = extractSectionIdFromHtmlId(section.target.id);
          setInternalSelectedSectionId(currentId);
          var currentIndex = safeGetChildrenArray(children).findIndex(function (objectPageSection) {
            var _objectPageSection$pr3;

            return ((_objectPageSection$pr3 = objectPageSection.props) === null || _objectPageSection$pr3 === void 0 ? void 0 : _objectPageSection$pr3.id) === currentId;
          });
          debouncedOnSectionChange(scrollEvent.current, currentIndex, currentId, section.target);
        }
      }
    }, {
      root: objectPageRef.current,
      rootMargin: rootMargin,
      threshold: [0]
    }); // Fallback when scrolling faster than the IntersectionObserver can observe (in most cases faster than 60fps)

    if (isAfterScroll) {
      var _currentSection;

      var currentSection = sections[sections.length - 1];
      var currentIndex;

      for (var i = 0; i <= sections.length - 1; i++) {
        var section = sections[i];

        if (objectPageRef.current.getBoundingClientRect().top + totalHeaderHeight + 48 <= section.getBoundingClientRect().bottom) {
          currentSection = section;
          currentIndex = i;
          break;
        }
      }

      var currentSectionId = extractSectionIdFromHtmlId((_currentSection = currentSection) === null || _currentSection === void 0 ? void 0 : _currentSection.id);

      if (currentSectionId !== internalSelectedSectionId) {
        var _currentIndex;

        setInternalSelectedSectionId(currentSectionId);
        debouncedOnSectionChange(scrollEvent.current, (_currentIndex = currentIndex) !== null && _currentIndex !== void 0 ? _currentIndex : sections.length - 1, currentSectionId, currentSection);
      }

      setIsAfterScroll(false);
    }

    sections.forEach(function (el) {
      observer.observe(el);
    });
    return function () {
      observer.disconnect();
    };
  }, [objectPageRef.current, children, totalHeaderHeight, setInternalSelectedSectionId, isProgrammaticallyScrolled, isAfterScroll]);
  var titleHeaderNotClickable = alwaysShowContentHeader && !headerContentPinnable || !headerContent || !showHideHeaderButton && !headerContentPinnable;
  var onTitleClick = useCallback(function (e) {
    if (!titleHeaderNotClickable) {
      onToggleHeaderContentVisibility(enrichEventWithDetails(e, {
        visible: !headerContentHeight
      }));
    }
  }, [onToggleHeaderContentVisibility, headerContentHeight, titleHeaderNotClickable]);
  var renderTitleSection = useCallback(function () {
    var _headerTitle$props$st, _headerTitle$props, _headerTitle$props2;

    var inHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    var titleStyles = _objectSpread(_objectSpread({}, inHeader ? {
      padding: 0
    } : {}), (_headerTitle$props$st = headerTitle === null || headerTitle === void 0 ? void 0 : (_headerTitle$props = headerTitle.props) === null || _headerTitle$props === void 0 ? void 0 : _headerTitle$props.style) !== null && _headerTitle$props$st !== void 0 ? _headerTitle$props$st : {});

    if (headerTitle !== null && headerTitle !== void 0 && headerTitle.props && ((_headerTitle$props2 = headerTitle.props) === null || _headerTitle$props2 === void 0 ? void 0 : _headerTitle$props2.showSubHeaderRight) === undefined) {
      return /*#__PURE__*/React.cloneElement(headerTitle, {
        showSubHeaderRight: true,
        style: titleStyles,
        'data-not-clickable': titleHeaderNotClickable,
        onToggleHeaderContentVisibility: onTitleClick
      });
    }

    return /*#__PURE__*/React.cloneElement(headerTitle, {
      style: titleStyles,
      'data-not-clickable': titleHeaderNotClickable,
      onToggleHeaderContentVisibility: onTitleClick
    });
  }, [headerTitle, titleHeaderNotClickable, onTitleClick]);
  var renderHeaderContentSection = useCallback(function () {
    if (headerContent !== null && headerContent !== void 0 && headerContent.props) {
      return /*#__PURE__*/React.cloneElement(headerContent, _objectSpread(_objectSpread({}, headerContent.props), {}, {
        topHeaderHeight: topHeaderHeight,
        headerPinned: headerPinned || scrolledHeaderExpanded,
        ref: componentRefHeaderContent,
        children: /*#__PURE__*/React.createElement("div", {
          className: "".concat(classes.headerContainer, " ").concat(responsivePaddingClass),
          "data-component-name": "ObjectPageHeaderContainer"
        }, avatar, headerContent.props.children && /*#__PURE__*/React.createElement("div", {
          "data-component-name": "ObjectPageHeaderContent"
        }, headerTitle && showTitleInHeaderContent && renderTitleSection(true), headerContent.props.children))
      }));
    }
  }, [headerContent, topHeaderHeight, headerPinned, scrolledHeaderExpanded, showTitleInHeaderContent, avatar, headerContentRef, renderTitleSection, responsivePaddingClass]);
  var paddingLeftRtl = isRTL ? 'paddingLeft' : 'paddingRight';
  var onTabItemSelect = useCallback(function (event) {
    var _section$props2;

    var _event$detail$tab$dat = event.detail.tab.dataset,
        sectionId = _event$detail$tab$dat.sectionId,
        index = _event$detail$tab$dat.index;
    var section = safeGetChildrenArray(children).find(function (el) {
      return el.props.id == sectionId;
    });
    handleOnSectionSelected(event, section === null || section === void 0 ? void 0 : (_section$props2 = section.props) === null || _section$props2 === void 0 ? void 0 : _section$props2.id, index, section);
  }, [children]);

  var _useState13 = useState(null),
      _useState14 = _slicedToArray(_useState13, 2),
      popoverContent = _useState14[0],
      setPopoverContent = _useState14[1];

  var popoverRef = useRef(null);
  var onShowSubSectionPopover = useCallback(function (e, section) {
    setPopoverContent(section);
    popoverRef.current.showAt(e.detail.targetRef);
  }, [setPopoverContent, popoverRef]);
  var onSubSectionClick = useCallback(function (e) {
    var selectedId = e.detail.item.dataset.key;
    var subSection = popoverContent.props.children.filter(function (item) {
      var _item$type;

      return (item === null || item === void 0 ? void 0 : (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.displayName) === 'ObjectPageSubSection';
    }).find(function (item) {
      return item.props.id === selectedId;
    });

    if (subSection) {
      handleOnSubSectionSelected(enrichEventWithDetails(e, {
        section: popoverContent,
        subSection: subSection
      }));
    }

    popoverRef.current.close();
  }, [handleOnSubSectionSelected, popoverRef, popoverContent]);
  var prevScrollTop = useRef();
  var onObjectPageScroll = useCallback(function (e) {
    if (scrollTimout.current >= performance.now()) {
      return;
    }

    scrollEvent.current = e;

    if (typeof props.onScroll === 'function') {
      props.onScroll(e);
    }

    if (selectedSubSectionId) {
      setSelectedSubSectionId(undefined);
    }

    if (scrollTimeout.current) {
      clearTimeout(scrollTimeout.current);
    }

    scrollTimeout.current = setTimeout(function () {
      setIsAfterScroll(true);
    }, 100);

    if (!headerPinned || e.target.scrollTop === 0) {
      var _objectPageRef$curren16;

      (_objectPageRef$curren16 = objectPageRef.current) === null || _objectPageRef$curren16 === void 0 ? void 0 : _objectPageRef$curren16.classList.remove(classes.headerCollapsed);
    }

    if (scrolledHeaderExpanded && e.target.scrollTop !== prevScrollTop.current) {
      if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {
        return;
      }

      prevScrollTop.current = e.target.scrollTop;
      setScrolledHeaderExpanded(false);
    }
  }, [scrollTimout.current, topHeaderHeight, headerPinned, props.onScroll, objectPageRef.current, scrolledHeaderExpanded, prevScrollTop.current, selectedSubSectionId, scrollTimeout.current]);
  var onHoverToggleButton = useCallback(function (e) {
    if ((e === null || e === void 0 ? void 0 : e.type) === 'mouseover') {
      var _topHeaderRef$current;

      (_topHeaderRef$current = topHeaderRef.current) === null || _topHeaderRef$current === void 0 ? void 0 : _topHeaderRef$current.classList.add(classes.headerHoverStyles);
    } else {
      var _topHeaderRef$current2;

      (_topHeaderRef$current2 = topHeaderRef.current) === null || _topHeaderRef$current2 === void 0 ? void 0 : _topHeaderRef$current2.classList.remove(classes.headerHoverStyles);
    }
  }, [classes.headerHoverStyles]);
  return /*#__PURE__*/React.createElement("div", _extends({
    "data-component-name": "ObjectPage",
    slot: slot,
    className: objectPageClasses,
    style: style,
    ref: componentRef,
    title: tooltip,
    onScroll: onObjectPageScroll
  }, propsWithoutOmitted), /*#__PURE__*/React.createElement("header", {
    onMouseOver: onHoverToggleButton,
    onMouseLeave: onHoverToggleButton,
    "data-component-name": "ObjectPageTopHeader",
    ref: topHeaderRef,
    role: (_a11yConfig$objectPag = a11yConfig === null || a11yConfig === void 0 ? void 0 : (_a11yConfig$objectPag2 = a11yConfig.objectPageTopHeader) === null || _a11yConfig$objectPag2 === void 0 ? void 0 : _a11yConfig$objectPag2.role) !== null && _a11yConfig$objectPag !== void 0 ? _a11yConfig$objectPag : 'banner',
    "data-not-clickable": titleHeaderNotClickable,
    "aria-roledescription": (_a11yConfig$objectPag3 = a11yConfig === null || a11yConfig === void 0 ? void 0 : (_a11yConfig$objectPag4 = a11yConfig.objectPageTopHeader) === null || _a11yConfig$objectPag4 === void 0 ? void 0 : _a11yConfig$objectPag4.ariaRoledescription) !== null && _a11yConfig$objectPag3 !== void 0 ? _a11yConfig$objectPag3 : 'Object Page header',
    className: "".concat(classes.header, " ").concat(responsivePaddingClass),
    onClick: onTitleClick,
    style: {
      gridAutoColumns: "min-content ".concat(headerTitle && image && headerContentHeight === 0 ? "calc(100% - 3rem - 1rem)" : '100%'),
      display: !showTitleInHeaderContent || headerContentHeight === 0 ? 'grid' : 'none'
    }
  }, headerTitle && image && headerContentHeight === 0 && /*#__PURE__*/React.createElement(CollapsedAvatar, {
    image: image,
    imageShapeCircle: imageShapeCircle,
    style: _defineProperty({}, paddingLeftRtl, '1rem')
  }), headerTitle && renderTitleSection()), renderHeaderContentSection(), headerContent && headerTitle && /*#__PURE__*/React.createElement("div", {
    "data-component-name": "ObjectPageAnchorBar",
    ref: anchorBarRef,
    className: classes.anchorBar,
    style: {
      top: scrolledHeaderExpanded || headerPinned ? "".concat(topHeaderHeight + headerContentHeight, "px") : "".concat(topHeaderHeight + 5, "px")
    }
  }, /*#__PURE__*/React.createElement(DynamicPageAnchorBar, {
    headerContentVisible: !!headerContentHeight,
    headerContentPinnable: headerContentPinnable,
    showHideHeaderButton: showHideHeaderButton,
    onToggleHeaderContentVisibility: onToggleHeaderContentVisibility,
    setHeaderPinned: setHeaderPinned,
    headerPinned: headerPinned,
    onHoverToggleButton: onHoverToggleButton,
    a11yConfig: a11yConfig
  })), !placeholder && /*#__PURE__*/React.createElement("div", {
    className: classes.tabContainer,
    "data-component-name": "ObjectPageTabContainer",
    style: {
      top: headerPinned || scrolledHeaderExpanded ? "".concat(topHeaderHeight + headerContentHeight, "px") : "".concat(topHeaderHeight, "px")
    }
  }, /*#__PURE__*/React.createElement(TabContainer$1, {
    collapsed: true,
    fixed: true,
    onTabSelect: onTabItemSelect,
    "data-component-name": "ObjectPageTabContainer"
  }, safeGetChildrenArray(children).map(function (section, index) {
    var _section$props3, _section$props4;

    if (!section.props) return null;
    return /*#__PURE__*/React.createElement(ObjectPageAnchorButton, {
      key: "Anchor-".concat((_section$props3 = section.props) === null || _section$props3 === void 0 ? void 0 : _section$props3.id),
      section: section,
      index: index,
      selected: internalSelectedSectionId === ((_section$props4 = section.props) === null || _section$props4 === void 0 ? void 0 : _section$props4.id),
      onShowSubSectionPopover: onShowSubSectionPopover
    });
  })), /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(Popover, {
    placementType: PopoverPlacementType.Bottom,
    horizontalAlign: PopoverHorizontalAlign.Left,
    hideArrow: true,
    ref: popoverRef,
    onAfterClose: stopPropagation
  }, /*#__PURE__*/React.createElement(List, {
    onItemClick: onSubSectionClick
  }, popoverContent === null || popoverContent === void 0 ? void 0 : (_popoverContent$props = popoverContent.props) === null || _popoverContent$props === void 0 ? void 0 : _popoverContent$props.children.filter(function (item) {
    var _item$type2;

    return (item === null || item === void 0 ? void 0 : (_item$type2 = item.type) === null || _item$type2 === void 0 ? void 0 : _item$type2.displayName) === 'ObjectPageSubSection';
  }).map(function (item) {
    return /*#__PURE__*/React.createElement(StandardListItem, {
      key: item.props.id,
      "data-key": item.props.id
    }, item.props.titleText);
  }))), portalContainer)), /*#__PURE__*/React.createElement("div", {
    "data-component-name": "ObjectPageContent",
    className: responsivePaddingClass
  }, placeholder ? placeholder : mode === ObjectPageMode.IconTabBar ? getSectionById(children, internalSelectedSectionId) : children), footer && /*#__PURE__*/React.createElement("div", {
    style: {
      height: '1rem'
    },
    "data-component-name": "ObjectPageFooterSpacer"
  }), footer && /*#__PURE__*/React.createElement("footer", {
    className: classes.footer,
    "data-component-name": "ObjectPageFooter"
  }, footer));
});
ObjectPage.displayName = 'ObjectPage';
ObjectPage.defaultProps = {
  image: null,
  mode: ObjectPageMode.Default,
  imageShapeCircle: false,
  showHideHeaderButton: false,
  portalContainer: document.body
};

export { ObjectPage };
//# sourceMappingURL=ObjectPage.js.map
