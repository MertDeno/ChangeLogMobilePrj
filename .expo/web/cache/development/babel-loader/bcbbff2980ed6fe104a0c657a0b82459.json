{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CalendarPicker from 'react-native-calendar-picker/CalendarPicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction CreatedAtPage() {\n  var _ref = [useState(null), useState(null)],\n      _ref$ = _slicedToArray(_ref[0], 2),\n      selectedStartDate = _ref$[0],\n      setSelectedStartDate = _ref$[1],\n      _ref$2 = _slicedToArray(_ref[1], 2),\n      selectedEndDate = _ref$2[0],\n      setSelectedEndDate = _ref$2[1];\n\n  var onDateChange = function onDateChange(date, type) {\n    if (type === 'END_DATE') {\n      setSelectedEndDate(date);\n    } else {\n      setSelectedEndDate(null);\n      setSelectedStartDate(date);\n    }\n  };\n\n  return _jsx(View, {\n    flex: 1,\n    children: _jsx(CalendarPicker, {\n      allowRangeSelection: true,\n      scrollable: true,\n      maxDate: Date.now(),\n      onDateChange: onDateChange\n    })\n  });\n}\n\nexport default CreatedAtPage;","map":{"version":3,"names":["React","useState","CalendarPicker","CreatedAtPage","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","onDateChange","date","type","Date","now"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/screens/CreatedAtPage.js"],"sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport CalendarPicker from 'react-native-calendar-picker/CalendarPicker';\r\n\r\n\r\nfunction CreatedAtPage(){\r\n    const [\r\n        [selectedStartDate, setSelectedStartDate], \r\n        [selectedEndDate, setSelectedEndDate] ] = [useState(null) ,useState(null)]\r\n\r\n    const onDateChange = (date,type) => {\r\n        if(type === 'END_DATE'){\r\n            setSelectedEndDate(date)\r\n        }\r\n        else{\r\n            setSelectedEndDate(null)\r\n            setSelectedStartDate(date)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View flex={1}>\r\n            <CalendarPicker \r\n                allowRangeSelection={true}\r\n                scrollable\r\n                maxDate={Date.now()}\r\n                onDateChange={onDateChange}/>\r\n        </View>\r\n  )\r\n}\r\n\r\nexport default CreatedAtPage;"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,cAAP,MAA2B,6CAA3B;;;AAGA,SAASC,aAAT,GAAwB;EACpB,WAE8C,CAACF,QAAQ,CAAC,IAAD,CAAT,EAAiBA,QAAQ,CAAC,IAAD,CAAzB,CAF9C;EAAA;EAAA,IACKG,iBADL;EAAA,IACwBC,oBADxB;EAAA;EAAA,IAEKC,eAFL;EAAA,IAEsBC,kBAFtB;;EAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAMC,IAAN,EAAe;IAChC,IAAGA,IAAI,KAAK,UAAZ,EAAuB;MACnBH,kBAAkB,CAACE,IAAD,CAAlB;IACH,CAFD,MAGI;MACAF,kBAAkB,CAAC,IAAD,CAAlB;MACAF,oBAAoB,CAACI,IAAD,CAApB;IACH;EACJ,CARD;;EAUA,OACI,KAAC,IAAD;IAAM,IAAI,EAAE,CAAZ;IAAA,UACI,KAAC,cAAD;MACI,mBAAmB,EAAE,IADzB;MAEI,UAAU,MAFd;MAGI,OAAO,EAAEE,IAAI,CAACC,GAAL,EAHb;MAII,YAAY,EAAEJ;IAJlB;EADJ,EADJ;AASH;;AAED,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}