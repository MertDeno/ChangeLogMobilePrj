{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport { Utils } from \"./Utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Month(props) {\n  var months = props.months,\n      month = props.currentMonth,\n      year = props.currentYear,\n      styles = props.styles,\n      onSelectMonth = props.onSelectMonth,\n      textStyle = props.textStyle,\n      minDate = props.minDate,\n      maxDate = props.maxDate;\n  var MONTHS = months || Utils.MONTHS;\n  var monthName = MONTHS[month];\n  var monthOutOfRange;\n  var monthIsBeforeMin = false;\n  var monthIsAfterMax = false;\n  var monthIsDisabled = false;\n\n  if (maxDate && maxDate.year() === year) {\n    monthIsAfterMax = month > maxDate.month();\n  }\n\n  if (minDate && minDate.year() === year) {\n    monthIsBeforeMin = month < minDate.month();\n  }\n\n  monthOutOfRange = monthIsAfterMax || monthIsBeforeMin || monthIsDisabled;\n\n  var onSelect = function onSelect() {\n    var _year = year;\n\n    if (minDate && year < minDate.year()) {\n      _year = minDate.year();\n    }\n\n    if (maxDate && year > maxDate.year()) {\n      _year = maxDate.year();\n    }\n\n    onSelectMonth({\n      month: month,\n      year: _year\n    });\n  };\n\n  return _jsx(View, {\n    style: [styles.monthContainer],\n    children: !monthOutOfRange ? _jsx(TouchableOpacity, {\n      onPress: onSelect,\n      children: _jsx(Text, {\n        style: [styles.monthText, textStyle],\n        children: monthName\n      })\n    }) : _jsx(Text, {\n      style: [textStyle, styles.disabledText],\n      children: monthName\n    })\n  });\n}\nMonth.propTypes = {\n  styles: PropTypes.shape({}),\n  currentMonth: PropTypes.number,\n  currentYear: PropTypes.number,\n  onSelectMonth: PropTypes.func\n};","map":{"version":3,"names":["React","PropTypes","Utils","Month","props","months","month","currentMonth","year","currentYear","styles","onSelectMonth","textStyle","minDate","maxDate","MONTHS","monthName","monthOutOfRange","monthIsBeforeMin","monthIsAfterMax","monthIsDisabled","onSelect","_year","monthContainer","monthText","disabledText","propTypes","shape","number","func"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/node_modules/react-native-calendar-picker/CalendarPicker/Month.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { Utils } from './Utils';\r\n\r\nexport default function Month(props) {\r\n  const {\r\n    months,\r\n    currentMonth: month,\r\n    currentYear: year,\r\n    styles,\r\n    onSelectMonth,\r\n    textStyle,\r\n    minDate,\r\n    maxDate,\r\n  } = props;\r\n\r\n  const MONTHS = months || Utils.MONTHS; // English Month Array\r\n  const monthName = MONTHS[month];\r\n\r\n  let monthOutOfRange;\r\n  let monthIsBeforeMin = false;\r\n  let monthIsAfterMax = false;\r\n  let monthIsDisabled = false;\r\n\r\n  // Check whether month is outside of min/max range.\r\n  if (maxDate && (maxDate.year() === year)) {\r\n    monthIsAfterMax = month > maxDate.month();\r\n  }\r\n  if (minDate && (minDate.year() === year)) {\r\n    monthIsBeforeMin = month < minDate.month();\r\n  }\r\n\r\n  // ToDo: disabledMonths props to disable months separate from disabledDates\r\n\r\n  monthOutOfRange = monthIsAfterMax || monthIsBeforeMin || monthIsDisabled;\r\n\r\n  const onSelect = () => {\r\n    let _year = year;\r\n    if (minDate && (year < minDate.year())) {\r\n      _year = minDate.year();\r\n    }\r\n    if (maxDate && (year > maxDate.year())) {\r\n      _year = maxDate.year();\r\n    }\r\n    onSelectMonth({month, year: _year});\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.monthContainer]}>\r\n      { !monthOutOfRange ?\r\n        <TouchableOpacity\r\n          onPress={onSelect}>\r\n          <Text style={[styles.monthText, textStyle]}>\r\n            { monthName }\r\n          </Text>\r\n        </TouchableOpacity>\r\n        :\r\n        <Text style={[textStyle, styles.disabledText]}>\r\n          { monthName }\r\n        </Text>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nMonth.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  currentMonth: PropTypes.number,\r\n  currentYear: PropTypes.number,\r\n  onSelectMonth: PropTypes.func,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACnC,IACEC,MADF,GASID,KATJ,CACEC,MADF;EAAA,IAEgBC,KAFhB,GASIF,KATJ,CAEEG,YAFF;EAAA,IAGeC,IAHf,GASIJ,KATJ,CAGEK,WAHF;EAAA,IAIEC,MAJF,GASIN,KATJ,CAIEM,MAJF;EAAA,IAKEC,aALF,GASIP,KATJ,CAKEO,aALF;EAAA,IAMEC,SANF,GASIR,KATJ,CAMEQ,SANF;EAAA,IAOEC,OAPF,GASIT,KATJ,CAOES,OAPF;EAAA,IAQEC,OARF,GASIV,KATJ,CAQEU,OARF;EAWA,IAAMC,MAAM,GAAGV,MAAM,IAAIH,KAAK,CAACa,MAA/B;EACA,IAAMC,SAAS,GAAGD,MAAM,CAACT,KAAD,CAAxB;EAEA,IAAIW,eAAJ;EACA,IAAIC,gBAAgB,GAAG,KAAvB;EACA,IAAIC,eAAe,GAAG,KAAtB;EACA,IAAIC,eAAe,GAAG,KAAtB;;EAGA,IAAIN,OAAO,IAAKA,OAAO,CAACN,IAAR,OAAmBA,IAAnC,EAA0C;IACxCW,eAAe,GAAGb,KAAK,GAAGQ,OAAO,CAACR,KAAR,EAA1B;EACD;;EACD,IAAIO,OAAO,IAAKA,OAAO,CAACL,IAAR,OAAmBA,IAAnC,EAA0C;IACxCU,gBAAgB,GAAGZ,KAAK,GAAGO,OAAO,CAACP,KAAR,EAA3B;EACD;;EAIDW,eAAe,GAAGE,eAAe,IAAID,gBAAnB,IAAuCE,eAAzD;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrB,IAAIC,KAAK,GAAGd,IAAZ;;IACA,IAAIK,OAAO,IAAKL,IAAI,GAAGK,OAAO,CAACL,IAAR,EAAvB,EAAwC;MACtCc,KAAK,GAAGT,OAAO,CAACL,IAAR,EAAR;IACD;;IACD,IAAIM,OAAO,IAAKN,IAAI,GAAGM,OAAO,CAACN,IAAR,EAAvB,EAAwC;MACtCc,KAAK,GAAGR,OAAO,CAACN,IAAR,EAAR;IACD;;IACDG,aAAa,CAAC;MAACL,KAAK,EAALA,KAAD;MAAQE,IAAI,EAAEc;IAAd,CAAD,CAAb;EACD,CATD;;EAWA,OACE,KAAC,IAAD;IAAM,KAAK,EAAE,CAACZ,MAAM,CAACa,cAAR,CAAb;IAAA,UACI,CAACN,eAAD,GACA,KAAC,gBAAD;MACE,OAAO,EAAEI,QADX;MAAA,UAEE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACX,MAAM,CAACc,SAAR,EAAmBZ,SAAnB,CAAb;QAAA,UACII;MADJ;IAFF,EADA,GAQA,KAAC,IAAD;MAAM,KAAK,EAAE,CAACJ,SAAD,EAAYF,MAAM,CAACe,YAAnB,CAAb;MAAA,UACIT;IADJ;EATJ,EADF;AAgBD;AAEDb,KAAK,CAACuB,SAAN,GAAkB;EAChBhB,MAAM,EAAET,SAAS,CAAC0B,KAAV,CAAgB,EAAhB,CADQ;EAEhBpB,YAAY,EAAEN,SAAS,CAAC2B,MAFR;EAGhBnB,WAAW,EAAER,SAAS,CAAC2B,MAHP;EAIhBjB,aAAa,EAAEV,SAAS,CAAC4B;AAJT,CAAlB"},"metadata":{},"sourceType":"module"}