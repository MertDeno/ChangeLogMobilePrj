{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport FAIcon from \"@expo/vector-icons/FontAwesome\";\nimport getIconType from \"../helpers/getIconType\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CheckBoxIcon = function CheckBoxIcon(_ref) {\n  var checked = _ref.checked,\n      onIconPress = _ref.onIconPress,\n      onLongIconPress = _ref.onLongIconPress,\n      size = _ref.size,\n      checkedIcon = _ref.checkedIcon,\n      uncheckedIcon = _ref.uncheckedIcon,\n      iconType = _ref.iconType,\n      checkedColor = _ref.checkedColor,\n      uncheckedColor = _ref.uncheckedColor;\n\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  var VectorIcon = iconType ? getIconType(iconType) : FAIcon;\n  return _jsx(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress\n  });\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string\n};\nexport default CheckBoxIcon;","map":{"version":3,"names":["React","PropTypes","FAIcon","getIconType","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","minWidth","propTypes","bool","func","number","oneOfType","string","element"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/node_modules/react-native-settings-view/node_modules/react-native-elements/src/checkbox/CheckBoxIcon.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FAIcon from 'react-native-vector-icons/FontAwesome';\n\nimport getIconType from '../helpers/getIconType';\n\nconst CheckBoxIcon = ({\n  checked,\n  onIconPress,\n  onLongIconPress,\n  size,\n  checkedIcon,\n  uncheckedIcon,\n  iconType,\n  checkedColor,\n  uncheckedColor,\n}) => {\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  const VectorIcon = iconType ? getIconType(iconType) : FAIcon;\n\n  return (\n    <VectorIcon\n      color={checked ? checkedColor : uncheckedColor}\n      name={checked ? checkedIcon : uncheckedIcon}\n      size={size || 24}\n      style={{ minWidth: size || 24 }}\n      onLongPress={onLongIconPress}\n      onPress={onIconPress}\n    />\n  );\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string,\n};\n\nexport default CheckBoxIcon;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP;AAEA,OAAOC,WAAP;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAUf;EAAA,IATJC,OASI,QATJA,OASI;EAAA,IARJC,WAQI,QARJA,WAQI;EAAA,IAPJC,eAOI,QAPJA,eAOI;EAAA,IANJC,IAMI,QANJA,IAMI;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,IAJJC,aAII,QAJJA,aAII;EAAA,IAHJC,QAGI,QAHJA,QAGI;EAAA,IAFJC,YAEI,QAFJA,YAEI;EAAA,IADJC,cACI,QADJA,cACI;;EACJ,IAAIR,OAAO,IAAIL,KAAK,CAACc,cAAN,CAAqBL,WAArB,CAAf,EAAkD;IAChD,OAAOA,WAAP;EACD;;EAED,IAAI,CAACJ,OAAD,IAAYL,KAAK,CAACc,cAAN,CAAqBJ,aAArB,CAAhB,EAAqD;IACnD,OAAOA,aAAP;EACD;;EAED,IAAMK,UAAU,GAAGJ,QAAQ,GAAGR,WAAW,CAACQ,QAAD,CAAd,GAA2BT,MAAtD;EAEA,OACE,KAAC,UAAD;IACE,KAAK,EAAEG,OAAO,GAAGO,YAAH,GAAkBC,cADlC;IAEE,IAAI,EAAER,OAAO,GAAGI,WAAH,GAAiBC,aAFhC;IAGE,IAAI,EAAEF,IAAI,IAAI,EAHhB;IAIE,KAAK,EAAE;MAAEQ,QAAQ,EAAER,IAAI,IAAI;IAApB,CAJT;IAKE,WAAW,EAAED,eALf;IAME,OAAO,EAAED;EANX,EADF;AAUD,CA/BD;;AAiCAF,YAAY,CAACa,SAAb,GAAyB;EACvBZ,OAAO,EAAEJ,SAAS,CAACiB,IADI;EAEvBZ,WAAW,EAAEL,SAAS,CAACkB,IAFA;EAGvBZ,eAAe,EAAEN,SAAS,CAACkB,IAHJ;EAIvBX,IAAI,EAAEP,SAAS,CAACmB,MAJO;EAKvBX,WAAW,EAAER,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACsB,OAA7B,CAApB,CALU;EAMvBb,aAAa,EAAET,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACsB,OAA7B,CAApB,CANQ;EAOvBZ,QAAQ,EAAEV,SAAS,CAACqB,MAPG;EAQvBV,YAAY,EAAEX,SAAS,CAACqB,MARD;EASvBT,cAAc,EAAEZ,SAAS,CAACqB;AATH,CAAzB;AAYA,eAAelB,YAAf"},"metadata":{},"sourceType":"module"}