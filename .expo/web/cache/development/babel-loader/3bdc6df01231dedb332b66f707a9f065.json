{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { Picker } from \"@react-native-picker/picker\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, CheckBox, Icon, SearchBar } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction MaterialNumberPage(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredData = _useState2[0],\n      setFilteredData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      matNumberData = _useState4[0],\n      setMatNumberData = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checkedMatNumber = _useState6[0],\n      setcheckedMatNumber = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isCheckedAll = _useState8[0],\n      setIsCheckedAll = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useState13 = useState(\"include\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedOption1 = _useState14[0],\n      setSelectedOption1 = _useState14[1];\n\n  var _useState15 = useState(\"contains\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedOption2 = _useState16[0],\n      setSelectedOption2 = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedFilters = _useState18[0],\n      setSelectedFilters = _useState18[1];\n\n  var _useState19 = useState({\n    rangeMin: \"\",\n    rangeMax: \"\"\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      rangeValues = _useState20[0],\n      setRangeValues = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      isShowRanged = _useState22[0],\n      setShowRanged = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      isClosed = _useState24[0],\n      setIsClosed = _useState24[1];\n\n  var baseURL = Platform.OS === \"android\" ? \"http://10.0.2.2:8000/EtMaterialsSet\" : process.env.LINK + \"/EtMaterialsSet\";\n\n  var handleRangeChange = function handleRangeChange(range, value) {\n    setRangeValues(_objectSpread(_objectSpread({}, rangeValues), {}, _defineProperty({}, range, value)));\n  };\n\n  var handleOnChange = function handleOnChange(matnr) {\n    matNumberData.forEach(function (item) {\n      if (matnr === item.Matnr) {\n        item.checked = !item.checked;\n      } else {\n        return item.checked;\n      }\n    });\n    setcheckedMatNumber(matNumberData.filter(function (item) {\n      return item.checked;\n    }));\n    setFilteredData(matNumberData);\n  };\n\n  var ListViewType = function ListViewType(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _jsx(CheckBox, {\n      containerStyle: styles.flatListItem,\n      onPress: function onPress() {\n        handleOnChange(item.Matnr);\n      },\n      title: item.Matnr,\n      checked: item.checked\n    });\n  };\n\n  var fetchApi = function fetchApi() {\n    var matnrRes;\n    return _regeneratorRuntime.async(function fetchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n          case 3:\n            matnrRes = _context.sent;\n            setMatNumberData(matnrRes.data.map(function (data) {\n              return _objectSpread(_objectSpread({}, data), {}, {\n                checked: false\n              });\n            }));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    fetchApi();\n  }, []);\n\n  var updateSearch = function updateSearch(search) {\n    if (search) {\n      if (selectedOption2 === \"contains\") {\n        setSearch(search);\n        var newData = matNumberData.filter(function (item) {\n          return item.Matnr.includes(search.toUpperCase());\n        });\n        setFilteredData(newData);\n      } else if (selectedOption2 === \"et\") {\n        setSearch(search);\n\n        var _newData = matNumberData.filter(function (item) {\n          return item.Matnr === search.toUpperCase();\n        });\n\n        setFilteredData(_newData);\n      } else if (selectedOption2 === \"between\") {\n        console.log(\"between\");\n      } else if (selectedOption2 === \"sw\") {\n        setSearch(search);\n\n        var _newData2 = matNumberData.filter(function (item) {\n          return item.Matnr.substring(0, search.length) === search;\n        });\n\n        setFilteredData(_newData2);\n      } else if (selectedOption2 === \"ew\") {\n        setSearch(search);\n\n        var _newData3 = matNumberData.filter(function (item) {\n          return item.Matnr.substring(item.Matnr.length - search.length, item.Matnr.length) === search;\n        });\n\n        setFilteredData(_newData3);\n      } else if (selectedOption2 === \"lt\") {\n        setSearch(search);\n\n        var _newData4 = matNumberData.filter(function (item) {\n          return Number(item.Matnr) < Number(search);\n        });\n\n        setFilteredData(_newData4);\n      } else if (selectedOption2 === \"ltet\") {\n        setSearch(search);\n\n        var _newData5 = matNumberData.filter(function (item) {\n          return Number(item.Matnr) <= Number(search);\n        });\n\n        setFilteredData(_newData5);\n      } else if (selectedOption2 === \"gt\") {\n        setSearch(search);\n\n        var _newData6 = matNumberData.filter(function (item) {\n          return Number(item.Matnr) > Number(search);\n        });\n\n        setFilteredData(_newData6);\n      } else if (selectedOption2 === \"gtet\") {\n        setSearch(search);\n\n        var _newData7 = matNumberData.filter(function (item) {\n          return Number(item.Matnr) >= Number(search);\n        });\n      } else if (selectedOption2 === \"empty\") {\n        var _newData8 = matNumberData.filter(function (item) {\n          return item.Matnr === null;\n        });\n\n        setFilteredData(_newData8);\n      }\n\n      setcheckedMatNumber(filteredData);\n    } else {\n      setcheckedMatNumber(\"\");\n    }\n  };\n\n  var handleSelectAll = function handleSelectAll() {\n    filteredData.map(function (item) {\n      if (isCheckedAll === true) {\n        if (item.checked === true) {\n          item.checked = !item.checked;\n          setIsCheckedAll(false);\n        }\n      } else {\n        if (item.checked === false) {\n          item.checked = !item.checked;\n          setIsCheckedAll(true);\n        }\n      }\n    });\n    setcheckedMatNumber(matNumberData.filter(function (item) {\n      return item.checked;\n    }));\n    setFilteredData(matNumberData);\n  };\n\n  var selectFilter = function selectFilter() {\n    if (selectedOption2 === \"between\") return _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [_jsx(TextInput, {\n        style: styles.textInputStyle,\n        placeholder: \"Min.\",\n        value: rangeValues.rangeMin,\n        onChangeText: function onChangeText(rangeMinVal) {\n          return handleRangeChange(\"rangeMin\", rangeMinVal);\n        }\n      }), _jsx(Text, {\n        style: {\n          flex: 1,\n          textAlign: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\"\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInputStyle,\n        placeholder: \"Max.\",\n        value: rangeValues.rangeMax,\n        onChangeText: function onChangeText(rangeMaxVal) {\n          return handleRangeChange(\"rangeMax\", rangeMaxVal);\n        }\n      }), console.log(rangeValues.rangeMin + \" - \" + rangeValues.rangeMax), _jsx(TouchableOpacity, {\n        round: true,\n        style: {\n          marginTop: 5,\n          marginHorizontal: 5,\n          alignSelf: \"center\",\n          flex: 3\n        },\n        onPress: function onPress() {\n          return setSelectedFilters.apply(void 0, _toConsumableArray(selectedFilters).concat([rangeValues.rangeMin + \" - \" + rangeValues.rangeMax]));\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            backgroundColor: \"rgb(53,74,95)\",\n            borderRadius: 10,\n            textAlign: \"center\",\n            textAlignVertical: \"center\",\n            padding: 3\n          },\n          children: \"Add Filter\"\n        })\n      })]\n    });else if (selectedOption2 === \"empty\") {\n      return _jsx(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: _jsx(TouchableOpacity, {\n          round: true,\n          style: {\n            marginVertical: 5,\n            marginHorizontal: 5,\n            alignSelf: \"center\",\n            flex: 1\n          },\n          onPress: function onPress() {\n            return setSelectedFilters(function (selectedFilters) {\n              return [\"Empty\"];\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              backgroundColor: \"rgb(53,74,95)\",\n              borderRadius: 10,\n              textAlign: \"center\",\n              textAlignVertical: \"center\",\n              padding: 3\n            },\n            children: \"Add Filter\"\n          })\n        })\n      });\n    } else {\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(SearchBar, {\n          value: search,\n          placeholder: \" Search...\",\n          lightTheme: true,\n          round: true,\n          onChangeText: updateSearch,\n          inputStyle: {\n            backgroundColor: \"#fff\",\n            borderRadius: 15\n          },\n          containerStyle: {\n            backgroundColor: \"rgb(247,247,247)\",\n            flex: 6,\n            borderRadius: 15,\n            margin: 3\n          },\n          inputContainerStyle: {\n            backgroundColor: \"rgb(247,247,247)\"\n          },\n          style: {\n            flex: 6\n          }\n        }), _jsx(TouchableOpacity, {\n          round: true,\n          style: {\n            marginTop: 5,\n            marginHorizontal: 5,\n            alignSelf: \"center\",\n            flex: 1\n          },\n          onPress: function onPress() {\n            return setSelectedFilters(search ? selectedFilters ? selectedFilters.includes(search) ? function () {\n              return _toConsumableArray(selectedFilters);\n            } : function (selectedFilters) {\n              return [].concat(_toConsumableArray(selectedFilters), [\" \" + search + \" - \" + selectedOption2]);\n            } : function () {\n              return [search];\n            } : function () {\n              return [];\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              backgroundColor: \"rgb(53,74,95)\",\n              borderRadius: 10,\n              textAlign: \"center\",\n              textAlignVertical: \"center\",\n              padding: 3\n            },\n            children: \"Add Filter\"\n          })\n        })]\n      });\n    }\n  };\n\n  var addFilter = function addFilter(filter) {\n    return _jsx(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: _jsxs(View, {\n        round: true,\n        style: {\n          backgroundColor: \"yellow\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            textAlign: \"center\",\n            color: \"white\"\n          },\n          children: console.log(filter)\n        }), _jsx(TouchableOpacity, {})]\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      children: [_jsxs(Picker, {\n        style: {\n          flex: 1\n        },\n        selectedValue: selectedOption1,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedOption1(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Include\",\n          value: \"include\"\n        }), _jsx(Picker.Item, {\n          label: \"Exclude\",\n          value: \"exclude\"\n        })]\n      }), _jsxs(Picker, {\n        style: {\n          flex: 2\n        },\n        selectedValue: selectedOption2,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedOption2(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"contains\",\n          value: \"contains\"\n        }), _jsx(Picker.Item, {\n          label: \"equal to\",\n          value: \"et\"\n        }), _jsx(Picker.Item, {\n          label: \"between\",\n          value: \"between\"\n        }), _jsx(Picker.Item, {\n          label: \"starts with\",\n          value: \"sw\"\n        }), _jsx(Picker.Item, {\n          label: \"ends with\",\n          value: \"ew\"\n        }), _jsx(Picker.Item, {\n          label: \"less than\",\n          value: \"lt\"\n        }), _jsx(Picker.Item, {\n          label: \"less than or equal to\",\n          value: \"ltet\"\n        }), _jsx(Picker.Item, {\n          label: \"greater than\",\n          value: \"gt\"\n        }), _jsx(Picker.Item, {\n          label: \"greater than or equal to\",\n          value: \"gtet\"\n        }), _jsx(Picker.Item, {\n          label: \"empty\",\n          value: \"empty\"\n        })]\n      })]\n    }), selectFilter(), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginHorizontal: 3\n      },\n      children: selectedFilters ? selectedFilters.map(function (item, index) {\n        return _jsxs(View, {\n          style: {\n            marginHorizontal: 2,\n            flexDirection: \"row\",\n            backgroundColor: \"black\",\n            borderRadius: 15\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: \"white\",\n              marginHorizontal: 1,\n              textAlignVertical: \"center\"\n            },\n            children: item\n          }), _jsx(TouchableOpacity, {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              borderRadius: 15\n            },\n            children: _jsx(Icon, {\n              name: \"close\",\n              color: \"white\",\n              size: 20\n            })\n          })]\n        });\n      }) : console.log(\"EMPTY\")\n    }), _jsx(CheckBox, {\n      title: \"Select All\",\n      onPress: handleSelectAll,\n      checked: isCheckedAll,\n      containerStyle: styles.flatListItem\n    }), isLoading ? _jsx(View, {\n      style: {\n        flex: 3,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    }) : _jsx(FlatList, {\n      data: search ? filteredData : checkedMatNumber,\n      showsHorizontalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item, index) {\n        return \"key\" + index;\n      },\n      renderItem: ListViewType\n    })]\n  });\n}\n\nexport default MaterialNumberPage;\nvar styles = StyleSheet.create({\n  flatListItem: {\n    backgroundColor: \"#fff\",\n    borderRadius: 20,\n    padding: 20,\n    margin: 5\n  },\n  textInputStyle: {\n    flex: 4,\n    height: 35,\n    margin: 10,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/medepia/Desktop/React Native Projects/CR App/ChangeLogMobilePrj/assets/screens/MaterialNumberPage.js"],"names":["Picker","axios","React","useEffect","useState","Button","CheckBox","Icon","SearchBar","MaterialNumberPage","props","filteredData","setFilteredData","matNumberData","setMatNumberData","checkedMatNumber","setcheckedMatNumber","isCheckedAll","setIsCheckedAll","isLoading","setIsLoading","search","setSearch","selectedOption1","setSelectedOption1","selectedOption2","setSelectedOption2","selectedFilters","setSelectedFilters","rangeMin","rangeMax","rangeValues","setRangeValues","isShowRanged","setShowRanged","isClosed","setIsClosed","baseURL","Platform","OS","process","env","LINK","handleRangeChange","range","value","handleOnChange","matnr","forEach","item","Matnr","checked","filter","ListViewType","index","styles","flatListItem","fetchApi","get","matnrRes","data","map","console","log","updateSearch","newData","includes","toUpperCase","substring","length","Number","handleSelectAll","selectFilter","display","flexDirection","textInputStyle","rangeMinVal","flex","textAlign","justifyContent","alignSelf","rangeMaxVal","marginTop","marginHorizontal","color","backgroundColor","borderRadius","textAlignVertical","padding","marginVertical","margin","addFilter","flexWrap","itemValue","itemIndex","alignItems","StyleSheet","create","height","borderWidth"],"mappings":"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","sourcesContent":["import { Picker } from \"@react-native-picker/picker\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  Text,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { Button, CheckBox, Icon, SearchBar } from \"react-native-elements\";\r\n\r\nfunction MaterialNumberPage(props) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [matNumberData, setMatNumberData] = useState([]);\r\n  const [checkedMatNumber, setcheckedMatNumber] = useState();\r\n  const [isCheckedAll, setIsCheckedAll] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [search, setSearch] = useState();\r\n\r\n  const [selectedOption1, setSelectedOption1] = useState(\"include\");\r\n  const [selectedOption2, setSelectedOption2] = useState(\"contains\");\r\n  const [selectedFilters, setSelectedFilters] = useState([]);\r\n  const [rangeValues, setRangeValues] = useState({\r\n    rangeMin: \"\",\r\n    rangeMax: \"\",\r\n  });\r\n  const [isShowRanged, setShowRanged] = useState(false);\r\n  const [isClosed, setIsClosed] = useState(false);\r\n  var baseURL =\r\n    Platform.OS === \"android\"\r\n      ? \"http://10.0.2.2:8000/EtMaterialsSet\"\r\n      : process.env.LINK + \"/EtMaterialsSet\";\r\n\r\n  const handleRangeChange = (range, value) => {\r\n    setRangeValues({\r\n      ...rangeValues,\r\n      [range]: value,\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (matnr) => {\r\n    matNumberData.forEach((item) => {\r\n      if (matnr === item.Matnr) {\r\n        item.checked = !item.checked;\r\n      } else {\r\n        return item.checked;\r\n      }\r\n    });\r\n    setcheckedMatNumber(matNumberData.filter((item) => item.checked));\r\n    setFilteredData(matNumberData);\r\n  };\r\n  const ListViewType = ({ item, index }) => {\r\n    return (\r\n      // Flat List Item\r\n      <CheckBox\r\n        containerStyle={styles.flatListItem}\r\n        onPress={() => {\r\n          handleOnChange(item.Matnr);\r\n        }}\r\n        title={item.Matnr}\r\n        checked={item.checked}\r\n      />\r\n    );\r\n  };\r\n  const fetchApi = async () => {\r\n    try {\r\n      const matnrRes = await axios.get(baseURL);\r\n\r\n      setMatNumberData(\r\n        matnrRes.data.map((data) => ({ ...data, checked: false }))\r\n      );\r\n      /*setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)*/\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n  const updateSearch = (search) => {\r\n    if (search) {\r\n      if (selectedOption2 === \"contains\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return item.Matnr.includes(search.toUpperCase());\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"et\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return item.Matnr === search.toUpperCase();\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"between\") {\r\n        console.log(\"between\");\r\n      } else if (selectedOption2 === \"sw\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return item.Matnr.substring(0, search.length) === search;\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"ew\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return (\r\n            item.Matnr.substring(\r\n              item.Matnr.length - search.length,\r\n              item.Matnr.length\r\n            ) === search\r\n          );\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"lt\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return Number(item.Matnr) < Number(search);\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"ltet\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return Number(item.Matnr) <= Number(search);\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"gt\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return Number(item.Matnr) > Number(search);\r\n        });\r\n        setFilteredData(newData);\r\n      } else if (selectedOption2 === \"gtet\") {\r\n        setSearch(search);\r\n        const newData = matNumberData.filter((item) => {\r\n          return Number(item.Matnr) >= Number(search);\r\n        });\r\n      } else if (selectedOption2 === \"empty\") {\r\n        const newData = matNumberData.filter((item) => {\r\n          return item.Matnr === null;\r\n        });\r\n        setFilteredData(newData);\r\n      }\r\n\r\n      setcheckedMatNumber(filteredData);\r\n    } else {\r\n      setcheckedMatNumber(\"\");\r\n    }\r\n  };\r\n  const handleSelectAll = () => {\r\n    filteredData.map((item) => {\r\n      if (isCheckedAll === true) {\r\n        if (item.checked === true) {\r\n          item.checked = !item.checked;\r\n          setIsCheckedAll(false);\r\n        }\r\n      } else {\r\n        if (item.checked === false) {\r\n          item.checked = !item.checked;\r\n          setIsCheckedAll(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    setcheckedMatNumber(matNumberData.filter((item) => item.checked));\r\n    setFilteredData(matNumberData);\r\n  };\r\n  const selectFilter = () => {\r\n    if (selectedOption2 === \"between\")\r\n      return (\r\n        <View style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Min.\"\r\n            value={rangeValues.rangeMin}\r\n            onChangeText={(rangeMinVal) =>\r\n              handleRangeChange(\"rangeMin\", rangeMinVal)\r\n            }\r\n          />\r\n          <Text\r\n            style={{\r\n              flex: 1,\r\n              textAlign: \"center\",\r\n              justifyContent: \"center\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          ></Text>\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Max.\"\r\n            value={rangeValues.rangeMax}\r\n            onChangeText={(rangeMaxVal) =>\r\n              handleRangeChange(\"rangeMax\", rangeMaxVal)\r\n            }\r\n          />\r\n          {/* {setSelectedFilters(rangeMin)} */}\r\n          {console.log(rangeValues.rangeMin + \" - \" + rangeValues.rangeMax)}\r\n          <TouchableOpacity\r\n            round\r\n            style={{\r\n              marginTop: 5,\r\n              marginHorizontal: 5,\r\n              alignSelf: \"center\",\r\n              flex: 3,\r\n            }}\r\n            onPress={() =>\r\n              setSelectedFilters(\r\n                ...selectedFilters,\r\n                rangeValues.rangeMin + \" - \" + rangeValues.rangeMax\r\n              )\r\n            }\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"rgb(53,74,95)\",\r\n                borderRadius: 10,\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\",\r\n                padding: 3,\r\n              }}\r\n            >\r\n              Add Filter\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    else if (selectedOption2 === \"empty\") {\r\n      return (\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <TouchableOpacity\r\n            round\r\n            style={{\r\n              marginVertical: 5,\r\n              marginHorizontal: 5,\r\n              alignSelf: \"center\",\r\n              flex: 1,\r\n            }}\r\n            onPress={() => setSelectedFilters((selectedFilters) => [\"Empty\"])}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"rgb(53,74,95)\",\r\n                borderRadius: 10,\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\",\r\n                padding: 3,\r\n              }}\r\n            >\r\n              Add Filter\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <SearchBar\r\n            value={search}\r\n            placeholder=\" Search...\"\r\n            lightTheme\r\n            round\r\n            onChangeText={updateSearch}\r\n            inputStyle={{ backgroundColor: \"#fff\", borderRadius: 15 }}\r\n            containerStyle={{\r\n              backgroundColor: \"rgb(247,247,247)\",\r\n              flex: 6,\r\n              borderRadius: 15,\r\n              margin: 3,\r\n            }}\r\n            inputContainerStyle={{ backgroundColor: \"rgb(247,247,247)\" }}\r\n            style={{ flex: 6 }}\r\n          />\r\n          <TouchableOpacity\r\n            round\r\n            style={{\r\n              marginTop: 5,\r\n              marginHorizontal: 5,\r\n              alignSelf: \"center\",\r\n              flex: 1,\r\n            }}\r\n            onPress={() =>\r\n              setSelectedFilters(\r\n                search\r\n                  ? selectedFilters\r\n                    ? selectedFilters.includes(search)\r\n                      ? () => [...selectedFilters]\r\n                      : (selectedFilters) => [\r\n                          ...selectedFilters,\r\n                          \" \" + search + \" - \" + selectedOption2,\r\n                        ]\r\n                    : () => [search]\r\n                  : () => []\r\n              )\r\n            }\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"rgb(53,74,95)\",\r\n                borderRadius: 10,\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\",\r\n                padding: 3,\r\n              }}\r\n            >\r\n              Add Filter\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  const addFilter = (filter) => {\r\n    return (\r\n      <View style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <View round style={{ backgroundColor: \"yellow\" }}>\r\n          <Text\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {console.log(filter)}\r\n          </Text>\r\n          <TouchableOpacity></TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n        <Picker\r\n          style={{ flex: 1 }}\r\n          selectedValue={selectedOption1}\r\n          onValueChange={(itemValue, itemIndex) =>\r\n            setSelectedOption1(itemValue)\r\n          }\r\n        >\r\n          <Picker.Item label=\"Include\" value={\"include\"} />\r\n          <Picker.Item label=\"Exclude\" value={\"exclude\"} />\r\n        </Picker>\r\n        <Picker\r\n          style={{ flex: 2 }}\r\n          selectedValue={selectedOption2}\r\n          onValueChange={(itemValue, itemIndex) =>\r\n            setSelectedOption2(itemValue)\r\n          }\r\n        >\r\n          <Picker.Item label=\"contains\" value={\"contains\"} />\r\n          <Picker.Item label=\"equal to\" value={\"et\"} />\r\n          <Picker.Item label=\"between\" value={\"between\"} />\r\n          <Picker.Item label=\"starts with\" value={\"sw\"} />\r\n          <Picker.Item label=\"ends with\" value={\"ew\"} />\r\n          <Picker.Item label=\"less than\" value={\"lt\"} />\r\n          <Picker.Item label=\"less than or equal to\" value={\"ltet\"} />\r\n          <Picker.Item label=\"greater than\" value={\"gt\"} />\r\n          <Picker.Item label=\"greater than or equal to\" value={\"gtet\"} />\r\n          <Picker.Item label=\"empty\" value={\"empty\"} />\r\n        </Picker>\r\n      </View>\r\n\r\n      {selectFilter()}\r\n      <View style={{ flexDirection: \"row\", marginHorizontal: 3 }}>\r\n        {selectedFilters\r\n          ? selectedFilters.map((item, index) => {\r\n              return (\r\n                <View\r\n                  style={{\r\n                    marginHorizontal: 2,\r\n                    flexDirection: \"row\",\r\n                    backgroundColor: \"black\",\r\n                    borderRadius: 15,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"white\",\r\n                      marginHorizontal: 1,\r\n                      textAlignVertical: \"center\",\r\n                    }}\r\n                  >\r\n                    {item}\r\n                  </Text>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      borderRadius: 15,\r\n                    }}\r\n                  >\r\n                    <Icon name=\"close\" color={\"white\"} size={20} />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              );\r\n            })\r\n          : console.log(\"EMPTY\")}\r\n      </View>\r\n      <CheckBox\r\n        title={\"Select All\"}\r\n        onPress={handleSelectAll}\r\n        checked={isCheckedAll}\r\n        containerStyle={styles.flatListItem}\r\n      />\r\n      {isLoading ? (\r\n        <View\r\n          style={{ flex: 3, justifyContent: \"center\", alignItems: \"center\" }}\r\n        >\r\n          <ActivityIndicator size={\"large\"} />\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={search ? filteredData : checkedMatNumber}\r\n          showsHorizontalScrollIndicator={false}\r\n          keyExtractor={(item, index) => \"key\" + index}\r\n          renderItem={ListViewType}\r\n        ></FlatList>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default MaterialNumberPage;\r\nconst styles = StyleSheet.create({\r\n  flatListItem: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 20,\r\n    padding: 20,\r\n    margin: 5,\r\n  },\r\n  textInputStyle: {\r\n    flex: 4,\r\n    height: 35,\r\n    margin: 10,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}