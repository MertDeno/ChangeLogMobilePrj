{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox } from 'react-native-elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchBarForCheckboxes from \"../components/SearchBarForCheckboxes\";\nimport SelectAllCheckbox from \"../components/SelectAllCheckbox\";\nimport style from \"../css/flatlistItem.component.style.js\";\nimport useChecked from \"../hooks/use-checked\";\nimport useSearch from \"../hooks/use-search\";\nimport useSelectAll from \"../hooks/use-select-all\";\nimport { changeLogActions } from \"../redux/change-log-reducers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction MaterialGroupPage(props) {\n  var _ref = [useState([]), useState([])],\n      _ref$ = _slicedToArray(_ref[0], 2),\n      materialGroups = _ref$[0],\n      setMaterialGroups = _ref$[1],\n      _ref$2 = _slicedToArray(_ref[1], 2),\n      filteredMaterialGroups = _ref$2[0],\n      setFilteredMaterialGroups = _ref$2[1];\n\n  var isCheckedAll = useSelector(function (state) {\n    return state.changeLog.isAllSelected;\n  });\n\n  var _useSelectAll = useSelectAll(materialGroups, filteredMaterialGroups, setFilteredMaterialGroups),\n      handleSelectAll = _useSelectAll.handleSelectAll;\n\n  var _useChecked = useChecked(materialGroups, setMaterialGroups, filteredMaterialGroups, setFilteredMaterialGroups),\n      handleOnChange = _useChecked.handleOnChange;\n\n  var _useSearch = useSearch(materialGroups, setFilteredMaterialGroups),\n      materialGroupSearchValue = _useSearch.searchValue,\n      materialGroupSearchHandler = _useSearch.searchHandler;\n\n  var dispatch = useDispatch();\n  var baseURL = Platform.OS === \"android\" ? \"http://10.0.2.2:8000/EtMatklSet\" : \"https://be96-24-133-107-93.eu.ngrok.io/EtMatklSet\";\n\n  var fetchApi = function fetchApi() {\n    var response, materialGroupResponse, fetchedMaterialGroupData;\n    return _regeneratorRuntime.async(function fetchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseURL));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            materialGroupResponse = _context.sent;\n\n            try {\n              fetchedMaterialGroupData = materialGroupResponse.map(function (materialGroupItem) {\n                return _objectSpread(_objectSpread({}, materialGroupItem), {}, {\n                  mainAttribute: 'Matkl',\n                  checked: false,\n                  key: Math.random().toString()\n                });\n              });\n              dispatch(changeLogActions.setFetchedElements(fetchedMaterialGroupData));\n              dispatch(changeLogActions.setCheckedAllAfterRendering(fetchedMaterialGroupData));\n              setMaterialGroups(fetchedMaterialGroupData);\n              setFilteredMaterialGroups(fetchedMaterialGroupData);\n            } catch (error) {\n              console.log(error);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchApi();\n    var timer = setTimeout(function () {}, 100);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  var ListViewType = function ListViewType(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return _jsx(CheckBox, {\n      containerStyle: style.flatListItem,\n      onPress: function onPress() {\n        handleOnChange(item.Matkl);\n      },\n      title: item.Matkl + \" - \" + item.Wgbez,\n      checked: item.checked\n    });\n  };\n\n  return _jsxs(View, {\n    flex: 1,\n    children: [_jsx(SearchBarForCheckboxes, {\n      value: materialGroupSearchValue,\n      onSearch: materialGroupSearchHandler\n    }), _jsx(SelectAllCheckbox, {\n      onChecked: handleSelectAll,\n      isChecked: isCheckedAll\n    }), _jsx(FlatList, {\n      data: filteredMaterialGroups,\n      keyExtractor: function keyExtractor(item, index) {\n        return 'key' + index;\n      },\n      showsHorizontalScrollIndicator: false,\n      renderItem: ListViewType\n    })]\n  });\n}\n\nexport default MaterialGroupPage;","map":{"version":3,"names":["React","useEffect","useState","CheckBox","useDispatch","useSelector","SearchBarForCheckboxes","SelectAllCheckbox","style","useChecked","useSearch","useSelectAll","changeLogActions","MaterialGroupPage","props","materialGroups","setMaterialGroups","filteredMaterialGroups","setFilteredMaterialGroups","isCheckedAll","state","changeLog","isAllSelected","handleSelectAll","handleOnChange","materialGroupSearchValue","searchValue","materialGroupSearchHandler","searchHandler","dispatch","baseURL","Platform","OS","fetchApi","fetch","response","json","materialGroupResponse","fetchedMaterialGroupData","map","materialGroupItem","mainAttribute","checked","key","Math","random","toString","setFetchedElements","setCheckedAllAfterRendering","error","console","log","timer","setTimeout","clearTimeout","ListViewType","item","index","flatListItem","Matkl","Wgbez"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/screens/MaterialGroupPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, Platform, View } from 'react-native';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchBarForCheckboxes from '../components/SearchBarForCheckboxes';\r\nimport SelectAllCheckbox from '../components/SelectAllCheckbox';\r\nimport style from '../css/flatlistItem.component.style.js';\r\nimport useChecked from '../hooks/use-checked';\r\nimport useSearch from '../hooks/use-search';\r\nimport useSelectAll from '../hooks/use-select-all';\r\nimport { changeLogActions } from '../redux/change-log-reducers';\r\n\r\nfunction MaterialGroupPage(props) {\r\n    const [\r\n        [materialGroups,setMaterialGroups], \r\n        [filteredMaterialGroups, setFilteredMaterialGroups],\r\n    ] = [useState([]), useState([])]\r\n\r\n    const isCheckedAll = useSelector(state => state.changeLog.isAllSelected)\r\n    const { handleSelectAll: handleSelectAll } = useSelectAll(materialGroups, filteredMaterialGroups, setFilteredMaterialGroups)\r\n    const { handleOnChange: handleOnChange } = useChecked(materialGroups, setMaterialGroups, filteredMaterialGroups, setFilteredMaterialGroups) \r\n    const { searchValue: materialGroupSearchValue, searchHandler: materialGroupSearchHandler } = useSearch(materialGroups, setFilteredMaterialGroups)\r\n    const dispatch = useDispatch()\r\n\r\n    var baseURL = Platform.OS === \"android\" ? (\"http://10.0.2.2:8000/EtMatklSet\") : (\"https://be96-24-133-107-93.eu.ngrok.io/EtMatklSet\")\r\n\r\n    const fetchApi = async() => {\r\n        const response = await fetch(baseURL)\r\n        const materialGroupResponse = await response.json()\r\n\r\n        try{\r\n            const fetchedMaterialGroupData = materialGroupResponse.map(materialGroupItem => (\r\n                {\r\n                    ...materialGroupItem,\r\n                    mainAttribute: 'Matkl',\r\n                    checked: false, \r\n                    key:Math.random().toString()\r\n                }\r\n            ))\r\n            \r\n            dispatch(changeLogActions.setFetchedElements(fetchedMaterialGroupData))\r\n            dispatch(changeLogActions.setCheckedAllAfterRendering(fetchedMaterialGroupData))\r\n            setMaterialGroups(fetchedMaterialGroupData)\r\n            setFilteredMaterialGroups(fetchedMaterialGroupData)\r\n        }\r\n        catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApi()\r\n        const timer = setTimeout(() => {\r\n        }, 100)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }        \r\n    }, [])\r\n\r\n    const ListViewType = ({item, index}) => {\r\n        return (\r\n          // Flat List Item\r\n            <CheckBox \r\n                containerStyle={style.flatListItem} \r\n                onPress={() => {handleOnChange(item.Matkl)}} \r\n                title={item.Matkl+\" - \"+item.Wgbez}\r\n                checked={item.checked}/>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View flex={1}>\r\n            <SearchBarForCheckboxes value={materialGroupSearchValue} onSearch={materialGroupSearchHandler}/>\r\n            <SelectAllCheckbox onChecked={handleSelectAll} isChecked={isCheckedAll}/> \r\n            <FlatList \r\n                data={filteredMaterialGroups}\r\n                keyExtractor={(item,index) => 'key'+index}\r\n                showsHorizontalScrollIndicator={false}\r\n                renderItem={ListViewType}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default MaterialGroupPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}