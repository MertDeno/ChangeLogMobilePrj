{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector } from 'react-redux';\nimport SnackbarComponent from \"../components/SnackbarComponent\";\nimport { Buffer } from \"buffer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction FilteredMaterialsList(props) {\n  var checkedElements = useSelector(function (state) {\n    return state.changeLog.checkedElements;\n  });\n  var sPath = checkedElements[0].sPath;\n  var oValue1 = checkedElements[0].oValue1;\n  var operator = checkedElements[0].operator;\n  var baseURL = \"https://93c3-24-133-107-93.eu.ngrok.io//EtMaterialListSet?$filter=\" + escape(sPath + \" \" + operator.toLowerCase() + \" '\" + oValue1 + \"'\");\n\n  var fetchApi = function fetchApi() {\n    var response, filteredMaterialsList;\n    return _regeneratorRuntime.async(function fetchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseURL, {\n              method: \"POST\",\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                sPath: oValue1\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            filteredMaterialsList = _context.sent;\n            console.log(filteredMaterialsList);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(baseURL);\n  useEffect(function () {\n    fetchApi();\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      height: \"100%\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: _jsx(SnackbarComponent, {\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: 'Successfully filtered.'\n      })\n    })\n  });\n}\n\nexport default FilteredMaterialsList;","map":{"version":3,"names":["React","useEffect","useSelector","SnackbarComponent","Buffer","FilteredMaterialsList","props","checkedElements","state","changeLog","sPath","oValue1","operator","baseURL","escape","toLowerCase","fetchApi","fetch","method","headers","Accept","body","JSON","stringify","response","json","filteredMaterialsList","console","log","flex","height","flexDirection","justifyContent","color"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/screens/FilteredMaterialsList.js"],"sourcesContent":["import React, { useEffect} from 'react';\r\nimport { Text, View, FlatList } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\nimport SnackbarComponent from '../components/SnackbarComponent';\r\nimport { Buffer } from \"buffer\";\r\n\r\nfunction FilteredMaterialsList(props) {\r\n    const checkedElements = useSelector(state => state.changeLog.checkedElements)\r\n    let sPath = checkedElements[0].sPath\r\n    let oValue1 = checkedElements[0].oValue1\r\n    let operator = checkedElements[0].operator\r\n\r\n    let baseURL = `https://93c3-24-133-107-93.eu.ngrok.io//EtMaterialListSet?$filter=${escape(`${sPath} ${operator.toLowerCase()} '${oValue1}'`)}`\r\n\r\n     const fetchApi = async() => {\r\n        const response = await fetch(baseURL,{\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                sPath: oValue1\r\n            })\r\n        })\r\n        const filteredMaterialsList = await response.json()\r\n        console.log(filteredMaterialsList)\r\n    } \r\n    \r\n    console.log(baseURL)\r\n    useEffect(() => {\r\n        fetchApi()\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{flex:1, height:\"100%\", flexDirection: \"column\", justifyContent: \"space-between\"}}>\r\n            <SnackbarComponent>\r\n                <Text style={{color:\"white\"}}>{'Successfully filtered.'}</Text>\r\n            </SnackbarComponent>   \r\n        </View>             \r\n    );\r\n}\r\n\r\nexport default FilteredMaterialsList;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EAClC,IAAMC,eAAe,GAAGL,WAAW,CAAC,UAAAM,KAAK;IAAA,OAAIA,KAAK,CAACC,SAAN,CAAgBF,eAApB;EAAA,CAAN,CAAnC;EACA,IAAIG,KAAK,GAAGH,eAAe,CAAC,CAAD,CAAf,CAAmBG,KAA/B;EACA,IAAIC,OAAO,GAAGJ,eAAe,CAAC,CAAD,CAAf,CAAmBI,OAAjC;EACA,IAAIC,QAAQ,GAAGL,eAAe,CAAC,CAAD,CAAf,CAAmBK,QAAlC;EAEA,IAAIC,OAAO,0EAAwEC,MAAM,CAAIJ,KAAJ,SAAaE,QAAQ,CAACG,WAAT,EAAb,UAAwCJ,OAAxC,OAAzF;;EAEC,IAAMK,QAAQ,GAAG,SAAXA,QAAW;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACSC,KAAK,CAACJ,OAAD,EAAS;cACjCK,MAAM,EAAE,MADyB;cAEjCC,OAAO,EAAE;gBACLC,MAAM,EAAE,kBADH;gBAEL,gBAAgB;cAFX,CAFwB;cAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACjBb,KAAK,EAAEC;cADU,CAAf;YAN2B,CAAT,CADd;;UAAA;YACRa,QADQ;YAAA;YAAA,iCAWsBA,QAAQ,CAACC,IAAT,EAXtB;;UAAA;YAWRC,qBAXQ;YAYdC,OAAO,CAACC,GAAR,CAAYF,qBAAZ;;UAZc;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAeDC,OAAO,CAACC,GAAR,CAAYf,OAAZ;EACAZ,SAAS,CAAC,YAAM;IACZe,QAAQ;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,OACI,KAAC,IAAD;IAAM,KAAK,EAAE;MAACa,IAAI,EAAC,CAAN;MAASC,MAAM,EAAC,MAAhB;MAAwBC,aAAa,EAAE,QAAvC;MAAiDC,cAAc,EAAE;IAAjE,CAAb;IAAA,UACI,KAAC,iBAAD;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAE;UAACC,KAAK,EAAC;QAAP,CAAb;QAAA,UAA+B;MAA/B;IADJ;EADJ,EADJ;AAOH;;AAED,eAAe5B,qBAAf"},"metadata":{},"sourceType":"module"}