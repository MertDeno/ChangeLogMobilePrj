{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox } from 'react-native-elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchBarForCheckboxes from \"../components/SearchBarForCheckboxes\";\nimport SelectAllCheckbox from \"../components/SelectAllCheckbox\";\nimport style from \"../css/flatlistItem.component.style.js\";\nimport useChecked from \"../hooks/use-checked\";\nimport useSearch from \"../hooks/use-search\";\nimport useSelectAll from \"../hooks/use-select-all\";\nimport { changeLogActions } from \"../redux/change-log-reducers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CreatedByPage() {\n  var _ref = [useState([]), useState([])],\n      _ref$ = _slicedToArray(_ref[0], 2),\n      creators = _ref$[0],\n      setCreators = _ref$[1],\n      _ref$2 = _slicedToArray(_ref[1], 2),\n      filteredCreators = _ref$2[0],\n      setFilteredCreators = _ref$2[1];\n\n  var isCheckedAll = useSelector(function (state) {\n    return state.changeLog.isAllSelected;\n  });\n\n  var _useChecked = useChecked(creators, setCreators, filteredCreators, setFilteredCreators),\n      handleOnChange = _useChecked.handleOnChange;\n\n  var _useSelectAll = useSelectAll(creators, filteredCreators, setFilteredCreators),\n      handleSelectAll = _useSelectAll.handleSelectAll;\n\n  var _useSearch = useSearch(creators, setFilteredCreators),\n      creatorValue = _useSearch.searchValue,\n      searchCreatorHandler = _useSearch.searchHandler;\n\n  var dispatch = useDispatch();\n  var baseURL = Platform.OS === \"android\" ? \"http://10.0.2.2:8000/EtFilterPersonalsSet\" : \"https://f755-24-133-107-93.eu.ngrok.io/EtFilterPersonalsSet\";\n\n  var ListViewType = function ListViewType(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return _jsx(CheckBox, {\n      containerStyle: style.flatListItem,\n      onPress: function onPress() {\n        handleOnChange(item.Uname);\n      },\n      title: item.Uname + \" - \" + item.FullName,\n      checked: item.checked\n    });\n  };\n\n  var fetchApi = function fetchApi() {\n    var response, personResult, fetchedSAPUsers;\n    return _regeneratorRuntime.async(function fetchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseURL));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            personResult = _context.sent;\n            fetchedSAPUsers = personResult.map(function (items) {\n              return _objectSpread(_objectSpread({}, items), {}, {\n                mainAttribute: 'Uname',\n                checked: false,\n                key: Math.random().toString()\n              });\n            });\n            dispatch(changeLogActions.setFetchedElements(fetchedSAPUsers));\n            dispatch(changeLogActions.setCheckedAllAfterRendering(fetchedSAPUsers));\n            setCreators(fetchedSAPUsers);\n            setFilteredCreators(fetchedSAPUsers);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  useEffect(function () {\n    fetchApi();\n    var timer = setTimeout(function () {}, 100);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, []);\n  return _jsxs(View, {\n    flex: 1,\n    children: [_jsx(SearchBarForCheckboxes, {\n      value: creatorValue,\n      onSearch: searchCreatorHandler\n    }), _jsx(SelectAllCheckbox, {\n      onChecked: handleSelectAll,\n      isChecked: isCheckedAll\n    }), _jsx(FlatList, {\n      data: filteredCreators,\n      showsHorizontalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item, index) {\n        return 'key' + index;\n      },\n      renderItem: ListViewType\n    })]\n  });\n}\n\nexport default CreatedByPage;","map":{"version":3,"names":["React","useEffect","useState","CheckBox","useDispatch","useSelector","SearchBarForCheckboxes","SelectAllCheckbox","style","useChecked","useSearch","useSelectAll","changeLogActions","CreatedByPage","creators","setCreators","filteredCreators","setFilteredCreators","isCheckedAll","state","changeLog","isAllSelected","handleOnChange","handleSelectAll","creatorValue","searchValue","searchCreatorHandler","searchHandler","dispatch","baseURL","Platform","OS","ListViewType","item","index","flatListItem","Uname","FullName","checked","fetchApi","fetch","response","json","personResult","fetchedSAPUsers","map","items","mainAttribute","key","Math","random","toString","setFetchedElements","setCheckedAllAfterRendering","console","log","timer","setTimeout","clearTimeout"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/screens/CreatedByPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, Platform, View } from 'react-native';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchBarForCheckboxes from '../components/SearchBarForCheckboxes';\r\nimport SelectAllCheckbox from '../components/SelectAllCheckbox';\r\nimport style from '../css/flatlistItem.component.style.js';\r\nimport useChecked from '../hooks/use-checked';\r\nimport useSearch from '../hooks/use-search';\r\nimport useSelectAll from '../hooks/use-select-all';\r\nimport { changeLogActions } from '../redux/change-log-reducers';\r\n\r\nfunction CreatedByPage() {\r\n    const [\r\n        [creators, setCreators], \r\n        [filteredCreators, setFilteredCreators]\r\n    ] = [useState([]), useState([])]\r\n\r\n    const isCheckedAll = useSelector(state => state.changeLog.isAllSelected)\r\n    const { handleOnChange: handleOnChange } = useChecked(creators, setCreators, filteredCreators, setFilteredCreators)\r\n    const { handleSelectAll: handleSelectAll } = useSelectAll(creators, filteredCreators, setFilteredCreators)\r\n    const { searchValue: creatorValue, searchHandler: searchCreatorHandler} = useSearch(creators, setFilteredCreators)\r\n    const dispatch = useDispatch()\r\n\r\n    var baseURL = Platform.OS === \"android\" ? (\"http://10.0.2.2:8000/EtFilterPersonalsSet\") : (\"https://f755-24-133-107-93.eu.ngrok.io/EtFilterPersonalsSet\")\r\n\r\n    const ListViewType = ({item, index}) => {\r\n        return (\r\n          // Flat List Item\r\n            <CheckBox \r\n                containerStyle={style.flatListItem} \r\n                onPress={() => {handleOnChange(item.Uname)}} \r\n                title={item.Uname+\" - \"+item.FullName}\r\n                checked={item.checked}/>\r\n        );\r\n    };\r\n\r\n    const fetchApi = async() => {\r\n        try{\r\n            const response = await fetch(baseURL)\r\n            const personResult = await response.json()\r\n\r\n            const fetchedSAPUsers = personResult.map(items => (\r\n                {\r\n                    ...items,\r\n                    mainAttribute: 'Uname',\r\n                    checked: false,\r\n                    key:Math.random().toString()\r\n                }\r\n            ))\r\n\r\n            dispatch(changeLogActions.setFetchedElements(fetchedSAPUsers))\r\n            dispatch(changeLogActions.setCheckedAllAfterRendering(fetchedSAPUsers))\r\n            setCreators(fetchedSAPUsers)\r\n            setFilteredCreators(fetchedSAPUsers)\r\n        }\r\n        catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApi()\r\n        const timer = setTimeout(() => {\r\n        }, 100)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }     \r\n    },[])\r\n\r\n    return (\r\n        <View flex={1}>\r\n            <SearchBarForCheckboxes value={creatorValue} onSearch={searchCreatorHandler}/>\r\n            <SelectAllCheckbox onChecked={handleSelectAll} isChecked={isCheckedAll}/>              \r\n            <FlatList \r\n                data={filteredCreators}\r\n                showsHorizontalScrollIndicator={false}\r\n                keyExtractor={(item, index) => 'key'+index}\r\n                renderItem={ListViewType}>\r\n            </FlatList>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default CreatedByPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}