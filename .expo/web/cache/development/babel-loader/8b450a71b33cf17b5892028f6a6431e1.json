{"ast":null,"code":"import { useDispatch, useSelector } from \"react-redux\";\nimport { changeLogActions } from \"../redux/change-log-reducers\";\n\nvar useSelectAll = function useSelectAll(list, filteredList, setFilteredList) {\n  var dispatch = useDispatch();\n  var checkedAll = useSelector(function (state) {\n    return state.changeLog.isAllSelected;\n  });\n\n  function handleSelectAll() {\n    dispatch(changeLogActions.setCheckedAll(!checkedAll));\n    debugger;\n\n    if (!checkedAll) {\n      if (filteredList.length === list.length) {\n        list.forEach(function (item) {\n          item.checked = !item.checked;\n        });\n        list.forEach(function (item) {\n          if (!item.checked) item.checked = true;\n        });\n        list.forEach(function (item) {\n          debugger;\n          dispatch(changeLogActions.addCheckedElements({\n            id: item[item.mainAttribute],\n            sPath: item.mainAttribute,\n            oValue1: item[item.mainAttribute],\n            operator: 'EQ',\n            checked: item.checked\n          }));\n        });\n      } else {\n        filteredList.forEach(function (item) {\n          item.checked = !item.checked;\n        });\n        filteredList.forEach(function (item) {\n          if (!item.checked) item.checked = true;\n        });\n        filteredList.forEach(function (item) {\n          dispatch(changeLogActions.addCheckedElements({\n            id: item[item.mainAttribute],\n            sPath: item.mainAttribute,\n            oValue1: item[item.mainAttribute],\n            operator: 'EQ',\n            checked: item.checked\n          }));\n        });\n      }\n    } else {\n      filteredList.forEach(function (item) {\n        item.checked = !item.checked;\n      });\n      filteredList.forEach(function (item) {\n        dispatch(changeLogActions.addCheckedElements({\n          id: item[item.mainAttribute],\n          sPath: item.mainAttribute,\n          oValue1: item[item.mainAttribute],\n          operator: 'EQ',\n          checked: item.checked\n        }));\n      });\n    }\n\n    setFilteredList(filteredList);\n  }\n\n  return {\n    handleSelectAll: handleSelectAll\n  };\n};\n\nexport default useSelectAll;","map":{"version":3,"names":["useDispatch","useSelector","changeLogActions","useSelectAll","list","filteredList","setFilteredList","dispatch","checkedAll","state","changeLog","isAllSelected","handleSelectAll","setCheckedAll","length","forEach","item","checked","addCheckedElements","id","mainAttribute","sPath","oValue1","operator"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/hooks/use-select-all.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\r\nimport { changeLogActions } from \"../redux/change-log-reducers\"\r\n\r\nconst useSelectAll = (list, filteredList, setFilteredList) => {\r\n    const dispatch = useDispatch()\r\n    const checkedAll = useSelector(state => state.changeLog.isAllSelected)\r\n    \r\n    function handleSelectAll(){\r\n        dispatch(changeLogActions.setCheckedAll(!checkedAll))\r\n\r\n        debugger\r\n        if(!checkedAll){\r\n            if(filteredList.length === list.length){\r\n                list.forEach((item) => {\r\n                    item.checked = !item.checked\r\n                })\r\n        \r\n                list.forEach((item) => {\r\n                    if(!item.checked)\r\n                        item.checked = true\r\n                })\r\n\r\n                list.forEach((item) => {\r\n                    debugger\r\n                    dispatch(changeLogActions.addCheckedElements({\r\n                        id: item[item.mainAttribute],\r\n                        sPath: item.mainAttribute,\r\n                        oValue1: item[item.mainAttribute],\r\n                        operator: 'EQ',\r\n                        checked: item.checked\r\n                    }))  \r\n                })  \r\n\r\n            }\r\n            else{\r\n                filteredList.forEach((item) => {\r\n                    item.checked = !item.checked\r\n                })\r\n    \r\n                filteredList.forEach((item) => {\r\n                    if(!item.checked)\r\n                        item.checked = true\r\n                })                \r\n\r\n                filteredList.forEach((item) => {\r\n                    dispatch(changeLogActions.addCheckedElements({\r\n                        id: item[item.mainAttribute],\r\n                        sPath: item.mainAttribute,\r\n                        oValue1: item[item.mainAttribute],\r\n                        operator: 'EQ',\r\n                        checked: item.checked\r\n                    }))  \r\n                })            \r\n            }              \r\n        }\r\n        else{\r\n            filteredList.forEach((item) => {\r\n                item.checked = !item.checked\r\n            })\r\n\r\n            filteredList.forEach((item) => {\r\n                dispatch(changeLogActions.addCheckedElements({\r\n                    id: item[item.mainAttribute],\r\n                    sPath: item.mainAttribute,\r\n                    oValue1: item[item.mainAttribute],\r\n                    operator: 'EQ',\r\n                    checked: item.checked\r\n                }))  \r\n            })               \r\n        }\r\n\r\n        setFilteredList(filteredList)\r\n    }\r\n\r\n    return {\r\n        handleSelectAll\r\n    }\r\n}\r\n\r\nexport default useSelectAll"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,YAAP,EAAqBC,eAArB,EAAyC;EAC1D,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,IAAMQ,UAAU,GAAGP,WAAW,CAAC,UAAAQ,KAAK;IAAA,OAAIA,KAAK,CAACC,SAAN,CAAgBC,aAApB;EAAA,CAAN,CAA9B;;EAEA,SAASC,eAAT,GAA0B;IACtBL,QAAQ,CAACL,gBAAgB,CAACW,aAAjB,CAA+B,CAACL,UAAhC,CAAD,CAAR;IAEA;;IACA,IAAG,CAACA,UAAJ,EAAe;MACX,IAAGH,YAAY,CAACS,MAAb,KAAwBV,IAAI,CAACU,MAAhC,EAAuC;QACnCV,IAAI,CAACW,OAAL,CAAa,UAACC,IAAD,EAAU;UACnBA,IAAI,CAACC,OAAL,GAAe,CAACD,IAAI,CAACC,OAArB;QACH,CAFD;QAIAb,IAAI,CAACW,OAAL,CAAa,UAACC,IAAD,EAAU;UACnB,IAAG,CAACA,IAAI,CAACC,OAAT,EACID,IAAI,CAACC,OAAL,GAAe,IAAf;QACP,CAHD;QAKAb,IAAI,CAACW,OAAL,CAAa,UAACC,IAAD,EAAU;UACnB;UACAT,QAAQ,CAACL,gBAAgB,CAACgB,kBAAjB,CAAoC;YACzCC,EAAE,EAAEH,IAAI,CAACA,IAAI,CAACI,aAAN,CADiC;YAEzCC,KAAK,EAAEL,IAAI,CAACI,aAF6B;YAGzCE,OAAO,EAAEN,IAAI,CAACA,IAAI,CAACI,aAAN,CAH4B;YAIzCG,QAAQ,EAAE,IAJ+B;YAKzCN,OAAO,EAAED,IAAI,CAACC;UAL2B,CAApC,CAAD,CAAR;QAOH,CATD;MAWH,CArBD,MAsBI;QACAZ,YAAY,CAACU,OAAb,CAAqB,UAACC,IAAD,EAAU;UAC3BA,IAAI,CAACC,OAAL,GAAe,CAACD,IAAI,CAACC,OAArB;QACH,CAFD;QAIAZ,YAAY,CAACU,OAAb,CAAqB,UAACC,IAAD,EAAU;UAC3B,IAAG,CAACA,IAAI,CAACC,OAAT,EACID,IAAI,CAACC,OAAL,GAAe,IAAf;QACP,CAHD;QAKAZ,YAAY,CAACU,OAAb,CAAqB,UAACC,IAAD,EAAU;UAC3BT,QAAQ,CAACL,gBAAgB,CAACgB,kBAAjB,CAAoC;YACzCC,EAAE,EAAEH,IAAI,CAACA,IAAI,CAACI,aAAN,CADiC;YAEzCC,KAAK,EAAEL,IAAI,CAACI,aAF6B;YAGzCE,OAAO,EAAEN,IAAI,CAACA,IAAI,CAACI,aAAN,CAH4B;YAIzCG,QAAQ,EAAE,IAJ+B;YAKzCN,OAAO,EAAED,IAAI,CAACC;UAL2B,CAApC,CAAD,CAAR;QAOH,CARD;MASH;IACJ,CA3CD,MA4CI;MACAZ,YAAY,CAACU,OAAb,CAAqB,UAACC,IAAD,EAAU;QAC3BA,IAAI,CAACC,OAAL,GAAe,CAACD,IAAI,CAACC,OAArB;MACH,CAFD;MAIAZ,YAAY,CAACU,OAAb,CAAqB,UAACC,IAAD,EAAU;QAC3BT,QAAQ,CAACL,gBAAgB,CAACgB,kBAAjB,CAAoC;UACzCC,EAAE,EAAEH,IAAI,CAACA,IAAI,CAACI,aAAN,CADiC;UAEzCC,KAAK,EAAEL,IAAI,CAACI,aAF6B;UAGzCE,OAAO,EAAEN,IAAI,CAACA,IAAI,CAACI,aAAN,CAH4B;UAIzCG,QAAQ,EAAE,IAJ+B;UAKzCN,OAAO,EAAED,IAAI,CAACC;QAL2B,CAApC,CAAD,CAAR;MAOH,CARD;IASH;;IAEDX,eAAe,CAACD,YAAD,CAAf;EACH;;EAED,OAAO;IACHO,eAAe,EAAfA;EADG,CAAP;AAGH,CA1ED;;AA4EA,eAAeT,YAAf"},"metadata":{},"sourceType":"module"}