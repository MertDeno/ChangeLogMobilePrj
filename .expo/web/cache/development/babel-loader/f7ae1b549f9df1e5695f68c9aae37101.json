{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isVisible\", \"containerStyle\", \"overlayStyle\", \"windowBackgroundColor\", \"overlayBackgroundColor\", \"onBackdropPress\", \"borderRadius\", \"width\", \"height\", \"fullScreen\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nimport { ScreenHeight, ScreenWidth } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Overlay = function Overlay(props) {\n  var children = props.children,\n      isVisible = props.isVisible,\n      containerStyle = props.containerStyle,\n      overlayStyle = props.overlayStyle,\n      windowBackgroundColor = props.windowBackgroundColor,\n      overlayBackgroundColor = props.overlayBackgroundColor,\n      onBackdropPress = props.onBackdropPress,\n      borderRadius = props.borderRadius,\n      width = props.width,\n      height = props.height,\n      fullScreen = props.fullScreen,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return _jsxs(Modal, _objectSpread(_objectSpread({\n    visible: isVisible,\n    onRequestClose: onBackdropPress,\n    transparent: true\n  }, rest), {}, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: onBackdropPress,\n      testID: \"RNE__Overlay__backdrop\",\n      children: _jsx(View, {\n        testID: \"overlayContainer\",\n        style: StyleSheet.flatten([styles.backdrop, {\n          backgroundColor: windowBackgroundColor\n        }, containerStyle])\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      pointerEvents: \"box-none\",\n      children: _jsx(View, {\n        style: StyleSheet.flatten([styles.overlay, {\n          borderRadius: borderRadius,\n          backgroundColor: overlayBackgroundColor,\n          width: width,\n          height: height\n        }, fullScreen && styles.fullscreen, overlayStyle]),\n        children: children\n      })\n    })]\n  }));\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool\n};\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: ScreenWidth - 80,\n  height: ScreenHeight - 180,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  }\n};\nvar styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%'\n  },\n  overlay: _objectSpread({\n    borderRadius: 5,\n    padding: 10\n  }, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0, 0, 0, .3)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowRadius: 4\n    }\n  }))\n});\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');","map":{"version":3,"names":["React","PropTypes","ViewPropTypes","withTheme","ScreenHeight","ScreenWidth","Overlay","props","children","isVisible","containerStyle","overlayStyle","windowBackgroundColor","overlayBackgroundColor","onBackdropPress","borderRadius","width","height","fullScreen","rest","StyleSheet","flatten","styles","backdrop","backgroundColor","container","overlay","fullscreen","propTypes","element","isRequired","bool","style","string","func","number","oneOfType","defaultProps","create","position","top","left","justifyContent","alignItems","flex","padding","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/node_modules/react-native-settings-view/node_modules/react-native-elements/src/overlay/Overlay.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { ScreenHeight, ScreenWidth } from '../helpers';\n\nconst Overlay = props => {\n  const {\n    children,\n    isVisible,\n    containerStyle,\n    overlayStyle,\n    windowBackgroundColor,\n    overlayBackgroundColor,\n    onBackdropPress,\n    borderRadius,\n    width,\n    height,\n    fullScreen,\n    ...rest\n  } = props;\n\n  return (\n    <Modal\n      visible={isVisible}\n      onRequestClose={onBackdropPress}\n      transparent\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        onPress={onBackdropPress}\n        testID=\"RNE__Overlay__backdrop\"\n      >\n        <View\n          testID=\"overlayContainer\"\n          style={StyleSheet.flatten([\n            styles.backdrop,\n            { backgroundColor: windowBackgroundColor },\n            containerStyle,\n          ])}\n        />\n      </TouchableWithoutFeedback>\n\n      <View style={styles.container} pointerEvents=\"box-none\">\n        <View\n          style={StyleSheet.flatten([\n            styles.overlay,\n            {\n              borderRadius,\n              backgroundColor: overlayBackgroundColor,\n              width,\n              height,\n            },\n            fullScreen && styles.fullscreen,\n            overlayStyle,\n          ])}\n        >\n          {children}\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool,\n};\n\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: ScreenWidth - 80,\n  height: ScreenHeight - 180,\n  onBackdropPress: () => null,\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    borderRadius: 5,\n    padding: 10,\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}