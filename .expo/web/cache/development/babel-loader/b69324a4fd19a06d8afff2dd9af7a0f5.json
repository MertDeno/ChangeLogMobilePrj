{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"bottom\", \"hidden\", \"left\", \"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Badge from \"./Badge\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar withBadge = function withBadge(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (WrappedComponent) {\n    var WithBadge = function WithBadge(props) {\n      var bottom = options.bottom,\n          _options$hidden = options.hidden,\n          hidden = _options$hidden === void 0 ? false : _options$hidden,\n          left = options.left,\n          containerStyle = options.containerStyle,\n          badgeProps = _objectWithoutProperties(options, _excluded);\n\n      var _options$right = options.right,\n          right = _options$right === void 0 ? -16 : _options$right,\n          _options$top = options.top,\n          top = _options$top === void 0 ? -1 : _options$top;\n\n      if (!value) {\n        right = -3;\n        top = 3;\n      }\n\n      var badgeValue = typeof value === 'function' ? value(props) : value;\n      return _jsxs(View, {\n        style: StyleSheet.flatten([styles.container, containerStyle]),\n        children: [_jsx(WrappedComponent, _objectSpread({}, props)), !hidden && _jsx(Badge, _objectSpread({\n          value: badgeValue,\n          status: \"error\",\n          containerStyle: StyleSheet.flatten([styles.badgeContainer, {\n            bottom: bottom,\n            left: left,\n            right: right,\n            top: top\n          }])\n        }, badgeProps))]\n      });\n    };\n\n    WithBadge.displayName = \"WithBadge(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n    return WithBadge;\n  };\n};\n\nvar styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute'\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative'\n  }\n});\nexport default withBadge;","map":{"version":3,"sources":["C:/Users/medepia/Desktop/React Native Projects/CR App/ChangeLogMobilePrj/node_modules/react-native-settings-view/node_modules/react-native-elements/src/badge/withBadge.js"],"names":["React","Badge","withBadge","value","options","WrappedComponent","WithBadge","props","bottom","hidden","left","containerStyle","badgeProps","right","top","badgeValue","StyleSheet","flatten","styles","container","badgeContainer","displayName","name","create","position","alignItems","justifyContent"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,KAAP;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,MAAQC,OAAR,uEAAkB,EAAlB;AAAA,SAAyB,UAAAC,gBAAgB,EAAI;AAC7D,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzB,UACEC,MADF,GAMIJ,OANJ,CACEI,MADF;AAAA,4BAMIJ,OANJ,CAEEK,MAFF;AAAA,UAEEA,MAFF,gCAEW,KAFX;AAAA,UAGEC,IAHF,GAMIN,OANJ,CAGEM,IAHF;AAAA,UAIEC,cAJF,GAMIP,OANJ,CAIEO,cAJF;AAAA,UAKKC,UALL,4BAMIR,OANJ;;AAQA,2BAAgCA,OAAhC,CAAMS,KAAN;AAAA,UAAMA,KAAN,+BAAc,CAAC,EAAf;AAAA,yBAAgCT,OAAhC,CAAmBU,GAAnB;AAAA,UAAmBA,GAAnB,6BAAyB,CAAC,CAA1B;;AAEA,UAAI,CAACX,KAAL,EAAY;AACVU,QAAAA,KAAK,GAAG,CAAC,CAAT;AACAC,QAAAA,GAAG,GAAG,CAAN;AACD;;AAED,UAAMC,UAAU,GAAG,OAAOZ,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACI,KAAD,CAAnC,GAA6CJ,KAAhE;AAEA,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,EAAmBR,cAAnB,CAAnB,CAAb;AAAA,mBACE,KAAC,gBAAD,oBAAsBJ,KAAtB,EADF,EAGG,CAACE,MAAD,IACC,KAAC,KAAD;AACE,UAAA,KAAK,EAAEM,UADT;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,cAAc,EAAEC,UAAU,CAACC,OAAX,CAAmB,CACjCC,MAAM,CAACE,cAD0B,EAEjC;AAAEZ,YAAAA,MAAM,EAANA,MAAF;AAAUE,YAAAA,IAAI,EAAJA,IAAV;AAAgBG,YAAAA,KAAK,EAALA,KAAhB;AAAuBC,YAAAA,GAAG,EAAHA;AAAvB,WAFiC,CAAnB;AAHlB,WAOMF,UAPN,EAJJ;AAAA,QADF;AAiBD,KAnCD;;AAqCAN,IAAAA,SAAS,CAACe,WAAV,mBAAqChB,gBAAgB,CAACgB,WAAjB,IACnChB,gBAAgB,CAACiB,IADkB,IAEnC,WAFF;AAIA,WAAOhB,SAAP;AACD,GA3CiB;AAAA,CAAlB;;AA6CA,IAAMY,MAAM,GAAGF,UAAU,CAACO,MAAX,CAAkB;AAC/BH,EAAAA,cAAc,EAAE;AACdI,IAAAA,QAAQ,EAAE;AADI,GADe;AAI/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTF,IAAAA,QAAQ,EAAE;AAHD;AAJoB,CAAlB,CAAf;AAWA,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport Badge from './Badge';\n\nconst withBadge = (value, options = {}) => WrappedComponent => {\n  const WithBadge = props => {\n    const {\n      bottom,\n      hidden = false,\n      left,\n      containerStyle,\n      ...badgeProps\n    } = options;\n\n    let { right = -16, top = -1 } = options;\n\n    if (!value) {\n      right = -3;\n      top = 3;\n    }\n\n    const badgeValue = typeof value === 'function' ? value(props) : value;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        <WrappedComponent {...props} />\n\n        {!hidden && (\n          <Badge\n            value={badgeValue}\n            status=\"error\"\n            containerStyle={StyleSheet.flatten([\n              styles.badgeContainer,\n              { bottom, left, right, top },\n            ])}\n            {...badgeProps}\n          />\n        )}\n      </View>\n    );\n  };\n\n  WithBadge.displayName = `WithBadge(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Component'})`;\n\n  return WithBadge;\n};\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute',\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n});\n\nexport default withBadge;\n"]},"metadata":{},"sourceType":"module"}