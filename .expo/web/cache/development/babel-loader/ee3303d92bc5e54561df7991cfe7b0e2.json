{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon, Divider } from 'react-native-elements';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function BaseRow(props) {\n  var onPress = props.onPress,\n      leftIcon = props.leftIcon,\n      text = props.text,\n      rightContent = props.rightContent,\n      textStyle = props.textStyle,\n      children = props.children,\n      dividerProps = props.dividerProps;\n  return _jsxs(TouchableOpacity, {\n    onPress: onPress,\n    children: [_jsxs(View, {\n      style: styles.containerItem,\n      children: [_jsxs(View, {\n        style: styles.containerRow,\n        children: [leftIcon && _jsx(Icon, _objectSpread({\n          containerStyle: styles.iconLeft\n        }, leftIcon)), _jsx(Text, {\n          style: [styles.text, textStyle],\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          children: text\n        }), _jsx(View, {\n          style: styles.rightContent,\n          children: rightContent\n        })]\n      }), children]\n    }), _jsx(Divider, _objectSpread({}, dividerProps))]\n  });\n}\nexport default BaseRow;","map":{"version":3,"sources":["C:/Users/medepia/Desktop/React Native Projects/CR App/ChangeLogMobilePrj/node_modules/react-native-settings-view/src/components/BaseRow/index.tsx"],"names":["React","Icon","Divider","styles","BaseRow","props","onPress","leftIcon","text","rightContent","textStyle","children","dividerProps","containerItem","containerRow","iconLeft"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,EAA0BC,OAA1B,QAAuD,uBAAvD;AAGA,OAAOC,MAAP;;;AAgDA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAA0D;AAC/D,MAAQC,OAAR,GAAqFD,KAArF,CAAQC,OAAR;AAAA,MAAiBC,QAAjB,GAAqFF,KAArF,CAAiBE,QAAjB;AAAA,MAA2BC,IAA3B,GAAqFH,KAArF,CAA2BG,IAA3B;AAAA,MAAiCC,YAAjC,GAAqFJ,KAArF,CAAiCI,YAAjC;AAAA,MAA+CC,SAA/C,GAAqFL,KAArF,CAA+CK,SAA/C;AAAA,MAA0DC,QAA1D,GAAqFN,KAArF,CAA0DM,QAA1D;AAAA,MAAoEC,YAApE,GAAqFP,KAArF,CAAoEO,YAApE;AAEA,SACE,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,OAA3B;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACU,aAApB;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,YAApB;AAAA,mBACGP,QAAQ,IAAI,KAAC,IAAD;AAAM,UAAA,cAAc,EAAEJ,MAAM,CAACY;AAA7B,WAA2CR,QAA3C,EADf,EAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,IAAR,EAAcE,SAAd,CAAb;AAAuC,UAAA,aAAa,EAAE,CAAtD;AAAyD,UAAA,aAAa,EAAC,MAAvE;AAAA,oBACGF;AADH,UAFF,EAKE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,YAApB;AAAA,oBACGA;AADH,UALF;AAAA,QADF,EAUGE,QAVH;AAAA,MADF,EAaE,KAAC,OAAD,oBAAaC,YAAb,EAbF;AAAA,IADF;AAiBD;AAED,eAAeR,OAAf","sourcesContent":["// Dependencies\nimport React from 'react';\nimport { View, Text, StyleProp, TouchableOpacity, TextStyle } from 'react-native';\nimport { Icon, IconProps, Divider, DividerProps } from 'react-native-elements';\n\n// Styles\nimport styles from './styles';\n\n/**\n * @interface BaseRowProps\n * @description The properties definition of base row.\n */\nexport interface BaseRowProps {\n  /**\n   * The on press function for the row.\n   */\n  onPress?: () => void;\n\n  /**\n   * The properties for the left icon.\n   */\n  leftIcon: IconProps;\n\n  /**\n   * The text of the row.\n   */\n  text: string;\n\n  /**\n   * The content at the rigth side of the row.\n   */\n  rightContent: React.ReactNode;\n\n  /**\n   * The styles applied to the text.\n   */\n  textStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The content of the row.\n   */\n  children: React.ReactNode;\n\n  /**\n   * The properties for the divider of row.\n   */\n  dividerProps: DividerProps;\n}\n\n/**\n * @component BaseRow\n * @author Daniel Mejia\n * @description Common row component for settings list.\n */\nexport function BaseRow(props: BaseRowProps): React.ReactElement {\n  const { onPress, leftIcon, text, rightContent, textStyle, children, dividerProps } = props;\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.containerItem}>\n        <View style={styles.containerRow}>\n          {leftIcon && <Icon containerStyle={styles.iconLeft} {...leftIcon} />}\n          <Text style={[styles.text, textStyle]} numberOfLines={1} ellipsizeMode=\"tail\">\n            {text}\n          </Text>\n          <View style={styles.rightContent}>\n            {rightContent}\n          </View>\n        </View>\n        {children}\n      </View>\n      <Divider {...dividerProps} />\n    </TouchableOpacity>\n  );\n}\n\nexport default BaseRow;\n"]},"metadata":{},"sourceType":"module"}