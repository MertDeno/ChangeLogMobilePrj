{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction FilterPageButton(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBtnDisabled = _useState2[0],\n      setIsBtnDisabled = _useState2[1];\n\n  var checkedElements = useSelector(function (state) {\n    return state.changeLog.checkedElements;\n  });\n  useEffect(function () {\n    checkedElements.length > 0 ? setIsBtnDisabled(false) : setIsBtnDisabled(true);\n  }, [checkedElements]);\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.containerViewStyle,\n      children: [_jsx(TouchableOpacity, {\n        disabled: isBtnDisabled,\n        onPress: props.onFilter,\n        style: [styles.btnStyle, {\n          backgroundColor: isBtnDisabled ? \"grey\" : \"rgb(53,74,95)\"\n        }],\n        children: _jsx(Text, {\n          style: {\n            color: \"#fff\"\n          },\n          children: \"Filter\"\n        })\n      }), _jsx(TouchableOpacity, {\n        disabled: isBtnDisabled,\n        onPress: props.onReset,\n        style: [styles.btnStyle, {\n          backgroundColor: isBtnDisabled ? \"grey\" : \"rgb(53,74,95)\"\n        }],\n        children: _jsx(Text, {\n          style: {\n            color: \"#fff\"\n          },\n          children: \"Reset\"\n        })\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  btnStyle: {\n    borderRadius: 20,\n    marginVertical: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 120,\n    padding: 10\n  },\n  containerViewStyle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  }\n});\nexport default FilterPageButton;","map":{"version":3,"names":["React","useEffect","useState","useSelector","FilterPageButton","props","isBtnDisabled","setIsBtnDisabled","checkedElements","state","changeLog","length","styles","containerViewStyle","onFilter","btnStyle","backgroundColor","color","onReset","StyleSheet","create","borderRadius","marginVertical","alignItems","justifyContent","width","padding","flexDirection"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/components/FilterPageButton.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction FilterPageButton(props) {\r\n    const [isBtnDisabled, setIsBtnDisabled] = useState(false)\r\n\r\n    const checkedElements = useSelector(state => state.changeLog.checkedElements)\r\n\r\n    useEffect(() => {\r\n        checkedElements.length > 0 ? setIsBtnDisabled(false) : setIsBtnDisabled(true) \r\n    }, [checkedElements])\r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.containerViewStyle}>\r\n                <TouchableOpacity \r\n                    disabled={isBtnDisabled}\r\n                    onPress={props.onFilter}\r\n                    style={[styles.btnStyle ,{backgroundColor: isBtnDisabled ? \"grey\" : \"rgb(53,74,95)\" }]}>\r\n                    <Text style={{ color: \"#fff\" }}>Filter</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                    disabled={isBtnDisabled}\r\n                    onPress={props.onReset}\r\n                    style={[styles.btnStyle ,{backgroundColor: isBtnDisabled ? \"grey\" : \"rgb(53,74,95)\" }]}>\r\n                    <Text style={{ color: \"#fff\" }}>Reset</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    btnStyle: { \r\n        borderRadius: 20, \r\n        marginVertical: 25, \r\n        alignItems: \"center\", \r\n        justifyContent: \"center\", \r\n        width: 120,\r\n        padding:10 \r\n    },\r\n    containerViewStyle: { \r\n        flexDirection:\"row\", \r\n        justifyContent:\"space-evenly\", \r\n        width: \"100%\"\r\n    }\r\n})\r\n\r\nexport default FilterPageButton;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAC7B,gBAA0CH,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOI,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,IAAMC,eAAe,GAAGL,WAAW,CAAC,UAAAM,KAAK;IAAA,OAAIA,KAAK,CAACC,SAAN,CAAgBF,eAApB;EAAA,CAAN,CAAnC;EAEAP,SAAS,CAAC,YAAM;IACZO,eAAe,CAACG,MAAhB,GAAyB,CAAzB,GAA6BJ,gBAAgB,CAAC,KAAD,CAA7C,GAAuDA,gBAAgB,CAAC,IAAD,CAAvE;EACH,CAFQ,EAEN,CAACC,eAAD,CAFM,CAAT;EAIA,OACI,KAAC,IAAD;IAAA,UACI,MAAC,IAAD;MAAM,KAAK,EAAEI,MAAM,CAACC,kBAApB;MAAA,WACI,KAAC,gBAAD;QACI,QAAQ,EAAEP,aADd;QAEI,OAAO,EAAED,KAAK,CAACS,QAFnB;QAGI,KAAK,EAAE,CAACF,MAAM,CAACG,QAAR,EAAkB;UAACC,eAAe,EAAEV,aAAa,GAAG,MAAH,GAAY;QAA3C,CAAlB,CAHX;QAAA,UAII,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEW,KAAK,EAAE;UAAT,CAAb;UAAA;QAAA;MAJJ,EADJ,EAOI,KAAC,gBAAD;QACI,QAAQ,EAAEX,aADd;QAEI,OAAO,EAAED,KAAK,CAACa,OAFnB;QAGI,KAAK,EAAE,CAACN,MAAM,CAACG,QAAR,EAAkB;UAACC,eAAe,EAAEV,aAAa,GAAG,MAAH,GAAY;QAA3C,CAAlB,CAHX;QAAA,UAII,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEW,KAAK,EAAE;UAAT,CAAb;UAAA;QAAA;MAJJ,EAPJ;IAAA;EADJ,EADJ;AAkBH;;AAED,IAAML,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC7BL,QAAQ,EAAE;IACNM,YAAY,EAAE,EADR;IAENC,cAAc,EAAE,EAFV;IAGNC,UAAU,EAAE,QAHN;IAINC,cAAc,EAAE,QAJV;IAKNC,KAAK,EAAE,GALD;IAMNC,OAAO,EAAC;EANF,CADmB;EAS7Bb,kBAAkB,EAAE;IAChBc,aAAa,EAAC,KADE;IAEhBH,cAAc,EAAC,cAFC;IAGhBC,KAAK,EAAE;EAHS;AATS,CAAlB,CAAf;AAgBA,eAAerB,gBAAf"},"metadata":{},"sourceType":"module"}