{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"name\", \"size\", \"color\", \"iconStyle\", \"underlayColor\", \"reverse\", \"raised\", \"containerStyle\", \"reverseColor\", \"disabled\", \"disabledStyle\", \"onPress\", \"Component\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport getIconType from \"../helpers/getIconType\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Icon = function Icon(props) {\n  var type = props.type,\n      name = props.name,\n      size = props.size,\n      color = props.color,\n      iconStyle = props.iconStyle,\n      underlayColor = props.underlayColor,\n      reverse = props.reverse,\n      raised = props.raised,\n      containerStyle = props.containerStyle,\n      reverseColor = props.reverseColor,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      onPress = props.onPress,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? onPress ? TouchableHighlight : View : _props$Component,\n      attributes = _objectWithoutProperties(props, _excluded);\n\n  var IconComponent = getIconType(type);\n\n  var getBackgroundColor = function getBackgroundColor() {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? 'white' : 'transparent';\n  };\n\n  return _jsx(View, {\n    style: containerStyle && containerStyle,\n    children: _jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, attributes), {}, {\n      underlayColor: reverse ? color : underlayColor || color,\n      style: StyleSheet.flatten([(reverse || raised) && styles.button, (reverse || raised) && {\n        borderRadius: size + 4,\n        height: size * 2 + 4,\n        width: size * 2 + 4\n      }, raised && styles.raised, {\n        backgroundColor: getBackgroundColor(),\n        alignItems: 'center',\n        justifyContent: 'center'\n      }, disabled && styles.disabled, disabled && disabledStyle])\n    }, onPress && {\n      disabled: disabled\n    }), {}, {\n      onPress: onPress,\n      children: _jsx(IconComponent, {\n        testID: \"iconIcon\",\n        style: StyleSheet.flatten([{\n          backgroundColor: 'transparent'\n        }, iconStyle && iconStyle]),\n        size: size,\n        name: name,\n        color: reverse ? reverseColor : color\n      })\n    }))\n  });\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style\n};\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n  disabled: false,\n  type: 'material'\n};\nvar styles = StyleSheet.create({\n  button: {\n    margin: 7\n  },\n  raised: _objectSpread({}, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  disabled: {\n    backgroundColor: '#D1D5D8'\n  }\n});\nexport { Icon };\nexport default withTheme(Icon, 'Icon');","map":{"version":3,"names":["React","PropTypes","getIconType","ViewPropTypes","withTheme","Icon","props","type","name","size","color","iconStyle","underlayColor","reverse","raised","containerStyle","reverseColor","disabled","disabledStyle","onPress","Component","TouchableHighlight","View","attributes","IconComponent","getBackgroundColor","StyleSheet","flatten","styles","button","borderRadius","height","width","backgroundColor","alignItems","justifyContent","propTypes","string","number","elementType","bool","style","NativeText","func","defaultProps","create","margin","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/node_modules/react-native-settings-view/node_modules/react-native-elements/src/icons/Icon.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  Text as NativeText,\n} from 'react-native';\n\nimport getIconType from '../helpers/getIconType';\nimport { ViewPropTypes, withTheme } from '../config';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    disabled,\n    disabledStyle,\n    onPress,\n    Component = onPress ? TouchableHighlight : View,\n    ...attributes\n  } = props;\n\n  const IconComponent = getIconType(type);\n  const getBackgroundColor = () => {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? 'white' : 'transparent';\n  };\n\n  return (\n    <View style={containerStyle && containerStyle}>\n      <Component\n        {...attributes}\n        underlayColor={reverse ? color : underlayColor || color}\n        style={StyleSheet.flatten([\n          (reverse || raised) && styles.button,\n          (reverse || raised) && {\n            borderRadius: size + 4,\n            height: size * 2 + 4,\n            width: size * 2 + 4,\n          },\n          raised && styles.raised,\n          {\n            backgroundColor: getBackgroundColor(),\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n          disabled && styles.disabled,\n          disabled && disabledStyle,\n        ])}\n        {...onPress && { disabled }}\n        onPress={onPress}\n      >\n        <IconComponent\n          testID=\"iconIcon\"\n          style={StyleSheet.flatten([\n            { backgroundColor: 'transparent' },\n            iconStyle && iconStyle,\n          ])}\n          size={size}\n          name={name}\n          color={reverse ? reverseColor : color}\n        />\n      </Component>\n    </View>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n  disabled: false,\n  type: 'material',\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  },\n  disabled: {\n    backgroundColor: '#D1D5D8',\n  },\n});\n\nexport { Icon };\nexport default withTheme(Icon, 'Icon');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}