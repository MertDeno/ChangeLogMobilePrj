{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialChangeLogState = {\n  checkedElements: [],\n  isAllSelected: false,\n  showSnackbar: false\n};\nvar changeLogSlice = createSlice({\n  name: 'ChangeLogSlice',\n  initialState: initialChangeLogState,\n  reducers: {\n    addCheckedElements: function addCheckedElements(state, action) {\n      debugger;\n      var existingItem = state.checkedElements.find(function (item) {\n        return item.id === action.payload.id;\n      });\n\n      if (!existingItem) {\n        state.checkedElements.push(action.payload);\n      } else if (action.payload.checked && existingItem.checked) {\n        return;\n      } else {\n        state.checkedElements = state.checkedElements.filter(function (item) {\n          return item.id !== action.payload.id;\n        });\n      }\n    },\n    setCheckedAll: function setCheckedAll(state, action) {\n      debugger;\n      state.isAllSelected = action.payload;\n    },\n    setCheckedAllAfterRendering: function setCheckedAllAfterRendering(state, action) {\n      debugger;\n      state.isAllSelected = action.payload.every(function (element) {\n        return element.checked === true;\n      });\n    },\n    setFetchedElements: function setFetchedElements(state, action) {\n      debugger;\n\n      if (state.checkedElements) {\n        var newArray = action.payload;\n        var newArrayChecked = state.checkedElements;\n        newArray.forEach(function (element) {\n          for (var index = 0; index < newArrayChecked.length; index++) {\n            var item = newArrayChecked[index];\n            debugger;\n\n            if (element[element.mainAttribute] === item.oValue1 && element.mainAttribute === item.sPath) {\n              element.checked = true;\n            }\n          }\n        });\n      } else {\n        return;\n      }\n    },\n    resetFilterList: function resetFilterList(state) {\n      if (state.checkedElements.length > 0) state.checkedElements = [];\n    },\n    setShowSnackbar: function setShowSnackbar(state, action) {\n      state.showSnackbar = action.payload;\n    }\n  }\n});\nexport default changeLogSlice.reducer;\nexport var changeLogActions = changeLogSlice.actions;","map":{"version":3,"names":["createSlice","initialChangeLogState","checkedElements","isAllSelected","showSnackbar","changeLogSlice","name","initialState","reducers","addCheckedElements","state","action","existingItem","find","item","id","payload","push","checked","filter","setCheckedAll","setCheckedAllAfterRendering","every","element","setFetchedElements","newArray","newArrayChecked","forEach","index","length","mainAttribute","oValue1","sPath","resetFilterList","setShowSnackbar","reducer","changeLogActions","actions"],"sources":["C:/Users/T470/Desktop/Programming/MedepiaChangeLogMobileApp/assets/redux/change-log-reducers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialChangeLogState = { checkedElements: [], isAllSelected: false, showSnackbar: false }\r\n\r\nconst changeLogSlice =  createSlice({\r\n    name: 'ChangeLogSlice',\r\n    initialState: initialChangeLogState,\r\n    reducers: ({\r\n        addCheckedElements(state, action){\r\n            debugger\r\n            const existingItem = state.checkedElements.find((item) => \r\n                item.id === action.payload.id    \r\n            )\r\n\r\n            if(!existingItem){\r\n                state.checkedElements.push(action.payload)\r\n            }\r\n            \r\n            else if(action.payload.checked && existingItem.checked){\r\n                return\r\n            }\r\n            \r\n            else {\r\n                state.checkedElements = state.checkedElements.filter(item=>item.id !== action.payload.id)\r\n            }\r\n        },\r\n        setCheckedAll(state, action){\r\n            debugger\r\n            state.isAllSelected = action.payload\r\n        },\r\n        setCheckedAllAfterRendering(state, action){\r\n            debugger\r\n            state.isAllSelected = action.payload.every(element => element.checked === true)\r\n        },\r\n        setFetchedElements(state, action){\r\n            debugger\r\n            if(state.checkedElements){\r\n                const newArray = action.payload\r\n                const newArrayChecked = state.checkedElements\r\n\r\n                newArray.forEach(element => {\r\n                    for (let index = 0; index < newArrayChecked.length; index++) {\r\n                        const item = newArrayChecked[index];\r\n                        debugger\r\n                        if(element[element.mainAttribute] === item.oValue1 && element.mainAttribute === item.sPath){\r\n                            element.checked = true\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                return\r\n            }\r\n        },\r\n/*         resetSearchValueToDefault(state){\r\n            state.searchValue = ''\r\n        }, */\r\n        resetFilterList(state){\r\n            if(state.checkedElements.length > 0)\r\n                state.checkedElements = []\r\n        },\r\n        setShowSnackbar(state, action){\r\n            state.showSnackbar = action.payload\r\n        }\r\n    })\r\n})\r\n\r\nexport default changeLogSlice.reducer\r\nexport const changeLogActions = changeLogSlice.actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,qBAAqB,GAAG;EAAEC,eAAe,EAAE,EAAnB;EAAuBC,aAAa,EAAE,KAAtC;EAA6CC,YAAY,EAAE;AAA3D,CAA9B;AAEA,IAAMC,cAAc,GAAIL,WAAW,CAAC;EAChCM,IAAI,EAAE,gBAD0B;EAEhCC,YAAY,EAAEN,qBAFkB;EAGhCO,QAAQ,EAAG;IACPC,kBADO,8BACYC,KADZ,EACmBC,MADnB,EAC0B;MAC7B;MACA,IAAMC,YAAY,GAAGF,KAAK,CAACR,eAAN,CAAsBW,IAAtB,CAA2B,UAACC,IAAD;QAAA,OAC5CA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EADiB;MAAA,CAA3B,CAArB;;MAIA,IAAG,CAACH,YAAJ,EAAiB;QACbF,KAAK,CAACR,eAAN,CAAsBe,IAAtB,CAA2BN,MAAM,CAACK,OAAlC;MACH,CAFD,MAIK,IAAGL,MAAM,CAACK,OAAP,CAAeE,OAAf,IAA0BN,YAAY,CAACM,OAA1C,EAAkD;QACnD;MACH,CAFI,MAIA;QACDR,KAAK,CAACR,eAAN,GAAwBQ,KAAK,CAACR,eAAN,CAAsBiB,MAAtB,CAA6B,UAAAL,IAAI;UAAA,OAAEA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAA7B;QAAA,CAAjC,CAAxB;MACH;IACJ,CAlBM;IAmBPK,aAnBO,yBAmBOV,KAnBP,EAmBcC,MAnBd,EAmBqB;MACxB;MACAD,KAAK,CAACP,aAAN,GAAsBQ,MAAM,CAACK,OAA7B;IACH,CAtBM;IAuBPK,2BAvBO,uCAuBqBX,KAvBrB,EAuB4BC,MAvB5B,EAuBmC;MACtC;MACAD,KAAK,CAACP,aAAN,GAAsBQ,MAAM,CAACK,OAAP,CAAeM,KAAf,CAAqB,UAAAC,OAAO;QAAA,OAAIA,OAAO,CAACL,OAAR,KAAoB,IAAxB;MAAA,CAA5B,CAAtB;IACH,CA1BM;IA2BPM,kBA3BO,8BA2BYd,KA3BZ,EA2BmBC,MA3BnB,EA2B0B;MAC7B;;MACA,IAAGD,KAAK,CAACR,eAAT,EAAyB;QACrB,IAAMuB,QAAQ,GAAGd,MAAM,CAACK,OAAxB;QACA,IAAMU,eAAe,GAAGhB,KAAK,CAACR,eAA9B;QAEAuB,QAAQ,CAACE,OAAT,CAAiB,UAAAJ,OAAO,EAAI;UACxB,KAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,eAAe,CAACG,MAA5C,EAAoDD,KAAK,EAAzD,EAA6D;YACzD,IAAMd,IAAI,GAAGY,eAAe,CAACE,KAAD,CAA5B;YACA;;YACA,IAAGL,OAAO,CAACA,OAAO,CAACO,aAAT,CAAP,KAAmChB,IAAI,CAACiB,OAAxC,IAAmDR,OAAO,CAACO,aAAR,KAA0BhB,IAAI,CAACkB,KAArF,EAA2F;cACvFT,OAAO,CAACL,OAAR,GAAkB,IAAlB;YACH;UACJ;QACJ,CARD;MASH,CAbD,MAcI;QACA;MACH;IACJ,CA9CM;IAkDPe,eAlDO,2BAkDSvB,KAlDT,EAkDe;MAClB,IAAGA,KAAK,CAACR,eAAN,CAAsB2B,MAAtB,GAA+B,CAAlC,EACInB,KAAK,CAACR,eAAN,GAAwB,EAAxB;IACP,CArDM;IAsDPgC,eAtDO,2BAsDSxB,KAtDT,EAsDgBC,MAtDhB,EAsDuB;MAC1BD,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACK,OAA5B;IACH;EAxDM;AAHqB,CAAD,CAAnC;AA+DA,eAAeX,cAAc,CAAC8B,OAA9B;AACA,OAAO,IAAMC,gBAAgB,GAAG/B,cAAc,CAACgC,OAAxC"},"metadata":{},"sourceType":"module"}